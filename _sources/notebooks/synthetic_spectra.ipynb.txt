{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "1306cacf",
   "metadata": {},
   "source": [
    "# Generating Synthetic Data\n",
    "In data analysis, it is important that we have the ability to test our assumptions. One powerful tool to enable these tests is simulation. In 3ML, we have several ways to generate synthetic data sets both from models and from fits."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf39b706",
   "metadata": {},
   "source": [
    "## Synthetic data from spectra"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9ac717b9",
   "metadata": {},
   "source": [
    "### Genertating data from models\n",
    "\n",
    "Most of the current plugins support the ability to generate synthetic data directly from a model. This can be very useful to assertain the detectability of a source/component/line or simply to see how models look once they are transformed into data. Below we will demonstrate how different plugins transform a model into synthetic data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "90338be4",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "In many of the examples, the basic XYLike plugin has been used to generate synthetic data. Here, we will revisit the plugin for completeness.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "36d21ce8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:27.386695Z",
     "iopub.status.busy": "2022-10-04T06:45:27.386273Z",
     "iopub.status.idle": "2022-10-04T06:45:27.395804Z",
     "shell.execute_reply": "2022-10-04T06:45:27.394791Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "509614e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:27.399630Z",
     "iopub.status.busy": "2022-10-04T06:45:27.399350Z",
     "iopub.status.idle": "2022-10-04T06:45:31.286497Z",
     "shell.execute_reply": "2022-10-04T06:45:31.285438Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:29 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The naima package is not available. Models that depend on it will not be         </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">48</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                         </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:29\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The naima package is not available. Models that depend on it will not be        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=164539;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=747999;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\u001b\\\u001b[2m48\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it  </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">69</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">will not be available.                                                            </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=539733;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=311032;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\u001b\\\u001b[2m69\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mwill not be available.                                                           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:30 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The ebltable package is not available. Models that depend on it will not be     </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">absorption.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#36\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">36</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                        </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:30\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The ebltable package is not available. Models that depend on it will not be    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=1862;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\u001b\\\u001b[2mabsorption.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=575166;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#36\u001b\\\u001b[2m36\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> We have set the min_value of K to </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1e-99</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> because there was a postive transform   </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">parameter.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py#704\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">704</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m We have set the min_value of K to \u001b[0m\u001b[1;37m1e-99\u001b[0m\u001b[1;38;5;251m because there was a postive transform  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=240743;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py\u001b\\\u001b[2mparameter.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=777498;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py#704\u001b\\\u001b[2m704\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> We have set the min_value of K to </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1e-99</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> because there was a postive transform   </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">parameter.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py#704\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">704</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m We have set the min_value of K to \u001b[0m\u001b[1;37m1e-99\u001b[0m\u001b[1;38;5;251m because there was a postive transform  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=49602;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py\u001b\\\u001b[2mparameter.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=255988;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py#704\u001b\\\u001b[2m704\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> We have set the min_value of K to </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1e-99</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> because there was a postive transform   </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">parameter.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py#704\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">704</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m We have set the min_value of K to \u001b[0m\u001b[1;37m1e-99\u001b[0m\u001b[1;38;5;251m because there was a postive transform  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=743016;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py\u001b\\\u001b[2mparameter.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=347625;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py#704\u001b\\\u001b[2m704\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> We have set the min_value of K to </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1e-99</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> because there was a postive transform   </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">parameter.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py#704\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">704</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m We have set the min_value of K to \u001b[0m\u001b[1;37m1e-99\u001b[0m\u001b[1;38;5;251m because there was a postive transform  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=604256;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py\u001b\\\u001b[2mparameter.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=159922;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py#704\u001b\\\u001b[2m704\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> We have set the min_value of F to </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1e-99</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> because there was a postive transform   </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">parameter.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py#704\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">704</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m We have set the min_value of F to \u001b[0m\u001b[1;37m1e-99\u001b[0m\u001b[1;38;5;251m because there was a postive transform  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=856033;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py\u001b\\\u001b[2mparameter.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=573916;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py#704\u001b\\\u001b[2m704\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> We have set the min_value of K to </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1e-99</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> because there was a postive transform   </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">parameter.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py#704\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">704</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m We have set the min_value of K to \u001b[0m\u001b[1;37m1e-99\u001b[0m\u001b[1;38;5;251m because there was a postive transform  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=176621;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py\u001b\\\u001b[2mparameter.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=72231;file:///opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/astromodels/core/parameter.py#704\u001b\\\u001b[2m704\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.io.package_data import get_path_of_data_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "cac7094b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:31.291019Z",
     "iopub.status.busy": "2022-10-04T06:45:31.290615Z",
     "iopub.status.idle": "2022-10-04T06:45:31.329271Z",
     "shell.execute_reply": "2022-10-04T06:45:31.328307Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "bcd6f979",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:31.333455Z",
     "iopub.status.busy": "2022-10-04T06:45:31.333174Z",
     "iopub.status.idle": "2022-10-04T06:45:33.932784Z",
     "shell.execute_reply": "2022-10-04T06:45:33.931691Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:31 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#92\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">92</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:31\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=284595;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=279856;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#92\u001b\\\u001b[2m92\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:33 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#92\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">92</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:33\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=214948;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=672821;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#92\u001b\\\u001b[2m92\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Select an astromodels function to from which to simualte\n",
    "generating_function = Powerlaw(K=1.0, index=-2, piv=10.0)\n",
    "\n",
    "# set up the x grig points\n",
    "x_points = np.logspace(0, 2, 50)\n",
    "\n",
    "# call the from_function classmethod\n",
    "xyl_generator = XYLike.from_function(\n",
    "    \"sim_data\",\n",
    "    function=generating_function,\n",
    "    x=x_points,\n",
    "    yerr=0.3 * generating_function(x_points),\n",
    ")\n",
    "\n",
    "\n",
    "fig = xyl_generator.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6543bcf",
   "metadata": {},
   "source": [
    "#### SpectrumLike\n",
    "\n",
    "Generating synthetic spectra from SpectrumLike (non-energy dispersed count spectra) can take many forms with different inputs.\n",
    "\n",
    "First, let's set the energy bins we will use for all generated spectra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "eed06f2b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:33.936712Z",
     "iopub.status.busy": "2022-10-04T06:45:33.936457Z",
     "iopub.status.idle": "2022-10-04T06:45:33.941134Z",
     "shell.execute_reply": "2022-10-04T06:45:33.940238Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "energies = np.logspace(0, 2, 51)\n",
    "\n",
    "# create the low and high energy bin edges\n",
    "low_edge = energies[:-1]\n",
    "high_edge = energies[1:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8cc787c",
   "metadata": {},
   "source": [
    "Now, let's use a blackbody for the source spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fa4394f5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:33.945196Z",
     "iopub.status.busy": "2022-10-04T06:45:33.944781Z",
     "iopub.status.idle": "2022-10-04T06:45:33.949290Z",
     "shell.execute_reply": "2022-10-04T06:45:33.948470Z"
    }
   },
   "outputs": [],
   "source": [
    "# get a BPL source function\n",
    "source_function = Blackbody(K=1, kT=5.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1892294",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fc3e4c4c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:33.953179Z",
     "iopub.status.busy": "2022-10-04T06:45:33.952856Z",
     "iopub.status.idle": "2022-10-04T06:45:34.786029Z",
     "shell.execute_reply": "2022-10-04T06:45:34.783840Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=400468;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=85368;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=17753;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=936863;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=51132;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=916825;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:34 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:34\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=735393;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=778266;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=342601;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=609117;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=181604;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=742049;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\", source_function=source_function, energy_min=low_edge, energy_max=high_edge\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "135abaee",
   "metadata": {},
   "source": [
    "##### Gaussian spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "c479b9aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:34.791290Z",
     "iopub.status.busy": "2022-10-04T06:45:34.790291Z",
     "iopub.status.idle": "2022-10-04T06:45:35.877942Z",
     "shell.execute_reply": "2022-10-04T06:45:35.876685Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=395071;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=272588;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=246553;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=885363;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=387030;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=153925;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:35 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:35\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=823696;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=886669;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=938022;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=642077;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=184393;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=515927;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    source_errors=0.5 * source_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63416c7e",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Poisson Background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b4222a56",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:35.884045Z",
     "iopub.status.busy": "2022-10-04T06:45:35.883720Z",
     "iopub.status.idle": "2022-10-04T06:45:37.664936Z",
     "shell.execute_reply": "2022-10-04T06:45:37.663802Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=829425;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=322206;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=340330;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=541734;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=94646;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=367425;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=370341;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=187150;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=490557;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=183969;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=689435;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=118703;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=490147;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=384335;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=180544;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=911608;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=478061;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=563757;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:36 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:36\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=838808;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=670328;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=707785;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=339196;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=75197;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=778628;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA5kAAAMSCAYAAADgIQA9AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy89olMNAAAACXBIWXMAAA9hAAAPYQGoP6dpAABsdUlEQVR4nO3de3RU1d3/8c9kwiRkEgQCBsRoBMrNIiAqFRERRwWRS7WoaJ8KSlQUxEuLSi+iIlq0jyJ4qS2SalfrDRRQUBwUUEBUlB8oEkBJBJRwEUgmITPJzPn9QcljmpkkJHtyJpP3a62smrP3nP2dQNfwyd5nb4dlWZYAAAAAADAgwe4CAAAAAADxg5AJAAAAADCGkAkAAAAAMIaQCQAAAAAwhpAJAAAAADCGkAkAAAAAMIaQCQAAAAAwhpAJAAAAADCGkNkASktLlZubq9LSUrtLAQAAAICoImQ2gPz8fGVnZys/P9/uUgAAAAAgqgiZAAAAAABjCJkAAAAAAGMImQAAAAAAYxLtLgAAAABoyizLUnl5uYLBoN2lIE44nU4lJibK4XDYMj4zmQAAAIBNLMvS4cOH5ff77S4FccTv9+vw4cOyLMuW8ZnJBAAAAGxSXl6uxMREpaam2l0K4ozP51N5ebmaNWvW4GMzkwkAAADYJBgMKjGReR+Yl5iYaNsSbEImAAAAAMAYQiYAAAAAwJgmOzcfCAT0v//7v/rss8/k8/mUlZWliRMn6uc//7ndpQEAAAC2GDlypCSprKxMO3bsUJcuXSRJp512mp588skq/b/++mt9++23GjZsWI333rVrl0aNGqXPPvvMaM2IPU02ZAaDQbVr105PP/202rZtqw8++ED33XefXnnlFaWkpNhdHgAAANDgFi5cKOn/AuGx7yP5+uuv5fV6axUy0XQ02ZDZvHlzjR07tuL7iy66SHPmzNHOnTvVtWtX+woDAABAk2RZlvwlgaiOkZTiqtPZiW+++abmzp0rSWrfvr0eeughJSYm6qmnnlJRUZFGjhypXr166cEHH9Tdd9+tHTt2qKysTO3bt9fDDz+stm3bmn4riGGNJmSWlJTo5Zdf1ubNm/X111+rqKhI9913n4YOHVqlbyAQ0Ny5c7Vs2TIVFRWpU6dOGj9+vM4+++yI99+5c6eKiorUoUOHaL4NAAAAICx/SUBjWk6N6hj/PjRDye6k43rN1q1b9dhjj2nBggXKyMjQs88+q9///vf6+9//rttvv11er1fPPPNMRf/f//73at26tSTp+eef1+zZs/Xggw8afR+IbY1m45/Dhw8rJydH+fn56ty5c7V9H3nkEb366qu6+OKLdfvttyshIUFTpkzRxo0bw/b3+/2aPn26rrvuOs4oAgAAAH5i3bp1Ov/885WRkSFJuvbaa/Xxxx9HPB5j8eLFuuKKK3T55Zfrtdde05YtWxqyXMSARjOTmZ6erjfeeEPp6enasmWLbrrpprD9Nm/erOXLl2vChAkaM2aMJOnSSy/V2LFj9eyzz+rZZ5+t1L+8vFx/+tOf1KFDh0rLZwEAAICGlJTi0r8PzYj6GPVV3XLbzz77TC+99JJeeeUVpaena/ny5XrqqafqPSYal0YTMl0ul9LT02vst3LlSjmdTo0YMaLiWlJSkoYNG6bnn39eBQUFFb+FCYVCmj59uhwOh6ZOnVqn9ekAAACACQ6H47iXsjaEfv366bnnnqv4d/TLL7+sc889V06nU6mpqSoqKqroW1hYKLfbrZYtWyoQCOiVV16xsXLYpdGEzNratm2bTj75ZLnd7krXu3fvLknavn17Rch8/PHHdeDAAT3++ONKTKzfj2L//v06cOBA2Lb8/Px63RsAAACwS5cuXfS73/1O48ePl3R045/p06dLks4991y98MILGj58uPr06aM//vGPWrRokYYMGaKWLVuqf//+KigosLN82CDuQuaBAwfCzngeu7Z//35J0p49e/TWW2/J5XJVmvWcOXOmevXqddzjLlq0SDk5OXUrGgAAAIghJ598cqXzLEeNGqVRo0ZV6ZeWlqaXX3650rX/Pk/zzjvvDHtPxK+4C5l+v1/NmjWrct3lclW0S1K7du20atUqY+OOGDFC5513Xti2/Pz8it/2AAAAAEA8i7uQmZSUpLKysirXA4FARXs0tGnTRm3atInKvQEAAACgsWg0R5jUVnp6ethnI49dIwgCAAAAQPTEXcjs3Lmzdu3apeLi4krXN2/eXNEOAAAAAIiOuAuZgwYNUjAY1KJFiyquBQIBLVmyRD169KjYWRYAAAAAYF6jeiZz/vz58vl8FUtfV69erb1790qSrrzySqWmpqpHjx668MIL9fzzz+vQoUPq0KGD3nnnHe3Zs0f33HOPneUDAAAAQNxrVCHzlVde0Z49eyq+X7VqVcUOsZdccolSU1MlSVOnTlVGRobeffdd+Xw+dezYUX/+85/Vu3dvO8oGAAAAgCajUYXMV199tVb9kpKSdOutt+rWW2+NckUAAABAfFm2bJmee+45BYNB+f1+nXjiicrJyVFCQt2etBs8eLCefvppde/e/bhed8UVV+iee+5Rv379qu137733avXq1WrdurVCoZBatGihBx98UJ06dapTvbt27dKoUaMaxZmexcXFOvPMM5Wbm2t3KZU0qpAJAAAAIHr27t2rP/7xj1qwYIE6dOggSfrqq6/kcDhsrqx6N954o8aOHStJev755zVr1iw99dRTttUTCoUkqc7BvLEjZAIAAAAx4tVvN6qkvOqZ76akJDbTVR3PiNh+4MABOZ1OnXDCCRXXTj/99Ir//uabbzRjxoyKfVGuvfZajRkzRvPmzdNbb72l8vJyJSYm6g9/+IP69OlT5f779u3T9OnTtXv3bvn9fg0ePFh33nmnJOnzzz/XAw88oGAwqJ49eyoYDB73+7MsSz6fr6L+8vJy3XzzzTp48KD8fr+6deumhx56SCkpKZKO7vny4osvyrIsJSYmVgmmgUBAU6dOVUpKiu6//34dOHBA9957r/bs2aN27drphBNOUMeOHTVp0iTNnj1bW7duVUlJiX744QfNmzdPa9eu1dy5cyVJ7du310MPPaSMjAwtWLBAXq9XzzzzjCTpgw8+0AsvvKCXXnpJ69at00MPPaSzzjpLn3/+uYLBoB599FH17NlTkvTyyy/rhRdeUEpKii6++OLj/hk1BEJmlHi9Xnm9XkmSz+ezuRoAAAA0BiXlZSouD9g2fteuXdW3b18NHjxYZ599tvr06aPhw4crIyND5eXluvXWWzVp0iRdfvnlkqQff/xRkjRy5EiNGzdOkrRhwwbde++9euedd6rc/95779XNN9+sc845pyIALl26VBdddJHuvPNOPfLII+rfv78++ugjLViwoNZ1z507V2+88YZ+/PFHOZ1O/fOf/5QkOZ1OPf7442rVqpUsy9K0adP0z3/+UzfddJPWrVunp59+Wi+//LJOPPFEHTlyRJIqNhktLCzUxIkT1b9/f91yyy2SpOnTp6t37966/fbbtW/fPo0aNUodO3asqOOLL77Qm2++qTZt2mjr1q167LHHtGDBAmVkZOjZZ5/V73//e/3973+v8f18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u0sDAAAAgEatUWz8U1JSopdfflmbN2/W119/raKiIt13330aOnRolb6BQEBz587VsmXLVFRUpE6dOmn8+PE6++yzK/rs2rVLzZs314knnlhxrWPHjtqxY0eDvB8AAAAAiFeNYibz8OHDysnJUX5+vjp37lxt30ceeUSvvvqqLr74Yt1+++1KSEjQlClTtHHjxoo+R44ckdvtrvQ6t9utI0eqP78MAAAAAFC9RhEy09PT9cYbb+i1117ThAkTIvbbvHmzli9frptuukm33nqrRowYoSeffFLt2rXTs88+W9GvefPmKi4urvTa4uJiNW/ePGrvAQAAAACagkYRMl0ul9LT02vst3LlSjmdTo0YMaLiWlJSkoYNG6avvvpKBQUFkqSTTz5ZR44c0b59+yr67dixQ6eddpr54gEAAACgCWkUIbO2tm3bppNPPrnKUtju3btLkrZv3y5JSklJ0YABA/TCCy/I7/drzZo1+uabbzRgwIAGrxkAAAAA4kmj2Pintg4cOBB2xvPYtf3791dcu+uuu/Twww/r8ssvV9u2bTVt2jS1aNGizmPv379fBw4cCNuWn59f5/sCAAAAQGMSVyHT7/erWbNmVa67XK6K9mNatmypxx57zNjYixYtUk5OjrH7AQAAAEBjFFchMykpSWVlZVWuBwKBivZoGTFihM4777ywbfn5+Zo+fXrUxgYAAACAWBFXITM9Pb3SZj7HHFvG2qZNm6iN3aZNm6jeHwAAALFv8axVGj55oN1lALaKq41/OnfurF27dlU5nmTz5s0V7QAAAEC0LJ69Kmr3tixLpcX+Gr+sUOR+lmVFrT7gmLiayRw0aJBefvllLVq0SGPGjJF0dKnskiVL1KNHD2VkZNhcIQAAAHD8LMvS1AvmaMvavFr1H9Nyatjr3fpnacaKiXI4HAarAyprNCFz/vz58vl8FUtfV69erb1790qSrrzySqWmpqpHjx668MIL9fzzz+vQoUPq0KGD3nnnHe3Zs0f33HOPneUDAAAAdeYvCdQ6YFZny5o8+UsCSnZHb68SoNGEzFdeeUV79uyp+H7VqlVaterocoRLLrlEqampkqSpU6cqIyND7777rnw+nzp27Kg///nP6t27tx1lAwAAAEbN2z1NyW5XxPZJPWdq9qYpla6VFgc0rsO0KFcGHNVoQuarr75aq35JSUm69dZbdeut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MUIlJSVavnx5petvvfWWJGn48OGRfiyV7Nu3T6mpqTUG0rVr1+rOO+9UWlqannnmmUoBc+vWrfryyy916aWXVgl9mZmZuvzyy/Xtt99Wmg0+//zzdcIJJ2jlypUqLi6uuF5eXq5ly5bJ5XJF3LSpdevWko4u2wUANC7MZAIAGrVzzjlHjz/+eK37n3zyyUpJSal0LTExUa1bt5bP56u4tmXLFgWDQZWVlYWdKd21a5ckKT8/X/3796/U1r179yr9j537eMYZZ1Rp69Gjh5xOZ5Xrl156qf7617/qrbfeqgi6P/74o9asWaOf//znysrKquHdHlVYWKi2bdtW2+eDDz7Qp59+qk6dOumxxx5Tq1atKrUfWwp78ODBsD+P7777ruJ/O3bsKEkVIfL111+X1+vVyJEjJUmrV6/WoUOH5PF4lJaWFraeY9cPHz5cq/cIAIgdhEwAQJPidrvDXnc6nQqFQhXfFxYWSjq61HTTpk0R71daWlrl2rFZuJ86NpP33+FNOrob6wknnFDlelpami688EK98847+vbbb9WxY0ctXbpUwWCw1rOYkpSUlKRAIFBtn6+++krBYFBnnHFG2BqP/TzWrl2rtWvXRrzPkSNHKn0/bNgwvf7661qyZElFyKxpqaykinqTk5OrrRsAEHsImQAAhHEsjF599dW67bbbjuu1Docj4v0OHjxYpS0UCunw4cNhZxtHjhypd955R4sXL9bkyZP19ttvy+1268ILL6x1PSeccIL27dtXbZ+bbrpJH330kV5//XU5nc4q7/lY/ZMnT9aVV15Z67E7deqkbt266euvv9aOHTuUlpamTz75RO3bt6/ynOZPHQu1LVu2rPVYAIDYwDOZAACE0a1bNzkcDn311VdG7tepUydJCjsr+vXXXysYDIZ93emnn65OnTrpvffe0yeffKJdu3bp4osvPq4Zvo4dOyoQCKigoCBiH5fLpYcffljnnnuuXnnlFc2ZM6dS+7ElwHX5eRybsXz77bf17rvvKhgMVhxxEsmx5bfHlt4CABoPQiYAAGGkp6frwgsv1Jdffql///vfYc963Lx5c9jlsuEMGDBAzZs319tvv63du3dXXC8vL9fcuXOrfe2IESNUWFioRx99VJKqbERUk969e1fUWx2Xy6Xp06erf//+evXVVzV79uyKth49eqhHjx5avnx5lY2IpKOzsRs2bAh7X4/Ho+TkZC1btkxLlixRQkKChgwZUm0tX3/9daXaAQCNB8tlAQCNWnVHmEjSddddV+WIkdq66667tHPnTj377LN69913dfrppys1NVX79u3Tli1btGvXLr3xxhu1mlVMS0vTxIkT9dhjjyk7O1uDBw+W2+3Wxx9/LJfLpTZt2kSc2bvkkkv03HPPaf/+/eratWvYcyWrM2DAAD399NP67LPPalxm26xZMz300EP605/+pNdee02WZen222+XJP3pT3/SHXfcoQceeECvv/66fvaznykpKUl79+7Vl19+qcOHD8vr9Va5p9vt1gUXXKB3331Xhw4dUr9+/ZSRkRGxBsuytH79ep166qmVduIFADQOhEwAQKN27AiTSEaPHl3nkNmiRQs988wzWrBggd5//315vV6FQiG1bt1anTt31vXXXx92w55Ihg8frrS0NL300kt655135Ha7dd555+mWW27R6NGj1aFDh7Cvc7vdOv/887Vs2bLjnsWUpPbt2+vss8/WihUrNHny5BqPMjkWNO+//369/vrrsixLkydP1kknnaS5c+fqlVde0YcffqilS5cqISFB6enp6tWrlwYNGhTxnsOGDdO7774rSbrsssuqHf///b//p4KCAk2aNOm43ysAwH4OK9z6HwAA0GB27dqla6+9VhdeeKEeeOCBsH2uv/567dmzRwsWLIi4Q2511q9frzvvvFN/+MMfdMkll9S35Kh66KGHtG7dOv373/+OeMQJACB28UwmAAANpKioqMpRIn6/v2KTnfPPPz/s6z7++GPt2LFDHo+nTgFTkvr27at+/frpxRdfrHRUS6zZuXOn3n//ff3mN78hYAJAI8VyWQAAGsiGDRv05z//WWeffbZOPPFEHT58WJ9//rn27NmjM888U4MHD67U/80339TevXv11ltvyeVy6brrrqvX+Lfffrvee+897du3r9pnIu20d+9ejR07Vr/85S/tLgUAUEcslwUAoIHs3LlTc+fO1ZdffqlDhw5Jkjp06KDBgwfrmmuuqfLs6FVXXaV9+/YpMzNTt9xyi/r3729D1QAAHB9CJgAAAADAGJ7JBAAAAAAYQ8gEAAAAABhDyAQAAAAAGEPIBAAAAAAYQ8gEAAAAABhDyAQAAAAAGEPIBAAAAAAYQ8gEAAAAABhDyAQAAAAAGPP/AUQFS+acH0d6AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# power law background function\n",
    "background_function = Powerlaw(K=0.7, index=-1.5, piv=10.0)\n",
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b8795f27",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Gaussian background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "adc0f77a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:37.668980Z",
     "iopub.status.busy": "2022-10-04T06:45:37.668669Z",
     "iopub.status.idle": "2022-10-04T06:45:38.810076Z",
     "shell.execute_reply": "2022-10-04T06:45:38.809053Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:37 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:37\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=576655;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=855298;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=167715;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=39977;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=814428;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=223907;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=613258;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=168923;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=735128;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=567262;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=816720;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=470772;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=795629;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=872364;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=815223;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=513994;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=229607;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=709731;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:38 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:38\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=13420;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=310436;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=123672;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=853913;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=990288;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=15167;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    background_errors=0.1 * background_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "735f91c6",
   "metadata": {},
   "source": [
    "#### DispersionSpectrumLike\n",
    "\n",
    "DispersionSpectrumLike behaves in the same fashion as SpectrumLike except that a 3ML Instrument response must be set which means that the energy bins do not need to be specified as they are derived from the response\n",
    "\n",
    "Let's grab a response from an instrument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "e4b4df56",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:38.813882Z",
     "iopub.status.busy": "2022-10-04T06:45:38.813598Z",
     "iopub.status.idle": "2022-10-04T06:45:38.841740Z",
     "shell.execute_reply": "2022-10-04T06:45:38.840871Z"
    }
   },
   "outputs": [],
   "source": [
    "from threeML.io.package_data import get_path_of_data_file\n",
    "from threeML.utils.OGIP.response import OGIPResponse\n",
    "\n",
    "# we will use a demo response\n",
    "response = OGIPResponse(get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c56b640d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:38.845382Z",
     "iopub.status.busy": "2022-10-04T06:45:38.845080Z",
     "iopub.status.idle": "2022-10-04T06:45:38.921927Z",
     "shell.execute_reply": "2022-10-04T06:45:38.920969Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=619728;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=486185;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=680734;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=948663;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=463124;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=565052;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=575334;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=333979;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=649256;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=736297;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=966207;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=868341;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=994334;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=347068;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=378378;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=179332;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=258494;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=999718;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=701180;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=776438;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=905074;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=21034;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=986139;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=658854;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# rescale the functions for the response\n",
    "source_function = Blackbody(K=1e-7, kT=500.0)\n",
    "background_function = Powerlaw(K=1, index=-1.5, piv=1.0e3)\n",
    "spectrum_generator = DispersionSpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    response=response,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8e5d8f9e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:38.926232Z",
     "iopub.status.busy": "2022-10-04T06:45:38.925915Z",
     "iopub.status.idle": "2022-10-04T06:45:39.846168Z",
     "shell.execute_reply": "2022-10-04T06:45:39.845179Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "06300f4b",
   "metadata": {},
   "source": [
    "### Generating spectra from fitted models\n",
    "\n",
    "When performing goodness of fit tests, likelihood ratio tests (both automatic in 3ML) or posterior predictive checks, we need to generate synthetic data from our fitted models. Therefore, we proved methods to do this for most current plugins."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c2edfc1",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "Let's load some example, generic XY data and fit it with a power law."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "104a7a49",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:39.850466Z",
     "iopub.status.busy": "2022-10-04T06:45:39.849826Z",
     "iopub.status.idle": "2022-10-04T06:45:41.641102Z",
     "shell.execute_reply": "2022-10-04T06:45:41.640181Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:39 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#92\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">92</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:39\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=684505;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=197468;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#92\u001b\\\u001b[2m92\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1043\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1043</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=423390;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=523076;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1043\u001b\\\u001b[2m1043\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to MINUIT                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1060\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1060</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to MINUIT                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=295813;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=627665;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1060\u001b\\\u001b[2m1060\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(8.8 +/- 0.8) x 10^-1</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.index</th>\n",
       "      <td>-1.974 +/- 0.033</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    result             unit\n",
       "parameter                                                                  \n",
       "source.spectrum.main.Powerlaw.K      (8.8 +/- 0.8) x 10^-1  1 / (cm2 keV s)\n",
       "source.spectrum.main.Powerlaw.index       -1.974 +/- 0.033                 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140454056243648\">\n",
       "<tr><td>1.00</td><td>-0.87</td></tr>\n",
       "<tr><td>-0.87</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.87\n",
       "-0.87  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>xyl</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "total         22.762756\n",
       "xyl           22.762756"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>49.780832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>53.349559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             49.780832\n",
       "BIC             53.349559"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data_path = get_path_of_data_file(\"datasets/xy_powerlaw.txt\")\n",
    "\n",
    "\n",
    "xyl = XYLike.from_text_file(\"xyl\", data_path)\n",
    "\n",
    "fit_function = Powerlaw()\n",
    "\n",
    "xyl.fit(fit_function)\n",
    "\n",
    "fig = xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6bf60ce",
   "metadata": {},
   "source": [
    "Once our fit has been finished, we can produce simulated data sets from those model parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a68bccf8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:41.645388Z",
     "iopub.status.busy": "2022-10-04T06:45:41.645000Z",
     "iopub.status.idle": "2022-10-04T06:45:42.338826Z",
     "shell.execute_reply": "2022-10-04T06:45:42.337832Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:41 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#92\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">92</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:41\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=788589;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=589291;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#92\u001b\\\u001b[2m92\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_xyl = xyl.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47675205",
   "metadata": {},
   "source": [
    "#### SpectrumLike and DispersionSpectrumLike (OGIPLike)\n",
    "\n",
    "Both spectrum plugins work in the same way when generating data from a fit. They both keep track of the statistical properties of the likelihoods in the plugin so that the simulated datasets have the appropriate statistical properties. Additionally, background, responsses, etc. are simulated and/or kept track of as well.\n",
    "\n",
    "Let's fit an example energy dispersed spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "87aaf9de",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:42.348648Z",
     "iopub.status.busy": "2022-10-04T06:45:42.343789Z",
     "iopub.status.idle": "2022-10-04T06:45:43.261981Z",
     "shell.execute_reply": "2022-10-04T06:45:43.260766Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:42 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:42\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=1325;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=297548;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=515496;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=957974;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=502142;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=976898;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ogip_data = OGIPLike(\n",
    "    \"ogip\",\n",
    "    observation=get_path_of_data_file(\"datasets/ogip_powerlaw.pha\"),\n",
    "    background=get_path_of_data_file(\"datasets/ogip_powerlaw.bak\"),\n",
    "    response=get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"),\n",
    ")\n",
    "\n",
    "ogip_data.view_count_spectrum()\n",
    "# define the function\n",
    "fit_function = Cutoff_powerlaw(K=1e-3, xc=1000, index=-0.66)\n",
    "\n",
    "# define the point source\n",
    "point_source = PointSource(\"ps\", 0, 0, spectral_shape=fit_function)\n",
    "\n",
    "# define the model\n",
    "model = Model(point_source)\n",
    "\n",
    "ogip_data.set_model(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "089d9d17",
   "metadata": {},
   "source": [
    "Now we can now generate synthetic datasets from the fitted model. This will include the background sampled properly from the profile likelihood. The instrument response is automatically passed to the new plugin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "abc02366",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-04T06:45:43.266915Z",
     "iopub.status.busy": "2022-10-04T06:45:43.266317Z",
     "iopub.status.idle": "2022-10-04T06:45:44.376496Z",
     "shell.execute_reply": "2022-10-04T06:45:44.375427Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:45:43 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">484</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:45:43\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=298481;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=136627;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#484\u001b\\\u001b[2m484\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">485</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=915325;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=990998;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#485\u001b\\\u001b[2m485\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">486</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=718636;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=48163;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#486\u001b\\\u001b[2m486\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_ogip = ogip_data.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_ogip.view_count_spectrum()"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
