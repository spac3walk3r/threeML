{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "782e522d",
   "metadata": {},
   "source": [
    "# Fermi-LAT via FermiPyLike"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c006b72",
   "metadata": {},
   "source": [
    "In this Example we show how to use the fermipy plugin in threeML. We perform a Binned likelihood analysis and a Bayesian analysis of the Crab, optimizing the parameters of the Crab Pulsar (PSR J0534+2200) keeping fixed the parameters of the Crab Nebula. In the model, the nebula is described by two sources, one representing the synchrotron spectrum, the othet the Inverse Compton emission.\n",
    "In this example we show how to download Fermi-LAT data, how to build a model starting from the 4FGL, how to free and fix parameters of the sources in the model, and how to perform a spectral analysis using the fermipy plugin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "323ad4f3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:20:51.374956Z",
     "iopub.status.busy": "2022-10-05T22:20:51.374523Z",
     "iopub.status.idle": "2022-10-05T22:20:52.789871Z",
     "shell.execute_reply": "2022-10-05T22:20:52.788836Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "import shutil\n",
    "from IPython.display import Image, display\n",
    "import glob\n",
    "from pathlib import Path\n",
    "import matplotlib as mpl\n",
    "from matplotlib import pyplot as plt\n",
    "from astropy.io import fits as pyfits\n",
    "import scipy as sp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "83bc38c3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:20:52.795082Z",
     "iopub.status.busy": "2022-10-05T22:20:52.794663Z",
     "iopub.status.idle": "2022-10-05T22:21:12.813293Z",
     "shell.execute_reply": "2022-10-05T22:21:12.812018Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "from threeML import *"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "85a1b19f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:21:12.818930Z",
     "iopub.status.busy": "2022-10-05T22:21:12.817736Z",
     "iopub.status.idle": "2022-10-05T22:21:12.915103Z",
     "shell.execute_reply": "2022-10-05T22:21:12.914110Z"
    }
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c5be5a24",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "fd8fdcac",
   "metadata": {},
   "source": [
    "## The Fermi 4FGL catalog\n",
    "Let's interrogate the 4FGL to get the sources in a radius of 20.0 deg around the Crab"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "77353193",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:21:12.920504Z",
     "iopub.status.busy": "2022-10-05T22:21:12.920154Z",
     "iopub.status.idle": "2022-10-05T22:21:27.573119Z",
     "shell.execute_reply": "2022-10-05T22:21:27.572089Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">22:21:12 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The cache for fermilpsc does not yet exist. We will try to     </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/io/get_heasarc_table_as_pandas.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">get_heasarc_table_as_pandas.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/io/get_heasarc_table_as_pandas.py#64\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">64</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">build it                                                        </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                                 </span>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                                </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                                 </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m22:21:12\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m The cache for fermilpsc does not yet exist. We will try to    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=379240;file:///Users/runner/work/threeML/threeML/threeML/io/get_heasarc_table_as_pandas.py\u001b\\\u001b[2mget_heasarc_table_as_pandas.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=560289;file:///Users/runner/work/threeML/threeML/threeML/io/get_heasarc_table_as_pandas.py#64\u001b\\\u001b[2m64\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mbuild it                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                                 \u001b[0m\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251m                                                               \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                                 \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Building cache for fermilpsc                                  </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/io/get_heasarc_table_as_pandas.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">get_heasarc_table_as_pandas.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/io/get_heasarc_table_as_pandas.py#112\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">112</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Building cache for fermilpsc                                 \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=873872;file:///Users/runner/work/threeML/threeML/threeML/io/get_heasarc_table_as_pandas.py\u001b\\\u001b[2mget_heasarc_table_as_pandas.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=67663;file:///Users/runner/work/threeML/threeML/threeML/io/get_heasarc_table_as_pandas.py#112\u001b\\\u001b[2m112\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Trying https://heasarc.gsfc.nasa.gov/cgi-bin/vo/cone/coneGet.pl?table=fermilpsc&\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div><i>Table length=172</i>\n",
       "<table id=\"table5321522096\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>name</th><th>source_type</th><th>short_source_type</th><th>ra</th><th>dec</th><th>assoc_name</th><th>tevcat_assoc</th><th>Search_Offset</th></tr></thead>\n",
       "<thead><tr><th></th><th></th><th></th><th>deg</th><th>deg</th><th></th><th></th><th></th></tr></thead>\n",
       "<thead><tr><th>object</th><th>str32</th><th>object</th><th>float64</th><th>float64</th><th>object</th><th>object</th><th>float64</th></tr></thead>\n",
       "<tr><td>4FGL J0534.5+2200</td><td>pulsar, identified by pulsations</td><td>PSR</td><td>83.6367</td><td>22.0149</td><td>PSR J0534+2200</td><td>Crab pulsar</td><td>0.2119</td></tr>\n",
       "<tr><td>4FGL J0534.5+2201s</td><td>pulsar wind nebula</td><td>PWN</td><td>83.6331</td><td>22.0199</td><td>Crab Nebula</td><td>Crab</td><td>0.3965</td></tr>\n",
       "<tr><td>4FGL J0534.5+2201i</td><td>pulsar wind nebula</td><td>PWN</td><td>83.6330</td><td>22.0200</td><td>Crab Nebula</td><td>Crab</td><td>0.4027</td></tr>\n",
       "<tr><td>4FGL J0526.3+2246</td><td>active galaxy of uncertain type</td><td>bcu</td><td>81.5908</td><td>22.7778</td><td>NVSS J052622+224801</td><td></td><td>122.2379</td></tr>\n",
       "<tr><td>4FGL J0544.4+2238</td><td>unknown</td><td></td><td>86.1093</td><td>22.6418</td><td></td><td></td><td>142.4993</td></tr>\n",
       "<tr><td>4FGL J0521.7+2112</td><td>BL Lac type of blazar</td><td>bll</td><td>80.4445</td><td>21.2131</td><td>TXS 0518+211</td><td>VER J0521+211</td><td>184.2371</td></tr>\n",
       "<tr><td>4FGL J0528.3+1817</td><td>unknown</td><td>unk</td><td>82.0946</td><td>18.2943</td><td>1RXS J052829.6+181657</td><td></td><td>239.3725</td></tr>\n",
       "<tr><td>4FGL J0519.7+1939</td><td>unknown</td><td></td><td>79.9457</td><td>19.6646</td><td></td><td></td><td>250.2151</td></tr>\n",
       "<tr><td>4FGL J0536.2+1733</td><td>BL Lac type of blazar</td><td>bll</td><td>84.0719</td><td>17.5534</td><td>TXS 0533+175</td><td></td><td>268.7362</td></tr>\n",
       "<tr><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td></tr>\n",
       "<tr><td>4FGL J0639.6+3503</td><td>active galaxy of uncertain type</td><td>bcu</td><td>99.9024</td><td>35.0586</td><td>B2 0635+35</td><td></td><td>1157.9750</td></tr>\n",
       "<tr><td>4FGL J0552.8+0313</td><td>active galaxy of uncertain type</td><td>bcu</td><td>88.2180</td><td>3.2322</td><td>PKS 0550+032</td><td></td><td>1158.0744</td></tr>\n",
       "<tr><td>4FGL J0431.0+3529c</td><td>unknown</td><td></td><td>67.7650</td><td>35.4949</td><td></td><td></td><td>1159.2473</td></tr>\n",
       "<tr><td>4FGL J0653.6+1636</td><td>active galaxy of uncertain type</td><td>bcu</td><td>103.4105</td><td>16.6106</td><td>2MASX J06533986+1636432</td><td></td><td>1164.6978</td></tr>\n",
       "<tr><td>4FGL J0658.7+2318</td><td>unknown</td><td></td><td>104.6808</td><td>23.3027</td><td></td><td></td><td>1166.9300</td></tr>\n",
       "<tr><td>4FGL J0555.1+0304</td><td>active galaxy of uncertain type</td><td>bcu</td><td>88.7776</td><td>3.0710</td><td>GB6 J0555+0304</td><td></td><td>1175.3891</td></tr>\n",
       "<tr><td>4FGL J0658.2+2709</td><td>active galaxy of uncertain type</td><td>bcu</td><td>104.5735</td><td>27.1501</td><td>B2 0655+27A</td><td></td><td>1181.7046</td></tr>\n",
       "<tr><td>4FGL J0642.4+1048</td><td>unknown</td><td></td><td>100.6081</td><td>10.8135</td><td></td><td></td><td>1183.9162</td></tr>\n",
       "<tr><td>4FGL J0506.9+0323</td><td>BL Lac type of blazar</td><td>bll</td><td>76.7314</td><td>3.3917</td><td>NVSS J050650+032401</td><td></td><td>1187.3831</td></tr>\n",
       "<tr><td>4FGL J0409.2+2542</td><td>unknown</td><td></td><td>62.3144</td><td>25.7022</td><td></td><td></td><td>1189.1764</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       "<Table length=172>\n",
       "       name                  source_type            ... Search_Offset\n",
       "                                                    ...              \n",
       "      object                    str32               ...    float64   \n",
       "------------------ -------------------------------- ... -------------\n",
       " 4FGL J0534.5+2200 pulsar, identified by pulsations ...        0.2119\n",
       "4FGL J0534.5+2201s               pulsar wind nebula ...        0.3965\n",
       "4FGL J0534.5+2201i               pulsar wind nebula ...        0.4027\n",
       " 4FGL J0526.3+2246  active galaxy of uncertain type ...      122.2379\n",
       " 4FGL J0544.4+2238                          unknown ...      142.4993\n",
       " 4FGL J0521.7+2112            BL Lac type of blazar ...      184.2371\n",
       " 4FGL J0528.3+1817                          unknown ...      239.3725\n",
       " 4FGL J0519.7+1939                          unknown ...      250.2151\n",
       " 4FGL J0536.2+1733            BL Lac type of blazar ...      268.7362\n",
       "               ...                              ... ...           ...\n",
       " 4FGL J0639.6+3503  active galaxy of uncertain type ...     1157.9750\n",
       " 4FGL J0552.8+0313  active galaxy of uncertain type ...     1158.0744\n",
       "4FGL J0431.0+3529c                          unknown ...     1159.2473\n",
       " 4FGL J0653.6+1636  active galaxy of uncertain type ...     1164.6978\n",
       " 4FGL J0658.7+2318                          unknown ...     1166.9300\n",
       " 4FGL J0555.1+0304  active galaxy of uncertain type ...     1175.3891\n",
       " 4FGL J0658.2+2709  active galaxy of uncertain type ...     1181.7046\n",
       " 4FGL J0642.4+1048                          unknown ...     1183.9162\n",
       " 4FGL J0506.9+0323            BL Lac type of blazar ...     1187.3831\n",
       " 4FGL J0409.2+2542                          unknown ...     1189.1764"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lat_catalog = FermiLATSourceCatalog()\n",
    "\n",
    "ra, dec, table = lat_catalog.search_around_source(\"Crab\", radius=20.0)\n",
    "\n",
    "table"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f1ab2cf",
   "metadata": {},
   "source": [
    "This gets a 3ML model (a Model instance) from the table above, where every source in the 4FGL becomes a Source instance. Note that by default all parameters of all sources are fixed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "69a6c3bf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:21:27.578417Z",
     "iopub.status.busy": "2022-10-05T22:21:27.577662Z",
     "iopub.status.idle": "2022-10-05T22:21:28.002696Z",
     "shell.execute_reply": "2022-10-05T22:21:28.001681Z"
    }
   },
   "outputs": [],
   "source": [
    "model = lat_catalog.get_model()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76fce2eb",
   "metadata": {},
   "source": [
    "Let's free all the normalizations within 3 deg from the center."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9464ecbe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:21:28.008642Z",
     "iopub.status.busy": "2022-10-05T22:21:28.008094Z",
     "iopub.status.idle": "2022-10-05T22:21:28.248444Z",
     "shell.execute_reply": "2022-10-05T22:21:28.247457Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "Model summary:<br><br><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>N</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Point sources</th>\n",
       "      <td>172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Extended sources</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Particle sources</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div><br><br>Free parameters (5):<br><br><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>min_value</th>\n",
       "      <th>max_value</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>PSR_J0534p2200.spectrum.main.Super_cutoff_powerlaw.K</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Crab_synch.spectrum.main.Log_parabola.K</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Crab_IC.spectrum.main.Log_parabola.K</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NVSS_J052622p224801.spectrum.main.Powerlaw.K</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>_4FGL_J0544d4p2238.spectrum.main.Powerlaw.K</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div><br><br>Fixed parameters (957):<br>(abridged. Use complete=True to see all fixed parameters)<br><br><br>Properties (0):<br><br>(none)<br><br><br>Linked parameters (0):<br><br>(none)<br><br>Independent variables:<br><br>(none)<br><br>Linked functions (0):<br><br>(none)<br>"
      ],
      "text/plain": [
       "Model summary:\n",
       "==============\n",
       "\n",
       "                    N\n",
       "Point sources     172\n",
       "Extended sources    0\n",
       "Particle sources    0\n",
       "\n",
       "Free parameters (5):\n",
       "--------------------\n",
       "\n",
       "                                        value min_value max_value  \\\n",
       "PSR_J0534p2200...K                        0.0       0.0       0.0   \n",
       "Crab_synch.spectrum.main.Log_parabola.K   0.0       0.0       0.0   \n",
       "Crab_IC.spectrum.main.Log_parabola.K      0.0       0.0       0.0   \n",
       "NVSS_J052622p224801...K                   0.0       0.0       0.0   \n",
       "_4FGL_J0544d4p2238...K                    0.0       0.0       0.0   \n",
       "\n",
       "                                                   unit  \n",
       "PSR_J0534p2200...K                       keV-1 s-1 cm-2  \n",
       "Crab_synch.spectrum.main.Log_parabola.K  keV-1 s-1 cm-2  \n",
       "Crab_IC.spectrum.main.Log_parabola.K     keV-1 s-1 cm-2  \n",
       "NVSS_J052622p224801...K                  keV-1 s-1 cm-2  \n",
       "_4FGL_J0544d4p2238...K                   keV-1 s-1 cm-2  \n",
       "\n",
       "Fixed parameters (957):\n",
       "(abridged. Use complete=True to see all fixed parameters)\n",
       "\n",
       "\n",
       "Properties (0):\n",
       "--------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "\n",
       "Linked parameters (0):\n",
       "----------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "Independent variables:\n",
       "----------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "Linked functions (0):\n",
       "----------------------\n",
       "\n",
       "(none)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model.free_point_sources_within_radius(3.0, normalization_only=True)\n",
    "\n",
    "model.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f9e7309",
   "metadata": {},
   "source": [
    "but then let's fix the sync and the IC components of the Crab nebula (cannot fit them with just one month of data) (these two methods are equivalent)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "476c3058",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:21:28.253156Z",
     "iopub.status.busy": "2022-10-05T22:21:28.252821Z",
     "iopub.status.idle": "2022-10-05T22:21:28.258027Z",
     "shell.execute_reply": "2022-10-05T22:21:28.257009Z"
    }
   },
   "outputs": [],
   "source": [
    "model[\"Crab_IC.spectrum.main.Log_parabola.K\"].fix = True\n",
    "model.Crab_synch.spectrum.main.Log_parabola.K.fix = True"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b81d5656",
   "metadata": {},
   "source": [
    "However, let's free the index of the Crab Pulsar"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "952dc63f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:21:28.263342Z",
     "iopub.status.busy": "2022-10-05T22:21:28.262705Z",
     "iopub.status.idle": "2022-10-05T22:21:28.532104Z",
     "shell.execute_reply": "2022-10-05T22:21:28.529264Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "Model summary:<br><br><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>N</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Point sources</th>\n",
       "      <td>172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Extended sources</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Particle sources</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div><br><br>Free parameters (4):<br><br><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>min_value</th>\n",
       "      <th>max_value</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>PSR_J0534p2200.spectrum.main.Super_cutoff_powerlaw.K</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PSR_J0534p2200.spectrum.main.Super_cutoff_powerlaw.index</th>\n",
       "      <td>-1.932218</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NVSS_J052622p224801.spectrum.main.Powerlaw.K</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>_4FGL_J0544d4p2238.spectrum.main.Powerlaw.K</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div><br><br>Fixed parameters (958):<br>(abridged. Use complete=True to see all fixed parameters)<br><br><br>Properties (0):<br><br>(none)<br><br><br>Linked parameters (0):<br><br>(none)<br><br>Independent variables:<br><br>(none)<br><br>Linked functions (0):<br><br>(none)<br>"
      ],
      "text/plain": [
       "Model summary:\n",
       "==============\n",
       "\n",
       "                    N\n",
       "Point sources     172\n",
       "Extended sources    0\n",
       "Particle sources    0\n",
       "\n",
       "Free parameters (4):\n",
       "--------------------\n",
       "\n",
       "                            value min_value max_value            unit\n",
       "PSR_J0534p2200...K            0.0       0.0       0.0  keV-1 s-1 cm-2\n",
       "PSR_J0534p2200...index  -1.932218     -10.0      10.0                \n",
       "NVSS_J052622p224801...K       0.0       0.0       0.0  keV-1 s-1 cm-2\n",
       "_4FGL_J0544d4p2238...K        0.0       0.0       0.0  keV-1 s-1 cm-2\n",
       "\n",
       "Fixed parameters (958):\n",
       "(abridged. Use complete=True to see all fixed parameters)\n",
       "\n",
       "\n",
       "Properties (0):\n",
       "--------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "\n",
       "Linked parameters (0):\n",
       "----------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "Independent variables:\n",
       "----------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "Linked functions (0):\n",
       "----------------------\n",
       "\n",
       "(none)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model.PSR_J0534p2200.spectrum.main.Super_cutoff_powerlaw.index.free = True\n",
    "\n",
    "model.display()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8f4918ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:21:28.541273Z",
     "iopub.status.busy": "2022-10-05T22:21:28.540868Z",
     "iopub.status.idle": "2022-10-05T22:21:58.499630Z",
     "shell.execute_reply": "2022-10-05T22:21:58.498304Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">22:21:28 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Query parameters:                                                       </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#262\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">262</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m22:21:28\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Query parameters:                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=23241;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=644397;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#262\u001b\\\u001b[2m262\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                     coordfield = </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">83.6333</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">,</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">22.0133</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                        </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">266</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m                     coordfield = \u001b[0m\u001b[1;37m83.6333\u001b[0m\u001b[1;38;5;251m,\u001b[0m\u001b[1;37m22.0133\u001b[0m\u001b[1;38;5;251m                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=442074;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=828504;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\u001b\\\u001b[2m266\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                    coordsystem = J2000                                  </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">266</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m                    coordsystem = J2000                                 \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=163873;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=71448;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\u001b\\\u001b[2m266\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                     shapefield = </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">20.0</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                   </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">266</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m                     shapefield = \u001b[0m\u001b[1;37m20.0\u001b[0m\u001b[1;38;5;251m                                  \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=629147;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=408564;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\u001b\\\u001b[2m266\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                      timefield = </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2010</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">-</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">01</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">-</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">01</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> </span><span style=\"color: #00ff00; text-decoration-color: #00ff00; font-weight: bold\">00:00:00</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">,</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2010</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">-</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">02</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">-</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">01</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">         </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">266</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #00ff00; text-decoration-color: #00ff00; font-weight: bold\">00:00:00</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                                 </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                        </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m                      timefield = \u001b[0m\u001b[1;37m2010\u001b[0m\u001b[1;38;5;251m-\u001b[0m\u001b[1;37m01\u001b[0m\u001b[1;38;5;251m-\u001b[0m\u001b[1;37m01\u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[1;92m00:00:00\u001b[0m\u001b[1;38;5;251m,\u001b[0m\u001b[1;37m2010\u001b[0m\u001b[1;38;5;251m-\u001b[0m\u001b[1;37m02\u001b[0m\u001b[1;38;5;251m-\u001b[0m\u001b[1;37m01\u001b[0m\u001b[1;38;5;251m        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=420749;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=832312;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\u001b\\\u001b[2m266\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;92m00:00:00\u001b[0m\u001b[1;38;5;251m                                                                \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                        \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                       timetype = Gregorian                              </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">266</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m                       timetype = Gregorian                             \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=770471;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=880066;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\u001b\\\u001b[2m266\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                    energyfield = </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">30.000</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">,</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">1000000.000</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                     </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">266</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m                    energyfield = \u001b[0m\u001b[1;37m30.000\u001b[0m\u001b[1;38;5;251m,\u001b[0m\u001b[1;37m1000000.000\u001b[0m\u001b[1;38;5;251m                    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=545364;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=885202;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\u001b\\\u001b[2m266\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">         photonOrExtendedOrNone = Photon                                 </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">266</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m         photonOrExtendedOrNone = Photon                                \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=945518;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=713319;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\u001b\\\u001b[2m266\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                    destination = query                                  </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">266</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m                    destination = query                                 \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=665359;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=871371;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\u001b\\\u001b[2m266\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                     spacecraft = checked                                </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">266</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m                     spacecraft = checked                               \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=119769;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=560280;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#266\u001b\\\u001b[2m266\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Query ID: 1d06e9b939821424b65e80e4641be3c8                              </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#271\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">271</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Query ID: 1d06e9b939821424b65e80e4641be3c8                             \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=19194;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=541645;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#271\u001b\\\u001b[2m271\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">22:21:29 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Estimated complete time for your query: </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">13</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> seconds                      </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#427\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">427</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m22:21:29\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Estimated complete time for your query: \u001b[0m\u001b[1;37m13\u001b[0m\u001b[1;38;5;251m seconds                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=801456;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=236800;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#427\u001b\\\u001b[2m427\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> If this download fails, you can find your data at                       </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#436\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">436</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #d7d7d7; text-decoration-color: #d7d7d7; text-decoration: underline\">https://fermi.gsfc.nasa.gov/cgi-bin/ssc/LAT/QueryResults.cgi?id=L2210051</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                        </span>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #d7d7d7; text-decoration-color: #d7d7d7; text-decoration: underline\">82130DA96CEF207</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> (when ready)                                             </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                        </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m If this download fails, you can find your data at                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=819887;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=844987;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#436\u001b\\\u001b[2m436\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[4;38;5;188mhttps://fermi.gsfc.nasa.gov/cgi-bin/ssc/LAT/QueryResults.cgi?\u001b[0m\u001b[4;38;5;188mid\u001b[0m\u001b[4;38;5;188m=\u001b[0m\u001b[4;38;5;188mL2210051\u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                        \u001b[0m\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[4;38;5;188m82130DA96CEF207\u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mwhen ready\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                        \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">22:21:35 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Downloading FT1 and FT2 files</span><span style=\"color: #808000; text-decoration-color: #808000; font-weight: bold\">...</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                        </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">download_LAT_data.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#526\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">526</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m22:21:35\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Downloading FT1 and FT2 files\u001b[0m\u001b[1;33m...\u001b[0m\u001b[1;38;5;251m                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=287539;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py\u001b\\\u001b[2mdownload_LAT_data.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=251447;file:///Users/runner/work/threeML/threeML/threeML/utils/data_download/Fermi_LAT/download_LAT_data.py#526\u001b\\\u001b[2m526\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a8e823ed6d1d4dba90a339ca01d33604",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Downloading L221005182130DA96CEF207_PH00.fits:   0%|          | 0.00/16.3M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1adbe705ee8e47c8bbb482007a6db3e4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Downloading L221005182130DA96CEF207_SC00.fits:   0%|          | 0.00/11.9M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Download data from Jan 01 2010 to February 1 2010\n",
    "\n",
    "tstart = \"2010-01-01 00:00:00\"\n",
    "tstop = \"2010-02-01 00:00:00\"\n",
    "\n",
    "# Note that this will understand if you already download these files, and will\n",
    "# not do it twice unless you change your selection or the outdir\n",
    "\n",
    "evfile, scfile = download_LAT_data(\n",
    "    ra,\n",
    "    dec,\n",
    "    20.0,\n",
    "    tstart,\n",
    "    tstop,\n",
    "    time_type=\"Gregorian\",\n",
    "    destination_directory=\"Crab_data\",\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31909aa1",
   "metadata": {},
   "source": [
    "## Configuration for Fermipy\n",
    "\n",
    "3ML provides and intreface into [Fermipy](https://fermipy.readthedocs.io/en/latest/) via the **FermipyLike** plugin. We can use it to generate basic configuration files.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a19bcb25",
   "metadata": {},
   "source": [
    ".. note::\n",
    "    Currently, the FermipyLike plugin does not provide an interface to handle extended sources. This will change\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0fcae4f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:21:58.505179Z",
     "iopub.status.busy": "2022-10-05T22:21:58.504780Z",
     "iopub.status.idle": "2022-10-05T22:21:58.524097Z",
     "shell.execute_reply": "2022-10-05T22:21:58.522983Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "binning:\n",
      "  binsperdec: 8\n",
      "  binsz: 0.1\n",
      "  roiwidth: 10.0\n",
      "data:\n",
      "  evfile: /Users/runner/work/threeML/threeML/docs/md_docs/slow_execute/Crab_data/L1d06e9b939821424b65e80e4641be3c8_FT1.fits\n",
      "  scfile: /Users/runner/work/threeML/threeML/docs/md_docs/slow_execute/Crab_data/L221005182130DA96CEF207_SC00.fits\n",
      "logging:\n",
      "  chatter: 0\n",
      "  verbosity: 1\n",
      "selection:\n",
      "  dec: 22.013294786622875\n",
      "  emax: 100000.0\n",
      "  emin: 100.0\n",
      "  evclass: 128\n",
      "  evtype: 3\n",
      "  filter: DATA_QUAL>0 && LAT_CONFIG==1\n",
      "  ra: 83.63330762460559\n",
      "  tmax: 286675202.0\n",
      "  tmin: 283996802.0\n",
      "  zmax: 100.0\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre>binning:\n",
       "  binsperdec: 8\n",
       "  binsz: 0.1\n",
       "  roiwidth: 10.0\n",
       "data:\n",
       "  evfile: /Users/runner/work/threeML/threeML/docs/md_docs/slow_execute/Crab_data/L1d06e9b939821424b65e80e4641be3c8_FT1.fits\n",
       "  scfile: /Users/runner/work/threeML/threeML/docs/md_docs/slow_execute/Crab_data/L221005182130DA96CEF207_SC00.fits\n",
       "logging:\n",
       "  chatter: 0\n",
       "  verbosity: 1\n",
       "selection:\n",
       "  dec: 22.013294786622875\n",
       "  emax: 100000.0\n",
       "  emin: 100.0\n",
       "  evclass: 128\n",
       "  evtype: 3\n",
       "  filter: DATA_QUAL>0 && LAT_CONFIG==1\n",
       "  ra: 83.63330762460559\n",
       "  tmax: 286675202.0\n",
       "  tmin: 283996802.0\n",
       "  zmax: 100.0\n",
       "</pre>"
      ],
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "config = FermipyLike.get_basic_config(\n",
    "    evfile=evfile,\n",
    "    scfile=scfile,\n",
    "    ra=ra,\n",
    "    dec=dec,\n",
    "    fermipy_verbosity=1,\n",
    "    fermitools_chatter=0,\n",
    ")\n",
    "\n",
    "# See what we just got\n",
    "\n",
    "config.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e43a599d",
   "metadata": {},
   "source": [
    "You can of course modify the configuration as a dictionary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "81c972e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:21:58.529434Z",
     "iopub.status.busy": "2022-10-05T22:21:58.529055Z",
     "iopub.status.idle": "2022-10-05T22:21:58.534343Z",
     "shell.execute_reply": "2022-10-05T22:21:58.533250Z"
    }
   },
   "outputs": [],
   "source": [
    "config[\"selection\"][\"emax\"] = 300000.0"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d1015eb6",
   "metadata": {},
   "source": [
    "and even add sections"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "55c2ffc1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:21:58.539567Z",
     "iopub.status.busy": "2022-10-05T22:21:58.539149Z",
     "iopub.status.idle": "2022-10-05T22:21:58.551353Z",
     "shell.execute_reply": "2022-10-05T22:21:58.549496Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "binning:\n",
      "  binsperdec: 8\n",
      "  binsz: 0.1\n",
      "  roiwidth: 10.0\n",
      "data:\n",
      "  evfile: /Users/runner/work/threeML/threeML/docs/md_docs/slow_execute/Crab_data/L1d06e9b939821424b65e80e4641be3c8_FT1.fits\n",
      "  scfile: /Users/runner/work/threeML/threeML/docs/md_docs/slow_execute/Crab_data/L221005182130DA96CEF207_SC00.fits\n",
      "gtlike:\n",
      "  edisp: false\n",
      "logging:\n",
      "  chatter: 0\n",
      "  verbosity: 1\n",
      "selection:\n",
      "  dec: 22.013294786622875\n",
      "  emax: 300000.0\n",
      "  emin: 100.0\n",
      "  evclass: 128\n",
      "  evtype: 3\n",
      "  filter: DATA_QUAL>0 && LAT_CONFIG==1\n",
      "  ra: 83.63330762460559\n",
      "  tmax: 286675202.0\n",
      "  tmin: 283996802.0\n",
      "  zmax: 100.0\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre>binning:\n",
       "  binsperdec: 8\n",
       "  binsz: 0.1\n",
       "  roiwidth: 10.0\n",
       "data:\n",
       "  evfile: /Users/runner/work/threeML/threeML/docs/md_docs/slow_execute/Crab_data/L1d06e9b939821424b65e80e4641be3c8_FT1.fits\n",
       "  scfile: /Users/runner/work/threeML/threeML/docs/md_docs/slow_execute/Crab_data/L221005182130DA96CEF207_SC00.fits\n",
       "gtlike:\n",
       "  edisp: false\n",
       "logging:\n",
       "  chatter: 0\n",
       "  verbosity: 1\n",
       "selection:\n",
       "  dec: 22.013294786622875\n",
       "  emax: 300000.0\n",
       "  emin: 100.0\n",
       "  evclass: 128\n",
       "  evtype: 3\n",
       "  filter: DATA_QUAL>0 && LAT_CONFIG==1\n",
       "  ra: 83.63330762460559\n",
       "  tmax: 286675202.0\n",
       "  tmin: 283996802.0\n",
       "  zmax: 100.0\n",
       "</pre>"
      ],
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "config[\"gtlike\"] = {\"edisp\": False}\n",
    "\n",
    "config.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2b3a8599",
   "metadata": {},
   "source": [
    "### FermipyLike\n",
    "Let's create an instance of the plugin/ Note that here no processing is made, because fermipy still doesn't know about the model you want to use.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "19a209b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:21:58.556418Z",
     "iopub.status.busy": "2022-10-05T22:21:58.556060Z",
     "iopub.status.idle": "2022-10-05T22:22:01.334715Z",
     "shell.execute_reply": "2022-10-05T22:22:01.333685Z"
    }
   },
   "outputs": [],
   "source": [
    "LAT = FermipyLike(\"LAT\", config)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "da8430dd",
   "metadata": {},
   "source": [
    "The plugin modifies the configuration as needed to get the output files in a unique place, which will stay the same as long as your selection does not change."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5f69593b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:22:01.339753Z",
     "iopub.status.busy": "2022-10-05T22:22:01.339362Z",
     "iopub.status.idle": "2022-10-05T22:22:01.358687Z",
     "shell.execute_reply": "2022-10-05T22:22:01.357733Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "binning:\n",
      "  binsperdec: 8\n",
      "  binsz: 0.1\n",
      "  roiwidth: 10.0\n",
      "data:\n",
      "  evfile: /Users/runner/work/threeML/threeML/docs/md_docs/slow_execute/Crab_data/L1d06e9b939821424b65e80e4641be3c8_FT1.fits\n",
      "  scfile: /Users/runner/work/threeML/threeML/docs/md_docs/slow_execute/Crab_data/L221005182130DA96CEF207_SC00.fits\n",
      "fileio:\n",
      "  outdir: __0e4272e3d050c3302d4ed36805f7c721\n",
      "gtlike:\n",
      "  edisp: false\n",
      "logging:\n",
      "  chatter: 0\n",
      "  verbosity: 1\n",
      "selection:\n",
      "  dec: 22.013294786622875\n",
      "  emax: 300000.0\n",
      "  emin: 100.0\n",
      "  evclass: 128\n",
      "  evtype: 3\n",
      "  filter: DATA_QUAL>0 && LAT_CONFIG==1\n",
      "  ra: 83.63330762460559\n",
      "  tmax: 286675202.0\n",
      "  tmin: 283996802.0\n",
      "  zmax: 100.0\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre>binning:\n",
       "  binsperdec: 8\n",
       "  binsz: 0.1\n",
       "  roiwidth: 10.0\n",
       "data:\n",
       "  evfile: /Users/runner/work/threeML/threeML/docs/md_docs/slow_execute/Crab_data/L1d06e9b939821424b65e80e4641be3c8_FT1.fits\n",
       "  scfile: /Users/runner/work/threeML/threeML/docs/md_docs/slow_execute/Crab_data/L221005182130DA96CEF207_SC00.fits\n",
       "fileio:\n",
       "  outdir: __0e4272e3d050c3302d4ed36805f7c721\n",
       "gtlike:\n",
       "  edisp: false\n",
       "logging:\n",
       "  chatter: 0\n",
       "  verbosity: 1\n",
       "selection:\n",
       "  dec: 22.013294786622875\n",
       "  emax: 300000.0\n",
       "  emin: 100.0\n",
       "  evclass: 128\n",
       "  evtype: 3\n",
       "  filter: DATA_QUAL>0 && LAT_CONFIG==1\n",
       "  ra: 83.63330762460559\n",
       "  tmax: 286675202.0\n",
       "  tmin: 283996802.0\n",
       "  zmax: 100.0\n",
       "</pre>"
      ],
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "config.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe0f7315",
   "metadata": {},
   "source": [
    "Here is where the fermipy processing happens (the .setup method)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "224ed75f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:22:01.363221Z",
     "iopub.status.busy": "2022-10-05T22:22:01.362879Z",
     "iopub.status.idle": "2022-10-05T22:35:59.213037Z",
     "shell.execute_reply": "2022-10-05T22:35:59.211758Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fermipy Output directoty: __0e4272e3d050c3302d4ed36805f7c721\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">22:22:01 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using IRFs P8R3_SOURCE_V3                                                     </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/plugins/FermipyLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">FermipyLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/plugins/FermipyLike.py#109\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">109</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m22:22:01\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using IRFs P8R3_SOURCE_V3                                                    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=938240;file:///Users/runner/work/threeML/threeML/threeML/plugins/FermipyLike.py\u001b\\\u001b[2mFermipyLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=299547;file:///Users/runner/work/threeML/threeML/threeML/plugins/FermipyLike.py#109\u001b\\\u001b[2m109\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Found Galactic template for IRF. P8R3_SOURCE_V3: /usr/local/miniconda/envs/test_env/share/fermitools/refdata/fermi/galdiffuse/gll_iem_v07.fits\n",
      "\n",
      "Cutting the template around the ROI: \n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Found Isotropic template for irf P8R3_SOURCE_V3: /usr/local/miniconda/envs/test_env/share/fermitools/refdata/fermi/galdiffuse/iso_P8R3_SOURCE_V3_v1.txt\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: Point source PKS_0459p060 lies 17.6412 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4C_p06d21 lies 17.7192 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _1ES_0647p250 lies 17.7262 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source NVSS_J065035p205556 lies 17.7265 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0551d7p0446 lies 17.7346 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source GB6_J0454p3724 lies 17.751 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source PSR_J0631p1036 lies 17.7813 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source GB6_J0648p1749 lies 17.8402 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0537d6p0400 lies 18.0266 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0442d8p3609 lies 18.0663 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0424d8p3117 lies 18.0883 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0450d7p0715 lies 18.1415 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source B2_0552p39A lies 18.3309 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _1RXS_J064814d1p160708 lies 18.3607 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source MG2_J065230p1934 lies 18.3948 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source PKS_0502p049 lies 18.4196 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source RX_J0648d7p1516 lies 18.8078 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source GB6_J0620p3806 lies 18.8403 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source PSR_J0622p3749 lies 18.8565 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0641d4p3349 lies 18.8672 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source B2_0654p24 lies 18.868 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _1RXS_J065331d8p181448 lies 18.8952 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0412d6p2253c lies 18.9319 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source GB6_J0653p2816 lies 18.95 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source PMN_J0444p0717 lies 18.9983 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source MG1_J050533p0415 lies 19.0804 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0559d3p0352 lies 19.1138 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source TXS_0431p092 lies 19.1184 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source B3_0509p406 lies 19.2344 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source B2_0635p35 lies 19.2996 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source PKS_0550p032 lies 19.3012 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0431d0p3529c lies 19.3208 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _2MASX_J06533986p1636432 lies 19.4116 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0658d7p2318 lies 19.4488 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source GB6_J0555p0304 lies 19.5898 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source B2_0655p27A lies 19.6951 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0642d4p1048 lies 19.7319 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source NVSS_J050650p032401 lies 19.7897 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0409d2p2542 lies 19.8196 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">22:35:59 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1043\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1043</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m22:35:59\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=926664;file:///Users/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=698340;file:///Users/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1043\u001b\\\u001b[2m1043\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fermipy_output_directory = Path(config[\"fileio\"][\"outdir\"])\n",
    "print(\"Fermipy Output directoty: %s\" % fermipy_output_directory)\n",
    "\n",
    "# This remove the output directory, to start a fresh analysis...\n",
    "\n",
    "if fermipy_output_directory.exists():\n",
    "    shutil.rmtree(fermipy_output_directory)\n",
    "\n",
    "# Here is where the fermipy processing happens (the .setup method)\n",
    "\n",
    "data = DataList(LAT)\n",
    "\n",
    "jl = JointLikelihood(model, data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08b4c93a",
   "metadata": {},
   "source": [
    "The normalization factors of the LAT background components are included in the models as nuisance parameters. They are only added during the previous step (during the model assignment). Let's display them:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "e9124c69",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:35:59.218535Z",
     "iopub.status.busy": "2022-10-05T22:35:59.218113Z",
     "iopub.status.idle": "2022-10-05T22:35:59.228048Z",
     "shell.execute_reply": "2022-10-05T22:35:59.226987Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LAT_isodiff_Normalization : Parameter LAT_isodiff_Normalization = 1.0 []\n",
      "(min_value = 0.001, max_value = 1000.0, delta = 0.01, free = True)\n",
      "LAT_galdiff_Prefactor : Parameter LAT_galdiff_Prefactor = 1.0 []\n",
      "(min_value = 0.1, max_value = 10.0, delta = 0.01, free = True)\n"
     ]
    }
   ],
   "source": [
    "for k, v in LAT.nuisance_parameters.items():\n",
    "    print(k, \":\", v)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e8d7605",
   "metadata": {},
   "source": [
    "We will fix the isotropic BG as we are not sensitive to it with this dataset. We will also fix one more weak source."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "078c446c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:35:59.232815Z",
     "iopub.status.busy": "2022-10-05T22:35:59.232436Z",
     "iopub.status.idle": "2022-10-05T22:35:59.487649Z",
     "shell.execute_reply": "2022-10-05T22:35:59.486360Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "Model summary:<br><br><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>N</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Point sources</th>\n",
       "      <td>172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Extended sources</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Particle sources</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div><br><br>Free parameters (4):<br><br><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>min_value</th>\n",
       "      <th>max_value</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>PSR_J0534p2200.spectrum.main.Super_cutoff_powerlaw.K</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PSR_J0534p2200.spectrum.main.Super_cutoff_powerlaw.index</th>\n",
       "      <td>-1.932218</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NVSS_J052622p224801.spectrum.main.Powerlaw.K</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LAT_galdiff_Prefactor</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>10.0</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div><br><br>Fixed parameters (960):<br>(abridged. Use complete=True to see all fixed parameters)<br><br><br>Properties (0):<br><br>(none)<br><br><br>Linked parameters (0):<br><br>(none)<br><br>Independent variables:<br><br>(none)<br><br>Linked functions (0):<br><br>(none)<br>"
      ],
      "text/plain": [
       "Model summary:\n",
       "==============\n",
       "\n",
       "                    N\n",
       "Point sources     172\n",
       "Extended sources    0\n",
       "Particle sources    0\n",
       "\n",
       "Free parameters (4):\n",
       "--------------------\n",
       "\n",
       "                            value min_value max_value            unit\n",
       "PSR_J0534p2200...K            0.0       0.0       0.0  keV-1 s-1 cm-2\n",
       "PSR_J0534p2200...index  -1.932218     -10.0      10.0                \n",
       "NVSS_J052622p224801...K       0.0       0.0       0.0  keV-1 s-1 cm-2\n",
       "LAT_galdiff_Prefactor         1.0       0.1      10.0                \n",
       "\n",
       "Fixed parameters (960):\n",
       "(abridged. Use complete=True to see all fixed parameters)\n",
       "\n",
       "\n",
       "Properties (0):\n",
       "--------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "\n",
       "Linked parameters (0):\n",
       "----------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "Independent variables:\n",
       "----------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "Linked functions (0):\n",
       "----------------------\n",
       "\n",
       "(none)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model.LAT_isodiff_Normalization.fix = True\n",
    "model._4FGL_J0544d4p2238.spectrum.main.Powerlaw.K.fix = True\n",
    "model.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "796d3863",
   "metadata": {},
   "source": [
    "### Performing the fit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "19e31cdb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:35:59.493119Z",
     "iopub.status.busy": "2022-10-05T22:35:59.492714Z",
     "iopub.status.idle": "2022-10-05T22:36:06.529505Z",
     "shell.execute_reply": "2022-10-05T22:36:06.528057Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to MINUIT                                             </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1060\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1060</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to MINUIT                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=919838;file:///Users/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=804314;file:///Users/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1060\u001b\\\u001b[2m1060\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>PSR_J0534p2200...K</th>\n",
       "      <td>(9.7 +/- 0.4) x 10^-14</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PSR_J0534p2200...index</th>\n",
       "      <td>-1.975 +/- 0.024</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NVSS_J052622p224801.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(5.7 -3.4 +8) x 10^-17</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LAT_galdiff_Prefactor</th>\n",
       "      <td>(9.46 +/- 0.08) x 10^-1</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                               result  \\\n",
       "parameter                                                               \n",
       "PSR_J0534p2200...K                             (9.7 +/- 0.4) x 10^-14   \n",
       "PSR_J0534p2200...index                               -1.975 +/- 0.024   \n",
       "NVSS_J052622p224801.spectrum.main.Powerlaw.K   (5.7 -3.4 +8) x 10^-17   \n",
       "LAT_galdiff_Prefactor                         (9.46 +/- 0.08) x 10^-1   \n",
       "\n",
       "                                                         unit  \n",
       "parameter                                                      \n",
       "PSR_J0534p2200...K                            1 / (cm2 keV s)  \n",
       "PSR_J0534p2200...index                                         \n",
       "NVSS_J052622p224801.spectrum.main.Powerlaw.K  1 / (cm2 keV s)  \n",
       "LAT_galdiff_Prefactor                                          "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table5358326352\">\n",
       "<tr><td>1.00</td><td>0.79</td><td>-0.04</td><td>-0.08</td></tr>\n",
       "<tr><td>0.79</td><td>1.00</td><td>0.06</td><td>0.16</td></tr>\n",
       "<tr><td>-0.04</td><td>0.06</td><td>1.00</td><td>-0.13</td></tr>\n",
       "<tr><td>-0.08</td><td>0.16</td><td>-0.13</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 0.79 -0.04 -0.08\n",
       " 0.79 1.00  0.06  0.16\n",
       "-0.04 0.06  1.00 -0.13\n",
       "-0.08 0.16 -0.13  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>LAT</th>\n",
       "      <td>118119.182013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>118119.182013</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "LAT       118119.182013\n",
       "total     118119.182013"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>236246.364170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>236288.534206</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC         236246.364170\n",
       "BIC         236288.534206"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "jl.set_minimizer(\"minuit\")\n",
    "\n",
    "res = jl.fit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5fafff1",
   "metadata": {},
   "source": [
    "Now let's compute the errors on the best fit parameters\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "2adf2487",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:36:06.535041Z",
     "iopub.status.busy": "2022-10-05T22:36:06.534620Z",
     "iopub.status.idle": "2022-10-05T22:36:18.809879Z",
     "shell.execute_reply": "2022-10-05T22:36:18.808812Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>PSR_J0534p2200...K</th>\n",
       "      <td>(9.7 +/- 0.4) x 10^-14</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PSR_J0534p2200...index</th>\n",
       "      <td>-1.975 -0.025 +0.024</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NVSS_J052622p224801.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(6 -5 +6) x 10^-17</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LAT_galdiff_Prefactor</th>\n",
       "      <td>(9.46 -0.17 +0.18) x 10^-1</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                  result  \\\n",
       "parameter                                                                  \n",
       "PSR_J0534p2200...K                                (9.7 +/- 0.4) x 10^-14   \n",
       "PSR_J0534p2200...index                              -1.975 -0.025 +0.024   \n",
       "NVSS_J052622p224801.spectrum.main.Powerlaw.K          (6 -5 +6) x 10^-17   \n",
       "LAT_galdiff_Prefactor                         (9.46 -0.17 +0.18) x 10^-1   \n",
       "\n",
       "                                                         unit  \n",
       "parameter                                                      \n",
       "PSR_J0534p2200...K                            1 / (cm2 keV s)  \n",
       "PSR_J0534p2200...index                                         \n",
       "NVSS_J052622p224801.spectrum.main.Powerlaw.K  1 / (cm2 keV s)  \n",
       "LAT_galdiff_Prefactor                                          "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "res = jl.get_errors()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6dabf9b9",
   "metadata": {},
   "source": [
    "We might also want to look at the profile of the likelihood for each parameter."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "c2a05879",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:36:18.815109Z",
     "iopub.status.busy": "2022-10-05T22:36:18.814569Z",
     "iopub.status.idle": "2022-10-05T22:37:49.459036Z",
     "shell.execute_reply": "2022-10-05T22:37:49.457877Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5831982aff9c4d72a65ba4457bc7489f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Profiling likelihood:   0%|          | 0/30 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "res = jl.get_contours(\n",
    "    model.PSR_J0534p2200.spectrum.main.Super_cutoff_powerlaw.index, -2.0, -1.6, 30\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ee59fd1e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:37:49.464619Z",
     "iopub.status.busy": "2022-10-05T22:37:49.464211Z",
     "iopub.status.idle": "2022-10-05T22:37:49.728381Z",
     "shell.execute_reply": "2022-10-05T22:37:49.727075Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABAAAAAN+CAYAAACLknm8AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy89olMNAAAACXBIWXMAAA9hAAAPYQGoP6dpAACm+UlEQVR4nOzdd2BddcE//nfaNOnejLZAl6WUMgsyxLKHgDhAAUFEQRQUwa8TAQeK8OiPRxEnIMiDPExRQVEERIbsvSmlQCnQAi3dI22S+/ujT2PTljZNk56b5PX6696Te07e4eQemvf9fM6nolQqlQIAAAC0a52KDgAAAAC0PgUAAAAAdAAKAAAAAOgAFAAAAADQASgAAAAAoANQAAAAAEAHoAAAAACADkABAAAAAB1AZdEBKG91dXWpqalZaXvnzp1TXV1dQCIAAACaQwGwDs4666x06tQp3/72t9dqv5NOOinjxo3LCSec0Gj7woUL87vf/S533313ZsyYkUGDBuXDH/5wPvKRj6RTp5UHazz44IP52te+lttvvz2VlY1P5RNPPJFLL700EyZMSF1dXd7znvfkM5/5THbaaae1ynrHHXfkrLPOWmn71ltvnV/+8pdrdSwAAACKowBopsceeyx333139thjj7Xa75///GeeffbZjBs3bqWvnX322Xn88cdz7LHHZqONNsqjjz6a888/P/PmzcunPvWpRq+dM2dOLrvsslV+j4kTJ+YrX/lKNt9883z1q19NfX19rrvuunzzm9/Mb3/724wcObLJed94440MHTo0X//61xtt79GjR5OPAQAAQPEUAGvpmmuuyR//+MdMnTp1rfb71a9+ldtuuy3Tp09f5dfffPPN3H333fnyl7+cQw89NEmyxx57ZMaMGbnhhhsaCoBXXnklZ599dl5++eUsWbJklce6/vrr07Vr15x33nkNf6jvuuuuOeKII3LFFVfku9/9bpNzv/766xk5cmS22WabtflxAQAAKDMKgHdxyimnZOONN87pp5/eaPvQoUNzyCGHJEmuvPLKJh9v9OjR6d27d5LkoosuWunrs2fPTpL06dOn0faePXs2moPfvXv37Lnnntlzzz3zyCOP5JFHHlnpWBMnTsxWW23V6FP63r17Z9NNN81LL73UsG3RokX57W9/m3/961+ZPXt23vOe9+STn/xk3v/+9ze85o033mj443/JkiXp0qVLk39mAAAAyocCYC3tsssu2WWXXZIkN954Y5P322effRoer6oAGDFiRIYOHZpLLrkkAwcOzGabbZaHHnoot956az70oQ81vG7DDTfMJz/5ySTJ4sWLV1kAfPnLX15piP7cuXMzZcqUbLXVVkmW3tzvm9/8Zl566aUcc8wx2WijjXLXXXfl9NNPz/e+973svffeSZaOAKiqqsphhx2Wt99+O717987BBx+cz372s8oAAACANkQBUCYqKyvz/e9/P1/84hfzpS99qWH74MGDc9xxx63VsbbeeutGz2fNmpXvfve7mT9/fsP0gjvuuCOPPfZYfvWrXzWUAnvssUdmzpyZ3/72t9l7771TU1OT6dOnp76+PieccEIGDhyYBx98MNdee22mTZu2ypsDAgAAUJ4UAP9nxeXu6uvrU1dXlwULFjRsq66uTufOnVvl+8+aNSvf/OY307Vr13zuc5/L4MGDM2HChFxxxRU544wz8rOf/SwVFRVrdcxSqZSbbropF154YebNm5cvfvGL2XXXXZMk9913XzbYYIOMGDGi0c+4yy675Be/+EVmzpyZbt265Ywzzsi2226bjTbaKEmy0047pWvXrrn88stzzDHH5D3veU/L/UcAAACg1SgA/s+TTz6ZU089daXtt956a8Pjn/3sZ9l+++1b5fv/9a9/zbRp03LBBRdku+22S7L0j+0+ffrkvPPOy9NPP73SJ/ur88Ybb+QHP/hBnnnmmYwdOzZf/epXG/2x/s477+Ttt9/OBz7wgVXuP3v27PTr1y/777//Sl8bP358Lr/88kyaNEkBAAAA0EYoAP7PqFGj8otf/KLh+c9+9rP0798/xxxzTMO2ESNGtNr3X7aqwOjRoxtt33LLLZMkb7311lod66STTsqSJUtyxhln5IADDljpNT169MiQIUPyrW99a5XH2GijjfLiiy/mpZdeyn777ddo9EFdXV2SpTckBAAAoG1QAPyfnj17NlrqrkePHunXr996W/5u0KBBSZKnnnoqO+20U8P2559/Pkmy2WabNflYv/3tb7Nw4cL84he/yOabb77K12y33Xa57777Mnjw4AwcOLBh+6WXXpqnn3465513Xl566aWcffbZ2WCDDRqNfLjllltSVVVlaUAAAIA2RAHQCiZNmpTp06dnu+22S3V1dZP2+eAHP5jrr78+P/jBD/KJT3wim2yySV5++eVcddVVGT9+fEaNGtWk45RKpdxzzz0ZO3ZsZs6cmQceeKDR16urq7PddtvloIMOyp///Od89atfzcc//vH07NkzDz30UP7617/m5JNPTqdOnfL+978/m266ab7zne/kqKOOysYbb5xHHnkkN954Y44//viVliwEAACgfCkAWsE111yTm2++Oddcc03DJ/tr0rdv31x88cW5/PLLc8MNN2T69Onp379/PvzhD6/VKgCzZ8/OggUL8sgjj6xyicCNN9441157bbp165af//zn+dWvfpVf//rXqampyaabbppvfOMbOfjgg5MsHeL/k5/8JJdcckmuueaazJs3L0OGDMmpp56aww47rMmZAAAAKF5FqVQqFR0CAAAAaF2dig4AAAAAtD4FAAAAAHQAHb4AWLRoUSZMmJBFixYVHQUAAABaTYcvACZPnpwTTjghkydPLjoKQKv7xje+kZEjR2bkyJF59tlni44DAMB61OELAICOZPmyc+jQoQUmAQBgfVMAAHQgywqADTbYID169Cg4DQAA65MCAKCDmDdvXt5+++0kPv0HAOiIFAAAHcSrr77a8HjYsGHFBQEAoBCVRQcAYP0w/x8AaK9KpVJqa2tTV1dXdJRW0blz51RWVqaiomKdjmMEAEAH8corrzQ8VgAAAO1FqVTK7NmzU1NTU3SUVlNTU5PZs2enVCqt03GMAADoIJYfAWAKAADQXtTW1qaysjI9e/YsOkqrmjdvXmpra9OlS5dmH8MIAIAOYvkCYLPNNiswCQBAy6mrq0tlZfv/bLuysnKdpziU3X+l2traXH311bn55pvz1ltvZeDAgdl///1z1FFHpaqqquh4AG3WsgJgwIAB6dWrV8FpAABY38quAPj1r3+dG264Icccc0yGDx+eCRMm5PLLL89bb72Vb3zjG0XHA2iTFixYkDfffDOJ+f8AAB1VWRUAtbW1ueGGG3LooYfm2GOPTZLsvvvuqampyfXXX59TTz011dXVBacEaHssAQgAQFndA2DhwoVZvHhxevfu3Wh7r169UldX126XdABobZYABABY/2bOnJn99tuv6BgNymoEQK9evbLDDjvk2muvzciRIzNmzJg899xzue6667Lbbrule/fuRUcEaJMsAQgAsH799Kc/zc0331xWyxOWVQGQJGeeeWY+//nP55vf/GbDtt69e+eUU05p9jGnT5+eGTNmrPJry38qBtBeLV8AmAIAAND6tttuuwwePDi//OUv3/U1b731Vs4+++xMnjw5r732WubNm5ckufrqq7P99tu3eKayKgAWL16c0047LQsWLMhJJ52UkSNH5tVXX83vf//7fO1rX8ull17arHsA3HjjjbnssstaPjBAG2EKAADQoTx7Z/L8nWt+Xb8hyV7HN972r0uSma+/+z5b7JFsuccaD73XXnvltddeW20BcMopp+TAAw/MBRdckJkzZ2bffffNddddlxEjRqw5ezOUVQFw9913Z8KECTn99NPzgQ98IEmy0047ZbPNNsvXvva13HXXXc2aP/GhD30ou+222yq/Nnny5Jx99tnrlBug3C0rAPr377/SfVYAANqdJYuSBbPX/LrufVfeVjN/9fsuWdTsWMt7/PHHM3fu3IYb4Pfr1y9DhgzJzJkzW+T4q1JWBcDUqVOTJKNHj260fcstt0yShiWs1tbAgQMzcODAdQsH0EYtXLgw06ZNS+LTfwCgg+jSNeneZ82vq+6x6m2r27dL1+bnWs5zzz2XMWPGNDyfO3dupk6dmi222KJFjr8qZVUADBo0KEny5JNPZvjw4Q3bJ0yYkMQ/XAGaY/klAF1HAYAOYcumDdNfpRWnBLSSfv36ZcKECVm8eHEqKiry/e9/P0cccUR69FhFKdFCyqoAGD9+fIYPH55f/vKXmT59ekaNGpWpU6fmqquuyhZbbJH3ve99RUcEaHOWn//vBoAAAOVh7733zp133plDDjkkPXr0yD777JMTTzyxVb9nWRUAVVVV+cUvfpGrrroqt99+e6666qr07Nkzu+22W0488cR07ty56IgAbY4lAAEAirHJJpvkrrvuWuXXqqqqcu65567XPGVVACRJr1698rnPfS6f+9znio4C0C4YAQAAQJJ0KjoAAK3LEoAAACQKAIB2b9kUgL59+6ZPnybcDRcAgHZJAQDQji1atKhhiVWf/gMAdGwKAIB2bMqUKQ2Pzf8HAOjYFAAA7Zj5/wAALKMAAGjHLAEIAMAyCgCAdswSgAAALKMAAGjHTAEAAGAZBQBAO7ZsCkDv3r3Tt2/fQrMAAHQkv/zlL7PHHnvkgAMOyBlnnJHFixcXHUkBANBe1dTU5I033kiy9NP/ioqKghMBAHQMjz76aG644Yb85S9/yd///vfMnTs31113XdGxUll0AABax2uvvZZSqZTE/H8AgPVp6tSpOeyww9K7d+8kyXvf+9688MILK73urbfeytlnn53Jkyfntddey7x585IkV199dbbffvsWz6UAAGinzP8HADqqhbfekkW33brG11Vutll6ffFLjbbN/eXPU/vqq++6T9d990u3/fZf7XEPPvjghsdvvvlm/vd//zennnrqSq875ZRTcuCBB+aCCy7IzJkzs+++++a6667LiBEj1pi9ORQAAO2UJQABgI6qtGhhSrNmrvF19f36rbxt7tzV7ltatLBpGUqlXHnllfnlL3+ZY489NgceeGCjrz/++OOZO3dujj322CRJv379MmTIkMycuebczaUAAGinLAEIAHRUFV27paLvyn/cr6hTr16r3Fa/mn0runZb43Hr6+tz8skn55133snvf//7jBw5cqXXPPfccxkzZkzD87lz52bq1KnZYost1nj85lIAALRTpgAAAB1Vt/32X+Mw/Xez4pSA5rjpppsyc+bMXHHFFamsXPWf3f369cuECROyePHiVFRU5Pvf/36OOOKI9OjRY52//7tRAAC0U8umAPTs2TP9+/cvNgwAQAfy2GOP5ZVXXskHP/jBhm0HH3xwvvSl/5QLe++9d+68884ccsgh6dGjR/bZZ5+ceOKJrZpLAQDQDi1evDivv/56EksAAgCsb9/5znfyne98Z7WvqaqqyrnnnrueEi3Vab1+NwDWi9dffz319fVJzP8HAGApBQBAO2QFAAAAVqQAAGiHFAAAAKxIAQDQDlkCEACAFSkAANohBQAAACtSAAC0Q8umAPTo0SMDBgwoNgwAAGVBAQDQzixZssQSgAAArEQBANDOvP7666mrq0ti+D8AAP9RWXQAAFqWFQAAAIpVW1ubs88+O/fdd19KpVJ22223nHnmmencuXOhuYwAAGhnlr8BoAIAAGD9+9Of/pTp06fn73//e/7617/m6aefzp133ll0LCMAANobKwAAABRrq622yg477JBOnTqlpqYmixYtSq9evVZ63VtvvZWzzz47kydPzmuvvZZ58+YlSa6++upsv/32LZ5LAQDQzrz00ksNj40AAAA6ol/8+b786s/3r/F124wclKu/fWSjbUf+4Oo8OWnqu+7zhY/skpM/sutqjztmzJgkyXnnnZff/e532WqrrbLtttuu9LpT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PvCBZh8DoCmWvwHgVlttVWASAABoPc0qAPr06ZPHH3889fX17/qaZ555Jt27d29WqLvuuit33313TjvttGbtD7A2lhUAnTt3zujRowtOAwAAraNZd7rab7/9cuWVV+Y73/lOvvjFL2bQoEENX5s2bVouvfTSTJo0KYcffvhaH3vWrFk577zz8vnPfz6DBw9uTryVTJ8+PTNmzFjl15bd+AvomGpqavLiiy8mSUaOHJnq6uqCEwEAQOtoVgHwmc98Ji+//HLuvvvu3HPPPRk4cGD69++fWbNm5a233kp9fX222267HH/88Wt97PPOOy/Dhw/PRz/60eZEW6Ubb7wxl112WYsdD2g/XnjhhdTW1iYx/x8AgPatWQVAVVVV/uu//it33313brrppjz//POZOHFiunbtmrFjx2a//fbLIYcckk6d1m6GwW233ZYHHnggv/nNb7Jw4cIkafiH+aJFi9KlS5dmfTr3oQ99KLvtttsqvzZ58uScffbZa31MoH1Yfv7/2LFjC0wCAACta50Wux4/fnzGjx/fUlny7LPPpqamJp/5zGdW+tpBBx2U97///TnnnHPW+rgDBw7MwIEDWyIi0M4sXwAYAQAAQHu2TgXApEmTctttt2Xy5MlZvHhx+vXrlzFjxmTvvfdO37591/p4H/vYx7Lnnns22va3v/0tf/vb33LBBRc065gAq2MJQAAAOopmFwCXXXZZLrvsspRKpUbbb7nlllx00UU5+eST88EPfnCtjjl48OCVbvz38MMPJ1m6NFdl5Tr1FQCN1NXV5fnnn0+SbLrppundu3fBiQAAoPU06y/qO++8M7/73e8yZsyYHHvssRkzZkyqq6szffr0PPjgg7n++utz3nnnZcCAAdl1111bOjNAi3jllVca7jfi038AANq7tbtL3/+59tprs8EGG+T888/Prrvumr59+6Zbt27ZdNNNc9hhh+XCCy9M//79c80116xzwOOOOy533XWXT/+BFmf4PwAAHUmzCoAXX3wx733ve9O1a9dVfr1Xr17Zaaed8sILL6xTOIDWtHwBYAUAAADau2YVAJ06dUp9ff1qX1NRUdGwhB9AObICAAAAHUmzCoDRo0fnvvvuy+zZs1f59QULFuSBBx7I0KFD1ykcQGsplUoNBcDAgQOz4YYbFpwIAABaV7MKgGOOOSZz5szJ5z73ufzxj3/M66+/npqamrz99tu57bbbctJJJ+Wdd97JoYce2tJ5AVrE1KlTM2vWrCRLP/2vqKgoNhAAALSyZt1Zb4cddsg3v/nNnH/++bngggtW+Zqjjz46Bx544DqFA2gt5v8DANDRNPvW+gceeGB23nnn3HrrrXnuuecyZ86cVFdXZ8SIEdlnn30yYsSIlswJ0KLM/wcAoKNZp7X1+vfvnyOOOKKlsgCsNwoAAAA6mmYXAPX19fnTn/6U2267LZMnT87ixYvTp0+fjB07NgcffHB23nnnlswJ0KKWTQHo2bNnNttss4LTAABA62tWAVBbW5tvfvObeeSRR9K5c+cMGTIkXbt2zfTp03PnnXfmrrvuyr777pvTTz89nTo16z6DAK1m5syZmTp1apJkzJgxrlMAAHQIzSoArrnmmjz88MP56Ec/muOPPz69evVq+NpLL72Uyy+/PLfddltGjx6dj3/84y0WFqAlGP4PAEBH1KyPvf7xj39k1KhR+fKXv9zoj/8kGTFiRL773e9m+PDhufnmm1skJEBLWn4FAAUAAAAdRbMKgDfeeGO1/2iuqKjI1ltvnddee63ZwQBay/IjACwBCABAR9GsAqBHjx6ZOXPmal8zZ86cdO7cuVmhAFrTshEAVVVVec973lNwGgAAWD+aVQDssMMOue+++/L000+v8usvvfRS7r333owZM2adwgG0tPnz5+fll19OkowaNSpdunQpOBEAAKwfzboJ4PHHH5/7778/p5xySt7//vdnp512ysCBAzNnzpw88cQTufXWW1NXV5dPf/rTLRwXYN08//zzKZVKSQz/BwCgY2lWATBkyJD8/Oc/z7nnntuw7N8ypVIpAwYMyNe//vVsvfXWLRYUoCWY/w8AQEfVrAIgSUaOHJnf/va3eeGFF/Lcc89lzpw5qa6uzvDhw7P99tunsrLZhwZoNZYABACgo1rnv9I333zzbL755i2RBaDVLbsBYEVFRbbYYouC0wAAwPrT7ALgqaeeyq233ppp06Zl4cKFDXNql1dRUZGf//zn6xQQoKUsWbIkEydOTJKMGDEi3bt3LzgRAACsP80qAG699dacc845qa+vX+3rKioqmhWqCB/73pWpq+672tdsM3JQrv72kY22HfmDq/PkpKlrPP4XPrJLTv7Irg3P5y6oyc5f+FWTsl155hHZ7j2DG57f/OAL+cqvblrjfj26VuWh33yx0bZvX3prrr9r1as3LG//HUfl/JM/2Gjbnv/v4rw1c94a9z3r0/vm43v+5/4PE1+bng+f+fs17pckt//ks9m4f6+G55fd/Eh+fPVdq9ljqZFDBuQvP/xUo20nnPfH3PP05DXu+6kDxuW0T+zRaNuWn/5pk/Je+NWPZvzWwxqe3/3UK/n8f/+pSfs+e9n/a/T8v666M5f/49E17rfbVkNz8dcObbTtkDMuz6TXZ6xx328cuXs+/YEdGp5Pe2du9v7Kb5uU94azj8moTQY2PL/ujqfy3ctuW+N+G/brmTt+ekKjbV/+xV9zy8MT17jvYbtvlR8ct1+jbe898ZeZv2jxGvf9yRcOzgd2+s/opMdffCMf/97/ZsbQDyVJnu7a7V3P8wO/+kJ6da9ueP6LP9+XX/35/jV+T9cI14gVuUa0rWvEUWdfs8b9EtcI14jGXCNcI1bkGuEasbz1dY1Y8ZrwbppVAFxxxRWpqqrKaaedlp133rldfIo2ffb8LOzcebWvGTKw90rbZsyenzdmzF3j8ecuqGn0vJQ0ab8kWVxb1+j5osW1Tdq3V7eqlbbNmreoSfvOnLdwpW1vzZzXpH0X1ixp9Ly2rr7JP2tdfeORJPMWLW7Svr27d11p24w5C5q075z5i1ba1uRzs6R2pedN3XdVOZqy74w5C1ba9vbMpv0ezlvhf3h19aUm562ta1z4LaxZ0uyfdea8hU3ad9a8lc/NtHfmZu7CNf+Pe9HiFc5NbV3enr0w6dIjSbKgLlnwLhlWHM80d0FNk/K6RrhGrMg1om1dI5qa1zXCNWJ5rhGuEStyjXCNWF65XCOWaVYB8Prrr2e33XbLXnvttU7fvJwM7NMjddW9VvuaAX16rHLb4AGr3y9JoxYwSSqSJu2XJFWVjYuJrlWVTdq3R9eV35R9e3Zt0r79enZbaduG/Xqucb8k6VbdeF31ys6dmvyzdu7UeNRIz65VTdp3g36rODe9uzdp3949Vn5DN/ncdKlc6XlT911VjqbsO6D3yoXbBv16ZM6ClS8uK+q5wu9E504VTc5b2blTo+fdqrs0ad9V/d7069mtSfv27bnyudm4f6/0akJz37VqhXNT2Tk9uyQLFsxfmqF//1RXrfweSZa+P5fXq3t1086Na8Qa90tcI1wjGiuna0RTf1bXCNeI5blGuEasyDXCNWJ55XKNWKaitKrJ+2tw+OGHZ+zYsfnud7+7Tt+8HEyYMCEnnHBCLr744owePbroOEArOvLII/PQQw8lSR5++OH069ev4EQAALD+dFrzS1Z24IEH5t577820adNaOg9Aq6ivr29YAnDQoEH++AcAoMNp0hSARx55pNHzrbbaKoMHD84Xv/jFfOQjH8mIESPStevKQxuSZIcddljldoD1afLkyZk/f+nw/7FjxxacBgAA1r8mFQBf+cpXVrqj/7KZA5dccslq973jjjualwygBS379D9JttxyywKTAABAMZpUABx77LFtakk/gBUpAAAA6OiaVAAcd9xxrZ0DoFU988wzDY9NAQAAoCNq1k0AAdqSUqnUMAKgX79+GTRoUMGJAABg/WvSCICPfexjOeSQQ3Lsscc2PG+KioqKXHfddc1PB9AC3nrrrcyYMSPJ0uH/pjQBANARNakA6NSp02qfA5Szxx57rOHxVlttVWASAAAoTpMKgGuvvXa1zwHK2cMPP9zweMcddywwCQAAFMdH+UC798gjjzQ8HjduXIFJAACgOE0aAXDJJZc06+AVFRVWEAAKtWDBgoYVAEaNGpW+ffsWGwgAAArSpALg8ssvb9bBFQBA0Z544onU1dUlSXbYYYeC0wAAQHGaVAD87Gc/a+0cAK1i+fn/CgAAADqyJhUA2223XSvHAGgdy8//dwNAAAA6siYVAO/m1Vdfzb///e+8+uqrWbhwYc4666zcd999GTRoUIYNG9ZCEQGap66urmEJwA022CCbbrppwYkAAKA4zS4ALr744lx55ZWpr69PsnS+f5L885//zD//+c8ce+yx+fSnP90iIQGaY8KECZk3b16SpZ/+L7tOAQBAR9SsZQDvuOOOXHHFFdl6663z3//93zn44IMbvvbJT34yY8eOzWWXXZY77rijpXICrLXlh/+b/w8AQEfXrALguuuuy6BBg/Lf//3f2XHHHdOtW7eGrw0bNiz/9V//lf79++cPf/hDiwUFWFtuAAgAAP/RrALgxRdfzA477JAuXbqs8us9e/bMuHHj8vLLL69TOIB1sWwEQPfu3bPlllsWnAYAAIrVrAKgS5cuDfNq382SJUtSW1vbrFAA6+qNN97I1KlTkyTbbrttKivX6Z6nAADQ5jWrANh2221z//3354033ljl16dNm5ZHHnkkW2yxxTqFA2iu5Yf/W/4PAACauQrA8ccfn4cffjgnnnhiDj/88Lz22mtJknvvvTcTJ07Mn//858yfP98qAEBh3AAQAAAaa1YBMGLEiPz4xz/OD3/4w1x88cUN208//fSUSqV069Yt3/rWt7L99tu3WFCAtbFsBECnTp2y3XbbFRsGAADKQLMnxW677ba58sorc9999+W5557L7Nmz07Vr14wYMSK77757evXq1ZI5AZps7ty5mTBhQpJkzJgxrkcAAJBmFgDTp0/PwIEDU1lZmfHjx2f8+PGrfN0//vGPHHDAAesUEGBtPfrooymVSkmScePGFZwGAADKQ7NuAnjyySdn2rRp7/r1SZMm5Utf+lLOPffcZgcDaC43AAQAgJU1qwCYMWNGTj755Lz66quNti9YsCAXXHBBTjjhhDz55JPZfPPNWyQkwNpwA0AAAFhZswqA8847L/Pnz88pp5ySF198MUlyyy235Oijj87111+fvn375rTTTstFF13UomEB1mTJkiV54oknkiRDhgzJoEGDCk4EAADloVn3ANh2221z/vnn52tf+1pOPfXUDB06NM8880yqqqryyU9+Mp/85CfTrVu3ls4KsEbPPvtsFi1alMSn/wAAsLxmjQBIktGjR+fnP/95unbtmmeeeSZjxozJFVdckRNOOMEf/0BhzP8HAIBVa3YBkCTDhg3LL37xiwwePDiTJk3K5MmTWyoXQLMsP/9fAQAAAP/RpCkARxxxxGq/vmDBgixevDinn356BgwY0LC9oqIiV1999bolBGiiUqnUMAKgV69eGTVqVMGJAACgfDSpANhoo41SUVHR2lkA1skrr7ySGTNmJEnGjRuXTp3WaZATAAC0K00qAC644ILWzgGwziz/BwAA787HY0C7Yf4/AAC8uyaNAPjhD3+YnXbaKfvtt1/D86Y644wzmpcMYC0tKwC6dOmSbbbZpuA0AABQXppUANxyyy3p06dPQwFwyy23NOngFRUVCgBgvZgxY0YmTZqUJBk7dqzlSAEAYAVNKgCuueaa9OjRo9FzgHLy6KOPNjw2/x8AAFbWpAJg4403Xu1zgKK5ASAAAKxekwqA5f9hvbb8QxxYHx5++OGGx647AACwsiYVAF/5yldSUVHRrG9wxx13NGs/gKZatGhRnn766STJsGHDMnDgwIITAQBA+WlSAXDsscc2uwAAaG1PPfVUlixZksTyfwAA8G6aVAAcd9xxrZ0DoNmWn6akAAAAgFXrVHQAgHVl/j8AAKyZAgBo0+rr6xtGAPTv3z/Dhw8vOBEAAJQnBQDQpr344ouZM2dOkmTcuHHuVwIAAO9CAQC0acsP/zf/HwAA3p0CAGjT3AAQAACapkkFQH19fYt8s9ra2hY5DsAyywqA6urqjB07tuA0AABQvppUABx11FH5y1/+ksWLFzfrm9TU1OSPf/xjjjrqqGbtD7Aqb775ZqZMmZIk2XbbbVNVVVVwIgAAKF+VTXnRcccdlwsvvDAXX3xxDj744Oyzzz4ZOXLkam+2VVtbmxdeeCF33HFH/v73v6dnz5758pe/3FK5ARoN/7f8HwAArF6TCoD9998/e+yxR66++upce+21ueqqq9KtW7dsvvnm2XDDDdOzZ89069YtCxYsyJw5c/LWW2/lhRdeyOLFi9OjR48ceeSROfLII9OlS5fW/nmADmT5GwAqAAAAYPWaVAAkS+fXHnvssfn4xz+ef/7zn3nggQfy+OOP5/HHH1/ptb17987OO++c8ePHZ/fdd0/Xrl1bMjNAksYjAMaNG1dgEgAAKH9NLgCW6d69ew455JAccsghKZVKmT17dmbNmpW5c+ema9euGTBgQPr3798aWQEazJ8/P88991ySZPPNN0+fPn0KTgQAAOVtrQuA5VVUVKRv377p27dvC8UBaJrHH388dXV1SSz/BwAATdGkVQAAyo0bAAIAwNpp1giAPfbYY7UrACRLRwf07NkzG2ywQXbdddcceeSR6dWrV7NCAqxo+RsAGgEAAABr1qwRAAcccECGDBmSUqmUAQMG5H3ve1/22Wef7LDDDunWrVtKpVKGDBmSUaNGZcGCBbniiity/PHHZ+bMmS2dH+iAamtrG25AutFGG2XIkCHFBgIAgDagWSMA9t1339x666054YQTcvTRRzcaDVBTU5OLL744N9xwQ77yla9k3LhxufPOO/O9730vl1xySb72ta+1WHigY3r++eczf/78JEuH/69pRBIAANDMEQCXXnppxo4dm09+8pMr/cO7uro6J598ckaMGJELL7wwydIpAzvuuGMeeOCBdU8MdHjLz/83/B8AAJqmWQXASy+9lKFDh672Ne95z3vy8ssvNzwfNGiQKQBAi1h+/r8bAAIAQNM0qwDo379/nn766ZRKpVV+vVQq5YUXXkj37t0btr311luWCwTWWalUahgB0KNHj2yxxRYFJwIAgLahWQXAhz/84bzyyis57bTT8sILLzT62htvvJEf/vCHmThxYvbcc88kyU033ZQHH3ww48aNW+fAQMf2+uuv580330ySbLfddqmsbNatTAAAoMNp1r+cjzzyyEydOjU33HBDHnjggVRWVqZnz55ZsGBBFi9enFKplPe85z353Oc+lyQ577zz0q9fvxx77LEtGh7oeCz/BwAAzdOsAqCioiJf+cpXst9+++Xmm2/Oiy++mLlz56ZPnz4ZNGhQdtlllxx00EGpqqpKkpx66qkZP358BgwY0KLhgY5n+RsAmv8PAABNt05jZ7feeutsvfXWa3zdRz7ykXX5NgANlo0A6Ny5c7bbbrtiwwAAQBuyTgXApEmTctttt2Xy5MlZvHhx+vXrlzFjxmTvvfd2wz+gxc2ePbvhviNjxoxJjx49Ck4EAABtR7MLgMsuuyyXXXbZSisB3HLLLbnoooty8skn54Mf/OA6BwRY5tFHH214bPg/AACsnWYVAHfeeWd+97vfZcyYMTn22GMzZsyYVFdXZ/r06XnwwQdz/fXX57zzzsuAAQOy6667tnRmoINafv6/GwACAMDaaVYBcO2112aDDTbI+eefn65duzZs33TTTbPppptm//33z7HHHptrrrlGAQC0GDcABACA5uvUnJ1efPHFvPe97230x//yevXqlZ122qlhri7Aulq8eHGeeOKJJEvLxo022qjgRAAA0LY0qwDo1KlT6uvrV/uaioqK1NbWNisUwIqeeeaZ1NTUJPHpPwAANEezCoDRo0fnvvvuy+zZs1f59QULFuSBBx7I0KFD1ykcwDLLlv9LFAAAANAczSoAjjnmmMyZMyef+9zn8sc//jGvv/56ampq8vbbb+e2227LSSedlHfeeSeHHnpoS+cFOqjlCwA3AAQAgLXXrJsA7rDDDvnmN7+Z888/PxdccMEqX3P00UfnwAMPXKdwAElSKpUalgDs3bt33vOe9xScCAAA2p5mFQBJcuCBB2bnnXfOrbfemueffz6zZ89OdXV1RowYkX322ScjRoxoyZxAB/byyy/nnXfeSbK0gOzUqVmDlwAAoENrdgGQJP37988RRxzRUlkAVmn55f8M/wcAgOZpUgFw0003NfsbHHzwwc3eFyBxA0AAAGgJTSoAfvzjH6eioiKlUqlJB1322oqKCgUAsM6WFQBVVVXZZpttCk4DAABtU5MKgNNOO621cwCs0vTp0/PKK68kScaOHZvq6upiAwEAQBvVpALA3fyBopj/DwAALaNFbqX94IMP5rLLLmuJQwE0snwBYP4/AAA0X4sUAA888IACAGgVyxcA48aNKzAJAAC0bRbTBsrWwoUL88wzzyRJRo4cmQEDBhScCAAA2i4FAFC2nnzyySxZsiSJ4f8AALCuWqQAaOrygABrY9nyf4kCAAAA1lWTVgFYk8MOOyy77757SxwKoIEbAAIAQMtpkQJgyJAhGTJkSEscCiBJUl9fn0cffTRJMmDAgAwbNqzYQAAA0Ma5BwBQliZOnJi5c+cmSXbcccdUVFQUnAgAANo2BQBQlsz/BwCAlqUAAMrS8gXAjjvuWGASAABoHxQAQFladgPArl27Zssttyw4DQAAtH0KAKDsTJ06Na+//nqSZNttt02XLl0KTgQAAG2fAgAoO5b/AwCAlqcAAMqO+f8AANDyFABA2Xn00UeTJBUVFRk3blzBaQAAoH1QAABlZe7cuXnuueeSJKNHj06vXr0KTgQAAO2DAgAoK48//njq6+uTGP4PAAAtSQEAlBU3AAQAgNahAADKihsAAgBA61AAAGVjyZIleeKJJ5IkgwYNyuDBgwtOBAAA7YcCACgbzz33XBYsWJDE8H8AAGhpCgCgbCw//9/wfwAAaFkKAKBsuAEgAAC0HgUAUBZKpVLDDQB79uyZ0aNHF5wIAADaFwUAUBamTJmSt99+O0my/fbbp3PnzgUnAgCA9kUBAJSF5Zf/M/wfAABangIAKAtuAAgAAK1LAQCUhWUFQOfOnbPtttsWnAYAANofBQBQuFmzZmXixIlJkrFjx6Z79+4FJwIAgPZHAQAU7tFHH214bP4/AAC0DgUAULjlbwBo/j8AALQOBQBQuOVvAGgEAAAAtA4FAFCompqaPPnkk0mSzTbbLBtssEHBiQAAoH1SAACFeuqpp7J48eIkhv8DAEBrUgAAhTL8HwAA1g8FAFCo5QsAIwAAAKD1KACAwtTX1zcsAdivX7+MHDmy4EQAANB+KQCAwrz00kuZOXNmkmTcuHGpqKgoOBEAALRfCgCgMOb/AwDA+qMAAArz8MMPNzxWAAAAQOtSAACFWVYAVFVVZeutty44DQAAtG8KAKAQb7/9dl599dUkydZbb53q6uqCEwEAQPumAAAKYfk/AABYvxQAQCEUAAAAsH4pAIBCLH8DwHHjxhWYBAAAOgYFALDeLViwIM8880ySZNSoUenbt2+xgQAAoANQAADr3RNPPJG6urokPv0HAID1RQEArHfLD/83/x8AANYPBQCw3rkBIAAArH8KAGC9qqury2OPPZYk2WCDDbLpppsWnAgAADoGBQCwXr3wwguZN29ekqWf/ldUVBScCAAAOobKogOsqK6uLldffXX+9re/Zdq0aenevXt23nnnfOELX0j//v2Ljgeso+Xn/++www4FJgEAgI6l7AqAiy66KFdffXUOO+ywbL/99nnllVdyxRVXZMqUKfnNb37j00Jo4xQAAABQjLIqAGpqavLnP/85Bx10UE455ZQkyfjx49OvX7/8+Mc/zkMPPZSddtqp4JRAc5VKpYYCoFu3bhkzZkzBiQAAoOMoq3sAvPbaa1m4cGF23nnnRtvHjh2bJHnppZeKiAW0kAkTJmTatGlJls7/79KlS8GJAACg4yirEQAbbrhhfvKTn2TzzTdvtP3ZZ59t+DrQdt1+++0Nj/faa68CkwAAQMdTVgVAr169VloT/KGHHsqvfvWrbLzxxtl1112bddzp06dnxowZq/za5MmTm3VMYO3961//anisAAAAgPWrrAqA5c2aNSsXXnhh/va3v2WjjTbKueeem27dujXrWDfeeGMuu+yylg0IrJV33nknjz32WJJk1KhR2WyzzQpOBAAAHUtZFgC33nprzj///CxcuDAf+9jHcvzxx6d79+7NPt6HPvSh7Lbbbqv82uTJk3P22Wc3+9hA09x5550plUpJfPoPAABFKLsC4E9/+lN++tOfZquttso3v/nNDB06dJ2POXDgwAwcOLAF0gHNtfz8/7333rvAJAAA0DGVVQEwf/78/PrXv852222Xn/zkJ6msLKt4QDMtWbIkd999d5KkT58+2X777QtOBAAAHU9Z/YX90EMPZdGiRdl5553zyCOPrPT1IUOGZJNNNikgGbAuHnnkkcydOzdJsvvuuyv3AACgAGX1r/CpU6cmSS688MJVfv3Tn/50jjvuuPUZCWgBhv8DAEDxyqoA+MQnPpFPfOITRccAWtiy5f86deqU3XffveA0AADQMXUqOgDQvr3yyit56aWXkiQ77LBD+vbtW2wgAADooBQAQKta9ul/Yvk/AAAokgIAaFUKAAAAKA8KAKDVzJ07Nw8++GCSZJNNNsmoUaMKTgQAAB2XAgBoNffcc0+WLFmSZOmn/xUVFQUnAgCAjksBALQaw/8BAKB8KACAVlFfX99QAHTr1i277LJLwYkAAKBjUwAAreKpp57KjBkzkiS77bZbqqurC04EAAAdmwIAaBW33357w+O99967wCQAAECiAABayfLz//fcc8/iggAAAEkUAEArmDZtWp555pkkydixY7PRRhsVnAgAAFAAAC3ujjvuaHhs+D8AAJQHBQDQ4pYf/q8AAACA8qAAAFpUTU1N7rnnniTJwIEDs9VWWxWcCAAASBQAQAu7//77s3DhwiTJXnvtlU6dXGYAAKAc+Jc50KKWH/6/1157FZgEAABYngIAaDGlUim33357kqRLly7ZbbfdCk4EAAAsowAAWswLL7yQ119/PUmy8847p2fPngUnAgAAllEAAC1m+eX/DP8HAIDyogAAWsyy4f+JAgAAAMqNAgBoETNnzsyjjz6aJBk5cmSGDh1acCIAAGB5CgCgRdx1112pr69P4tN/AAAoRwoAoEUsP/x/7733LjAJAACwKgoAYJ3V1tbmrrvuSpL07t0748aNKzgRAACwIgUAsM4effTRzJkzJ0kyfvz4dOnSpeBEAADAihQAwDoz/B8AAMqfAgBYZ//617+SJJ06dcruu+9ecBoAAGBVFADAOnn11Vfz4osvJkm233779O/fv+BEAADAqigAgHWy7NP/xPJ/AABQzhQAwDpZvgAw/x8AAMqXAgBotvnz5+eBBx5IkgwePDibb755wYkAAIB3owAAmu2ee+7J4sWLkyz99L+ioqLgRAAAwLtRAADNZv4/AAC0HQoAoFnq6+sbCoCuXbtml112KTgRAACwOgoAoFmefvrpvP3220mS3XbbLV27di04EQAAsDoKAKBZDP8HAIC2RQEANIsCAAAA2hYFALDW3nrrrTz11FNJkrFjx2bjjTcuOBEAALAmCgBgrd1xxx0Nj/fcc8/CcgAAAE2nAADW2u23397weO+99y4wCQAA0FQKAGCt1NTU5J577kmS9O/fP9tss03BiQAAgKZQAABr5cEHH8yCBQuSLL35X6dOLiMAANAW+Jc7sFaWH/7v7v8AANB2KACAJiuVSg3L/1VWVub9739/wYkAAICmUgAATfbiiy9m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hx12WLp27VpwIgAAoD0pqwJg4sSJSZKRI0c22j58+PAkyeTJk9d7JlgfVrz535FHHllgGgAAoD0qqykAs2fPTpL06dOn0fZevXolSebPn9+s406fPj0zZsxY5deUCpSD++67L6+88kqSZNddd82IESOKDQQAALQ7ZVUA1NbWrnJ7RUVFkjR7SPSNN96Yyy67rLmxoNUtf/O/o446qsAkAABAe1VWBcCyT/rnzp2b6urqhu3LPvlfcWRAU33oQx/KbrvttsqvTZ48OWeffXazjgst4e23384tt9ySJBk4cGD23XffghMBAADtUVkVAMvm+r/00ksZOHBgw/ZlQ6NHjRrVrOMOHDiw0fGgnPz85z9vGP3y8Y9/PFVVVQUnAgAA2qOyugng2LFj07dv39x6662Ntt9yyy3ZaKONml0AQLl68MEH87//+79Jku7du+foo48uOBEAANBeldUIgC5duuSzn/1szjvvvPTu3TvbbbddHnnkkdx000359re/XXQ8aFE1NTU5/fTTG55/5StfyaBBgwpMBAAAtGdlVQAkS+frl0qlXHPNNbnhhhsyePDgnHHGGeZF0+78/Oc/z8svv5wk2X777fOpT32q4EQAAEB7VnYFQJJ8+MMfzoc//OGiY0CrefbZZ3PRRRclWTry5Zxzzknnzp0LTgUAALRnZXUPAOgIamtrc9ppp6Wuri5J8oUvfCGbb755wakAAID2TgEA69mll16aZ555JsnSlS1OPPHEghMBAAAdgQIA1qNXXnkl559/fpKkoqIi5557rmX/AACA9UIBAOtJqVTKGWeckZqamiTJsccem+23377gVAAAQEehAID15Nprr83999+fJBkyZEi+8pWvFJwIAADoSBQAsB68+eabOffccxue//CHP0yPHj0KTAQAAHQ0CgBoZaVSKd/97nczd+7cJMmhhx6a8ePHF5wKAADoaBQA0Mpuvvnm3HrrrUmSAQMG5Iwzzig4EQAA0BEpAKAVzZo1K9/73vcann/3u99N3759C8sDAAB0XAoAaEXnnntupk+fniTZd999c9BBBxWcCAAA6KgUANBK7rnnnvzhD39IkvTs2TNnnXVWKioqCk4FAAB0VAoAaAULFixoNNf/m9/8ZjbeeOMCEwEAAB2dAgBawfnnn58pU6YkSXbaaacceeSRBScCAAA6OgUAtLAnnngiv/vd75IkVVVVOeecc9Kpk7caAABQLH+VQAtavHhxTjvttNTX1ydJvvzlL2f48OEFpwIAAFAAQIu68MIL88ILLyRJxo4dm+OPP77gRAAAAEspANqQqVOn5pVXXik6Bu/ixRdfzK9+9askSefOnXPuueemsrKy4FQAAABLKQDaiKeffjqHHXZYjjvuuLzzzjtFx2EF9fX1+da3vpXFixcnST772c9m7NixBacCAAD4DwVAG1AqlfK9730vb775ZiZPnpyTTjopNTU1RcdiOVdccUUeffTRJMmwYcNyyimnFJwIAACgMeOTl/nXxckzvVf/mn5Dkr1WmNP9r0uSma+v+fhb7JFsucd/ni9ZlPzlx02KVrHHZ3LBBRfk0EMPzdtvv51ec6Zk4f9+K1V9+qaiYjU7VlYlHzqt8bZH/pJMfmzN33TwmGSXjzfe9refJovmrnnf7T+YDB/3n+ez30r++Zs175ckH/hy0n258zDxvuSpW9e8X68Nkv1Oarzt31ckb7205n3fs3OyzQGNt/3x+2veL0ned1TeqO+e8847L0my87CBueyEXVP1tyac20O/0/j5k/9IXnxgzfttOCJ5/ycbb7v118nct9e879b7JaN2/c/zBXOSm89f835Jss+JSZ8N//P85UeTx/665v269koO+n+Nt91/XfLGc2ved+j2yQ6HNN52438ltYvXvO9OH0s22fI/z2dMSe783Zr3S5JDvpF06fqf58/emTx/55r3K+gakT0+kwzY9D/PX3s2efAPa97PNWK9XCOy8Xv+83zai8m9VzZtX9eINe/rGtG0vK4Ra97PNcI1YkWuEWvezzWivK4RK14T3oUCYJlF85IFpdW/pnvflbfVzE8WzF7z8Zcsavy8lKbtlyT1dRk8eNNcdNFF+cQnPpGulZ3Tt6oiWbiG/btUr7xt8YKmfd/FC1betmhu0/Zd8aJaqm/6z1qqb/x8yeKm7bv8RXaZpp6bxYtW3tbEvKW62pz57TMzf/78JMl+++yVqtqFSe3CJu2/Uo6mfN+a+Stva+q5WdKC56a2iedmVdbl93DhnGRJE0bA1C1p/Ly+bi1+1hWeL2niuSnwGtFI3ZImvm9cI1r7GpH62pWfN/t94xqxytetyDViZa4Ra97PNcI1YkWuEWvezzWibV0j/o8CYJmuPRu3QatS3WPV27r3WfPxV/ylqUjT9kuSTp2TJNtss01++tOf5rrzz8rU2Uv/wOzbt0+6deu26v0qq1beVtW9ad+3qvvK27r2alreFb9vRaem/6wVK8xK6VLVtH1Xla2p56ZqFW/oJua95/4HcuedSxvdjTbaKEd84qjksT83ad9V5mjK913V72HXXitf+FelSwuem8p1ODfr8nvYrXfSpQnNfecujZ936rwWP+sKz7usw7lZj9eIBp27NG1f14hWv0akU+XKz5u676pyuEas/LoVuUaszDVizfu5RrhGrMg1Ys37uUa0rWvE/6kolUpr+Ni7fZswYUJOOOGEXHzxxRk9enTRcZrkkksuyTnnnJMk6dKlSy677LLssssuBafqeGbMmJEDDjggM2fOTJL85je/yX777VdwKgAAgFVzE8A26LjjjsvRRx+dJFmyZElOOumkTJo0qeBUHc8PfvCDhj/+DzroIH/8AwAAZU0B0AZVVFTkO9/5TnbfffckyZw5c/LZz342M2bMKDhZx/Gvf/0rf/nLX5Ikffr0yXe/+92CEwEAAKyeAqCNqqyszAUXXJAtttgiSfLqq6/m85//vOUB14O5c+fmzDPPbHh+xhlnZODAgQUmAgAAWDMFQBvWq1evXHzxxdlww6VLqjz22GP5+te/nvr6+jXsybo477zzMm3atCTJ+PHjc+ihhxacCAAAYM0UAG3c4MGDc/HFFzesBHDTTTflJz/5ScGp2q+HH344V1xxRZKkW7duOfvss1NRseKtXgEAAMqPAqAd2GqrrfKzn/2s4Q/RX//61/nDH/5QcKr2p6amJt/61rcann/1q1/NJptsUmAiAACAplMAtBP77LPPSvPS77333gITtT+/+MUv8tJLLyVJtttuu3zqU58qOBEAAEDTKQDakU9/+tM55phjkiS1tbX5whe+kBdffLHgVO3Dc889l4suuihJ0qVLl5xzzjnp3LlzwakAAACaTgHQzpx55pnZa6+9kiy9W/3xxx+f6dOnF5yqbautrc1pp52W2traJMlJJ52U0aNHF5wKAABg7SgA2pnKysr87Gc/y5Zbbpkkee211/L5z38+ixYtKjhZ2/W73/0uTz/9dJJk1KhROfHEEwtOBAAAsPYUAO1Qjx49cvHFF2fjjTdOkjz++OP52te+ZnnAZpg8eXLOP//8JElFRUXOOeecVFdXFxsKAACgGRQA7dTGG2+ciy++ON27d0+S/P3vf895551XcKq2pVQq5YwzzmgYPfGpT30q48aNKzgVAABA8ygA2rEtt9wyF1xwQTp1WnqaL7zwwlx99dUFp2o7rrvuutx3331JkiFDhuSrX/1qwYkAAACaTwHQzu211175zne+0/D8O9/5Tv79738XmKhteOutt3LOOec0PD/77LPTo0ePAhMBAACsGwVAB3DMMcfkM5/5TJKkrq4uX/ziF/PCCy8UnKq8fe9738vcuXOTJB/5yEey++67F5wIAABg3SgAOohvfetb2XfffZMk8+bNy2c/+9m8/fbbBacqTzfffHP+8Y9/JEn69++fM888s+BEAAAA604B0EF07tw5P/3pTzN27Ngkyeuvv57Pfe5zWbhwYcHJysvs2bPzve99r+H5d77znfTr16+4QAAAAC1EAdCBdO/evdHygE8++WS+8pWvWB7w/5RKpZx99tkNIyP22WeffPCDHyw4FQAAQMtQAHQwG220US655JKGG9rdcsst+dGPflRwquK98sor+eQnP5k//vGPSZKePXvmrLPOSkVFRcHJAAAAWoYCoAPaYost8vOf/zydO3dOkvz2t7/NlVdeWXCqYtTW1ubCCy/MQQcdlPvvv79h+7e//e0MGjSowGQAAAAtSwHQQe2xxx757ne/2/D8e9/7Xu68884CE61/Tz/9dA499ND8+Mc/Tk1NTZJkk002yWWXXZaPfexjBacDAABoWQqADuzoo4/O8ccfn2Tp8oCnnHJKnn/++YJTtb6FCxfmRz/6UQ499NA888wzSZJOnTrl+OOPz9///veMHz++4IQAAAAtTwHQwZ122mnZf//9k/xnecC33nqr4FSt5957781BBx2Uiy66KHV1dUmS0aNH5w9/+ENOP/30dO/eveCEAAAArUMB0MF16tQpP/nJT7LNNtskSaZOnZoTTjghCxYsKDhZy5o9e3a+9a1v5Zhjjsmrr76aJKmqqspXvvKV/PnPf862225bcEIAAIDWpQAg3bp1y0UXXZTBgwcnWTo3/v/9v//X8Al5W1YqlXLzzTfngAMOyLXXXtuw/b3vfW/++te/5otf/GKqqqoKTAgAALB+KABIkmywwQb57W9/m549eyZJbrvttvzXf/1XwanWzbRp03LSSSfli1/8Yt5+++0kS5f3+8EPfpArr7wyI0eOLDghAADA+qMAoMHo0aPzi1/8omF5wEsvvTS///3vC0619urr63PllVfmgAMOyK233tqwfd99983NN9+co446Kp06+dUHAAA6Fn8F0cj48ePz/e9/v+H597///fzrX/8qMNHaefnll3P00Ufn29/+dubNm5ckGTBgQH7+85/nN7/5TQYNGlRwQgAAgGIoAFjJkUcemc997nNJln6afuqpp+aJJ54oONXqLVmyJL/+9a9z0EEH5cEHH2zY/rGPfSy33HJLDjrooFRUVBSYEAAAoFiVRQegPH3961/Pq6++mptvvjnz58/PoYcemqFDh+Z973tf3ve+92WXXXZJ//79i46ZJHnyySfzrW99K88//3zDts022yxnn312dttttwKTAQAAlA8FAKvUqVOn/Pd//3emTZuWxx9/PEkyefLkTJ48OVdddVUqKiqy5ZZbZtddd8373ve+vPe970337t3Xa8YFCxbk/PPPz+9+97vU19c35D7uuOPy5S9/Od26dVuveQAAAMqZAoB31bVr1/zP//xPLr/88tx11115/PHHs2TJkiRLl9d75pln8swzz+S3v/1tunTpku23375hhMA222yTLl26tFq2f//73znzzDMzZcqUhm1jxozJueeem6233rrVvi8AAEBbVVEqlUpFhyjShAkTcsIJJ+Tiiy/O6NGji45T1hYsWJCHHnoo99xzT+677748++yz7/raHj16ZKeddsr73ve+7Lbbbtl8881bZA7+rFmz8sMf/jB//OMfG7ZVVVXl1FNPzfHHH9+qpQMAAEBbZgQATda9e/fsscce2WOPPZIk77zzTu6///7cc889uffee/Pqq682vHb+/Pn517/+1bCCwIABAxqmC+y2227ZZJNN1up7l0ql3HTTTfn+97+fGTNmNGzfeeed88Mf/jDDhw9vgZ8QAACg/TICwAiAFvP666/n3nvvbRghMH369Hd97WabbdZQCOy6664ZMGDAu7526tSp+e53v5t//vOfDdt69uyZb33rWzn88MPTqZPFLAAAANZEAaAAaBWlUikvvPBC7r333tx777158MEHM2/evHd9/ZgxYxruH/De9743PXr0SH19fa688sr8f//f/9do3/322y9nnXVWNtpoo/XxowAAALQLCgAFwHqxZMmSPPXUUw2FwGOPPZbFixev8rWVlZXZbrvtUltb27ACQZJssMEGOeuss3LAAQesp9QAAADth3sAsF506dIl48aNy7hx43LyySdn4cKFefjhhxumDDz77LNZ1kXV1tbm4YcfbrT/4YcfntNOOy19+vQpIj4AAECbpwCgEN26dcv48eMzfvz4JMnMmTPzwAMPNBQCr7zySpKl9wr44Q9/mPe9730FpgUAAGj7FACUhX79+uUDH/hAPvCBDyRJ3njjjbz88svZcccdU11dXXA6AACAtk8BQFkaPHhwBg8eXHQMAACAdsP6aQAAANABKAAAAACgA1AAAAAAQAegAAAAAIAOQAEAAAAAHYACAAAAADoABQAAAAB0AAoAAAAA6AAUAAAAANABKAAAAACgA1AAAAAAQAegAAAAAIAOQAEAAAAAHYACAAAAADoABQAAAAB0AAoAAAAA6AAUAAAAANABKAAAAACgA1AAAAAAQAegAAAAAIAOQAEAAAAAHYACAAAAADoABQAAAAB0AAoAAAAA6AAUAAAAANABKAAAAACgA1AAAAAAQAegAAAAAIAOQAEAAAAAHYACAAAAADoABQAAAAB0AAoAAAAA6AAUAAAAANABKAAAAACgA1AAAAAAQAegAAAAAIAOQAEAAAAAHYACAAAAADqAyqIDFK2mpiZJMnny5IKTAAAAQPMMHTo0Xbt2Xe1rOnwBMG3atCTJ2WefXXASAAAAaJ6LL744o0ePXu1rKkqlUmk95SlLs2bNyoMPPphBgwalqqqq6DirNXny5Jx99tk588wzM3To0KLjsAbOV9vifLUtzlfb4Vy1Lc5X2+J8tS3OV9vSFs+XEQBN0Ldv3+y///5Fx1grQ4cOXWOzQ/lwvtoW56ttcb7aDueqbXG+2hbnq21xvtqW9na+3AQQAAAAOgAFAAAAAHQACgAAAADoABQAAAAA0AEoAAAAAKADUAC0IQMGDMinP/3pDBgwoOgoNIHz1bY4X22L89V2OFdti/PVtjhfbYvz1ba01/NVUSqVSkWHAAAAAFqXEQAAAADQASgAAAAAoANQAAAAAEAHoAAAAACADkABAAAAAB2AAgAAAAA6AAUAAAAAdAAKAAAAAOgAFAAAAADQASgAAAAAoAOoLDoA8B91dXWpqalZaXvnzp1TXV1dQCJoP7y/oPV4f0Hr8f6iJSkAysScOXNy0UUX5Z577sns2bMzcODA7L///vn0pz+dysp3P03z58/Pr371q/z73//OokWLMmbMmJx00kkZPXp0o9ddddVV+fOf/5wZM2Zk0003zdFHH5199923tX+sdu+ss85Kp06d8u1vf3uNr500aVJ+85vf5Mknn0xFRUXGjBmTz3/+89liiy0aXnPHHXfkrLPOWmnfrbfeOr/85S9bNHtH1NLnK/Heak1rc76mTp3acL4WLVqU4cOH57jjjsuOO+7Y8Brvr9bV0ucr8f5qTU09XzU1Namrq3vXr1dVVaWystL7q5W19PlKvL9a09pcD5PkhhtuyHXXXZepU6emd+/e2X333fOFL3yh4Y9776/W1dLnKynv95cCoAyUSqV84xvfyKuvvppPfepTGTRoUB5++OH8/ve/z5IlS3LSSSe9677f/va3M3HixHzmM59J//79c+ONN+aUU07JpZdemiFDhiRJLr/88vzud7/LUUcdlS222CKPPPJIvv/976eioiL77LPP+vox253HHnssd999d/bYY481vnb27Nn58pe/nD59+uRLX/pSunbtmr/97W859dRT89vf/jabbrppkuSNN97I0KFD8/Wvf73R/j169GiVn6EjaY3z5b3VetbmfM2fPz+nnHJKunXrls997nOpqqrKTTfdlK9//ev56U9/mu222y6J91drao3z5f3VetbmfH3961/P448//q5f/9a3vpUDDzzQ+6sVtcb58v5qPWtzvpKlfyheeOGF+djHPpZtttkmEyZMyFVXXZUuXbrk5JNPTuL/X62pNc5Xub+/FABl4Iknnsizzz6bM888M/vvv3+SZI899siCBQty3XXX5dhjj0337t1X2u+RRx7Jww8/nB/96EfZddddkyS77rprDj/88Pz+97/Paaedlnnz5uV///d/c/jhh+eEE05IkowfPz5vvvlmLr744rL4JWxrrrnmmvzxj3/M1KlTm7zPddddl4ULF+bSSy/NBhtskCTZc889c8wxx+Tyyy/PGWeckSR5/fXXM3LkyGyzzTatkr0jaq3z5b3VOppzvv7973/nzTffzP/8z/9k+PDhSZLdd989hx9+eP7yl780/EHp/dXyWut8eX+1juacr1NPPTXz589f5bFeeOGFvPe9703i/dUaWut8eX+1juacr9mzZ+eyyy7LEUcc0fCB3+67756ampo89NBDDa/z/mp5rXW+2sL7SwFQBl588cUkyU477dRo+9ixY3PrrbdmypQpKw3pT5b+I6pfv37Z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\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res[-1]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33063fb7",
   "metadata": {},
   "source": [
    "Or we might want to produce a contour plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "9aaf79d1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T22:37:49.733824Z",
     "iopub.status.busy": "2022-10-05T22:37:49.733416Z",
     "iopub.status.idle": "2022-10-05T23:00:39.855242Z",
     "shell.execute_reply": "2022-10-05T23:00:39.853854Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4f7f51bc90ee441c81be44bd6a117c46",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Profiling likelihood:   0%|          | 0/400 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "res = jl.get_contours(\n",
    "    \"PSR_J0534p2200.spectrum.main.Super_cutoff_powerlaw.K\",\n",
    "    1.6e-13,\n",
    "    2.2e-13,\n",
    "    20,\n",
    "    \"PSR_J0534p2200.spectrum.main.Super_cutoff_powerlaw.index\",\n",
    "    -2.0,\n",
    "    -1.7,\n",
    "    20,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "2cbcba67",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T23:00:39.861244Z",
     "iopub.status.busy": "2022-10-05T23:00:39.860755Z",
     "iopub.status.idle": "2022-10-05T23:00:40.053932Z",
     "shell.execute_reply": "2022-10-05T23:00:40.052625Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res[-1]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0403a69b",
   "metadata": {},
   "source": [
    "**Pro-trick:** We can also axcess the GTAnalysis object of fermipy:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "4ac01a42",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T23:00:40.059209Z",
     "iopub.status.busy": "2022-10-05T23:00:40.058810Z",
     "iopub.status.idle": "2022-10-05T23:00:40.063482Z",
     "shell.execute_reply": "2022-10-05T23:00:40.062200Z"
    }
   },
   "outputs": [],
   "source": [
    "# res = jl.fit()\n",
    "# LAT.gta.write_roi('test',make_plots=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c0d30c43",
   "metadata": {},
   "source": [
    "All the plots are saved in the output directory as png files:\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "d74f5c3f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T23:00:40.081340Z",
     "iopub.status.busy": "2022-10-05T23:00:40.080822Z",
     "iopub.status.idle": "2022-10-05T23:00:40.089327Z",
     "shell.execute_reply": "2022-10-05T23:00:40.085757Z"
    }
   },
   "outputs": [],
   "source": [
    "# pngs=Path(f\"{fermipy_output_directory}\").glob(\"*png\")\n",
    "# for png in pngs:\n",
    "#    print(png)\n",
    "#    my_image=Image(str(png))\n",
    "#    display(my_image)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50e9fb87",
   "metadata": {},
   "source": [
    "We can also plot the resulting model:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "df7783e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T23:00:40.097157Z",
     "iopub.status.busy": "2022-10-05T23:00:40.096658Z",
     "iopub.status.idle": "2022-10-05T23:00:40.821928Z",
     "shell.execute_reply": "2022-10-05T23:00:40.820776Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "energies = sp.logspace(1, 6, 100) * u.MeV\n",
    "fig, ax = plt.subplots()\n",
    "# we only want to visualize the relevant sources...\n",
    "src_to_plot = [\"Crab\", \"PSR_J0534p2200\"]\n",
    "# Now loop over all point sources and plot them\n",
    "for source_name, point_source in model.point_sources.items():\n",
    "    for src in src_to_plot:\n",
    "        if src in source_name:\n",
    "            # Plot the sum of all components for this source\n",
    "\n",
    "            ax.loglog(energies, point_source(energies), label=source_name)\n",
    "            # If there is more than one component, plot them also separately\n",
    "\n",
    "            if len(point_source.components) > 1:\n",
    "\n",
    "                for component_name, component in point_source.components.items():\n",
    "                    ax.loglog(\n",
    "                        energies,\n",
    "                        component.shape(energies),\n",
    "                        \"--\",\n",
    "                        label=f\"{component_name} of {source_name}\",\n",
    "                    )\n",
    "\n",
    "# Add a legend\n",
    "ax.legend(loc=0, frameon=False)\n",
    "\n",
    "ax.set_xlabel(\"Energy (MeV)\")\n",
    "ax.set_ylabel(r\"Flux (ph cm$^{-2}$ s$^{-1}$ keV$^{-1}$\")\n",
    "ax.set_ylim([1e-18, 1e-8])\n",
    "\n",
    "# show the plot\n",
    "fig"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a0a68b6",
   "metadata": {},
   "source": [
    "We can also do a bayesian analysis."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34f7d45d",
   "metadata": {},
   "source": [
    "This will set priors based on the current defined min-max (log-uniform or uniform)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "98c77db0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T23:00:40.827663Z",
     "iopub.status.busy": "2022-10-05T23:00:40.827258Z",
     "iopub.status.idle": "2022-10-05T23:00:40.843226Z",
     "shell.execute_reply": "2022-10-05T23:00:40.842145Z"
    }
   },
   "outputs": [],
   "source": [
    "for param in model.free_parameters.values():\n",
    "\n",
    "    if param.has_transformation():\n",
    "        param.set_uninformative_prior(Log_uniform_prior)\n",
    "    else:\n",
    "        param.set_uninformative_prior(Uniform_prior)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "17f31b8b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T23:00:40.848097Z",
     "iopub.status.busy": "2022-10-05T23:00:40.847659Z",
     "iopub.status.idle": "2022-10-05T23:12:22.824189Z",
     "shell.execute_reply": "2022-10-05T23:12:22.822510Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:00:40 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using IRFs P8R3_SOURCE_V3                                                     </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/plugins/FermipyLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">FermipyLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/plugins/FermipyLike.py#109\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">109</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:00:40\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using IRFs P8R3_SOURCE_V3                                                    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=597528;file:///Users/runner/work/threeML/threeML/threeML/plugins/FermipyLike.py\u001b\\\u001b[2mFermipyLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=960904;file:///Users/runner/work/threeML/threeML/threeML/plugins/FermipyLike.py#109\u001b\\\u001b[2m109\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Found Galactic template for IRF. P8R3_SOURCE_V3: /usr/local/miniconda/envs/test_env/share/fermitools/refdata/fermi/galdiffuse/gll_iem_v07.fits\n",
      "\n",
      "Cutting the template around the ROI: \n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Found Isotropic template for irf P8R3_SOURCE_V3: /usr/local/miniconda/envs/test_env/share/fermitools/refdata/fermi/galdiffuse/iso_P8R3_SOURCE_V3_v1.txt\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: Point source PKS_0459p060 lies 17.6412 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4C_p06d21 lies 17.7192 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _1ES_0647p250 lies 17.7262 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source NVSS_J065035p205556 lies 17.7265 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0551d7p0446 lies 17.7346 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source GB6_J0454p3724 lies 17.751 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source PSR_J0631p1036 lies 17.7813 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source GB6_J0648p1749 lies 17.8402 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0537d6p0400 lies 18.0266 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0442d8p3609 lies 18.0663 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0424d8p3117 lies 18.0883 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0450d7p0715 lies 18.1415 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source B2_0552p39A lies 18.3309 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _1RXS_J064814d1p160708 lies 18.3607 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source MG2_J065230p1934 lies 18.3948 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source PKS_0502p049 lies 18.4196 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source RX_J0648d7p1516 lies 18.8078 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source GB6_J0620p3806 lies 18.8403 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source PSR_J0622p3749 lies 18.8565 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0641d4p3349 lies 18.8672 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source B2_0654p24 lies 18.868 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _1RXS_J065331d8p181448 lies 18.8952 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0412d6p2253c lies 18.9319 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source GB6_J0653p2816 lies 18.95 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source PMN_J0444p0717 lies 18.9983 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source MG1_J050533p0415 lies 19.0804 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0559d3p0352 lies 19.1138 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source TXS_0431p092 lies 19.1184 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source B3_0509p406 lies 19.2344 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source B2_0635p35 lies 19.2996 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source PKS_0550p032 lies 19.3012 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0431d0p3529c lies 19.3208 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _2MASX_J06533986p1636432 lies 19.4116 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0658d7p2318 lies 19.4488 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source GB6_J0555p0304 lies 19.5898 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source B2_0655p27A lies 19.6951 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0642d4p1048 lies 19.7319 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source NVSS_J050650p032401 lies 19.7897 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n",
      "WARNING: Point source _4FGL_J0409d2p2542 lies 19.8196 degrees from the ROI center at RA, Dec = 83.6333, 22.0133 7.57107\n"
     ]
    }
   ],
   "source": [
    "# It's better to remove the output directory,...\n",
    "shutil.rmtree(fermipy_output_directory)\n",
    "\n",
    "bayes = BayesianAnalysis(model, data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5b962d25",
   "metadata": {},
   "source": [
    "Take care of the nuisance parameters `LAT_isodiff_Normalization` and `LAT_galdiff_Prefactor`, which are only created during the previous step."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "5e7b66e6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T23:12:22.830762Z",
     "iopub.status.busy": "2022-10-05T23:12:22.830240Z",
     "iopub.status.idle": "2022-10-05T23:12:22.837654Z",
     "shell.execute_reply": "2022-10-05T23:12:22.836504Z"
    }
   },
   "outputs": [],
   "source": [
    "model.LAT_isodiff_Normalization.fix = True\n",
    "model.LAT_galdiff_Prefactor.set_uninformative_prior(Log_uniform_prior)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "652a1363",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T23:12:22.843413Z",
     "iopub.status.busy": "2022-10-05T23:12:22.842879Z",
     "iopub.status.idle": "2022-10-05T23:14:54.422801Z",
     "shell.execute_reply": "2022-10-05T23:14:54.421371Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:12:22 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> sampler set to </span><span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">emcee</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                    </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/bayesian/bayesian_analysis.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">bayesian_analysis.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/bayesian/bayesian_analysis.py#197\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">197</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:12:22\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m sampler set to \u001b[0m\u001b[1;34memcee\u001b[0m\u001b[1;38;5;251m                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=263696;file:///Users/runner/work/threeML/threeML/threeML/bayesian/bayesian_analysis.py\u001b\\\u001b[2mbayesian_analysis.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=375372;file:///Users/runner/work/threeML/threeML/threeML/bayesian/bayesian_analysis.py#197\u001b\\\u001b[2m197\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ade8e1d7caf2491993dbd3ac28181793",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/10 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5132438ded6c454088212b208ae7328b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/500 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:14:52 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Mean acceptance fraction: </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">0.48119999999999996</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                               </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/bayesian/emcee_sampler.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">emcee_sampler.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/bayesian/emcee_sampler.py#157\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">157</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:14:52\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Mean acceptance fraction: \u001b[0m\u001b[1;37m0.48119999999999996\u001b[0m\u001b[1;38;5;251m                              \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=232712;file:///Users/runner/work/threeML/threeML/threeML/bayesian/emcee_sampler.py\u001b\\\u001b[2memcee_sampler.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=244511;file:///Users/runner/work/threeML/threeML/threeML/bayesian/emcee_sampler.py#157\u001b\\\u001b[2m157\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:14:53 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> fit restored to maximum of posterior                                         </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/bayesian/sampler_base.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">sampler_base.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/bayesian/sampler_base.py#178\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">178</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:14:53\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m fit restored to maximum of posterior                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=927331;file:///Users/runner/work/threeML/threeML/threeML/bayesian/sampler_base.py\u001b\\\u001b[2msampler_base.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=198522;file:///Users/runner/work/threeML/threeML/threeML/bayesian/sampler_base.py#178\u001b\\\u001b[2m178\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> fit restored to maximum of posterior                                         </span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/bayesian/sampler_base.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">sampler_base.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///Users/runner/work/threeML/threeML/threeML/bayesian/sampler_base.py#178\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">178</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m fit restored to maximum of posterior                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=385301;file:///Users/runner/work/threeML/threeML/threeML/bayesian/sampler_base.py\u001b\\\u001b[2msampler_base.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=352061;file:///Users/runner/work/threeML/threeML/threeML/bayesian/sampler_base.py#178\u001b\\\u001b[2m178\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Maximum a posteriori probability (MAP) point:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mMaximum a posteriori probability \u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mMAP\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m point:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>PSR_J0534p2200...K</th>\n",
       "      <td>(9.39 -0.09 +0.6) x 10^-14</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PSR_J0534p2200...index</th>\n",
       "      <td>-1.987 -0.011 +0.035</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NVSS_J052622p224801.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(0.002 +0.026 +8) x 10^-17</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LAT_galdiff_Prefactor</th>\n",
       "      <td>(9.51 +/- 0.19) x 10^-1</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                  result  \\\n",
       "parameter                                                                  \n",
       "PSR_J0534p2200...K                            (9.39 -0.09 +0.6) x 10^-14   \n",
       "PSR_J0534p2200...index                              -1.987 -0.011 +0.035   \n",
       "NVSS_J052622p224801.spectrum.main.Powerlaw.K  (0.002 +0.026 +8) x 10^-17   \n",
       "LAT_galdiff_Prefactor                            (9.51 +/- 0.19) x 10^-1   \n",
       "\n",
       "                                                         unit  \n",
       "parameter                                                      \n",
       "PSR_J0534p2200...K                            1 / (cm2 keV s)  \n",
       "PSR_J0534p2200...index                                         \n",
       "NVSS_J052622p224801.spectrum.main.Powerlaw.K  1 / (cm2 keV s)  \n",
       "LAT_galdiff_Prefactor                                          "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(posterior) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mposterior\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(posterior)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>LAT</th>\n",
       "      <td>-118075.256042</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>-118075.256042</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(posterior)\n",
       "LAT     -118075.256042\n",
       "total   -118075.256042"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>236158.512226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>236200.682263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DIC</th>\n",
       "      <td>236165.731503</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PDIC</th>\n",
       "      <td>1.346298</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      statistical measures\n",
       "AIC          236158.512226\n",
       "BIC          236200.682263\n",
       "DIC          236165.731503\n",
       "PDIC              1.346298"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bayes.set_sampler(\"emcee\")\n",
    "\n",
    "n_walkers = 10\n",
    "burn_in = 10\n",
    "n_samples = 500\n",
    "\n",
    "bayes.sampler.setup(n_iterations=n_samples, n_burn_in=burn_in, n_walkers=n_walkers)\n",
    "\n",
    "res = bayes.sample()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f6e7fda",
   "metadata": {},
   "source": [
    "You can access to the parameter range like this (HPD):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "e72ccf12",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T23:14:54.429834Z",
     "iopub.status.busy": "2022-10-05T23:14:54.429317Z",
     "iopub.status.idle": "2022-10-05T23:14:54.454598Z",
     "shell.execute_reply": "2022-10-05T23:14:54.453378Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Highest_posterior_density_intervals :\n",
      "K (68%):       9.29e-14,  9.98e-14\n",
      "K (95%):       8.94e-14,  1.05e-13\n",
      "Index (68%):  -2.00e+00, -1.95e+00\n",
      "Index (95%):  -2.03e+00, -1.93e+00\n"
     ]
    }
   ],
   "source": [
    "this_K = bayes.results.get_variates(\n",
    "    \"PSR_J0534p2200.spectrum.main.Super_cutoff_powerlaw.K\"\n",
    ")\n",
    "this_idx = bayes.results.get_variates(\n",
    "    \"PSR_J0534p2200.spectrum.main.Super_cutoff_powerlaw.index\"\n",
    ")\n",
    "\n",
    "print(\"Highest_posterior_density_intervals :\")\n",
    "print(\n",
    "    \"K (68%%):     %10.2e,%10.2e\" % this_K.highest_posterior_density_interval(cl=0.68)\n",
    ")\n",
    "print(\n",
    "    \"K (95%%):     %10.2e,%10.2e\" % this_K.highest_posterior_density_interval(cl=0.95)\n",
    ")\n",
    "print(\n",
    "    \"Index (68%%): %10.2e,%10.2e\" % this_idx.highest_posterior_density_interval(cl=0.68)\n",
    ")\n",
    "print(\n",
    "    \"Index (95%%): %10.2e,%10.2e\" % this_idx.highest_posterior_density_interval(cl=0.95)\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "c5783242",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-10-05T23:14:54.461142Z",
     "iopub.status.busy": "2022-10-05T23:14:54.460417Z",
     "iopub.status.idle": "2022-10-05T23:14:56.101307Z",
     "shell.execute_reply": "2022-10-05T23:14:56.100177Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 970x970 with 16 Axes>"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corner_figure = bayes.results.corner_plot()\n",
    "corner_figure"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bac5297d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "056976f4bc4f47e7a7043ac4fdb19716": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "096ea1b259f5497987c0c3ebb9830fdc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9ce0e70382124c329758e1e4528ababd",
       "max": 12427200.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_abf294afca664b5a99ccf93bcec95139",
       "tabbable": null,
       "tooltip": null,
       "value": 12427200.0
      }
     },
     "0de99555afe2412ea58c2d4b0b62cb7c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b8ed4ceedb7340f6bc2182d257038c68",
       "placeholder": "​",
       "style": "IPY_MODEL_ab80dff8846848aa9dd0e1ffe03ca136",
       "tabbable": null,
       "tooltip": null,
       "value": "Downloading L221005182130DA96CEF207_SC00.fits: 100%"
      }
     },
     "11859b86dd8840e89d65803607983833": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "12f0e848946a4e9e918d9a73109ba1ff": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fd26042af0704edf92f9fde920960324",
       "placeholder": "​",
       "style": "IPY_MODEL_6eacfe1436c34602bfbb1283681318bf",
       "tabbable": null,
       "tooltip": null,
       "value": " 30/30 [01:30&lt;00:00,  3.46s/it]"
      }
     },
     "15035cfb77c84f4f9659b23b42f5b7f5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5e2bbdf1b78549cc9eba6c6f02caa6b0",
       "max": 17087040.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_c9a402f68e1942b58cc08d9dce1aed1e",
       "tabbable": null,
       "tooltip": null,
       "value": 17087040.0
      }
     },
     "1adbe705ee8e47c8bbb482007a6db3e4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_0de99555afe2412ea58c2d4b0b62cb7c",
        "IPY_MODEL_096ea1b259f5497987c0c3ebb9830fdc",
        "IPY_MODEL_bc866404020442b09fa2930f78c46252"
       ],
       "layout": "IPY_MODEL_cba567007eab430ebf4ac83d61f3eab1",
       "tabbable": null,
       "tooltip": null
      }
     },
     "2418dfaf4f60455c8ac57ae55293eb1d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_056976f4bc4f47e7a7043ac4fdb19716",
       "placeholder": "​",
       "style": "IPY_MODEL_55f957a168e54678b5b9eed71ff1f7be",
       "tabbable": null,
       "tooltip": null,
       "value": " 10/10 [00:03&lt;00:00,  2.90it/s]"
      }
     },
     "245e1508cc254f8da9767de701866640": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": "#277f8e",
       "description_width": ""
      }
     },
     "25a8aba3021d499986ce87eb049ce3ea": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2859c0fc4e7d40c693295d5f88b02e9f",
       "max": 500.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_f550c46837a244b5b1350153f3ab06e5",
       "tabbable": null,
       "tooltip": null,
       "value": 500.0
      }
     },
     "2859c0fc4e7d40c693295d5f88b02e9f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2c0b5b3792c245fa82a7f511abf83596": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5be3d99c8b5242f7847ec23e7d2beb6c",
       "max": 30.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_b4974d546760469ea552bcf5cd3632bf",
       "tabbable": null,
       "tooltip": null,
       "value": 30.0
      }
     },
     "2ccfba01f3084d5e9da23ae4df081d73": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3cd1ba44dd4e4056ad8396e8134ed261": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "45eaeb08d8384c279e4e0fd0e7fe06bd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "46d0c543f1db40a7a4bcd74910c006fb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8bcce179b843456da9ca09239f3765f8",
       "placeholder": "​",
       "style": "IPY_MODEL_e7f932972ce443de8b1c4a5a4930394b",
       "tabbable": null,
       "tooltip": null,
       "value": "Downloading L221005182130DA96CEF207_PH00.fits: 100%"
      }
     },
     "4805301bdcaa481ba6a1d103d1ba9a26": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7c4312cf75ee460fb871f90f90c60d3d",
       "placeholder": "​",
       "style": "IPY_MODEL_bb91d63f9ff14398af8b12cec4896af0",
       "tabbable": null,
       "tooltip": null,
       "value": "Profiling likelihood: 100%"
      }
     },
     "4f7f51bc90ee441c81be44bd6a117c46": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_4805301bdcaa481ba6a1d103d1ba9a26",
        "IPY_MODEL_663b954eab734befa647980952957b42",
        "IPY_MODEL_9a6e3f5b7b1943d8bce7a4d54c0b4394"
       ],
       "layout": "IPY_MODEL_57269757e9624e81ba5f8fd710c4ebeb",
       "tabbable": null,
       "tooltip": null
      }
     },
     "5132438ded6c454088212b208ae7328b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_8edce081cb684f049857bbd02a9465ae",
        "IPY_MODEL_25a8aba3021d499986ce87eb049ce3ea",
        "IPY_MODEL_d63e54d629a048e1b39091a7a983acb2"
       ],
       "layout": "IPY_MODEL_a62e102c61284624aa2cb801d1e076f0",
       "tabbable": null,
       "tooltip": null
      }
     },
     "51ffa0456a094d7ebc98b0bd1509ef2f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_45eaeb08d8384c279e4e0fd0e7fe06bd",
       "placeholder": "​",
       "style": "IPY_MODEL_90c28abe04b9414e81b5649326c4729e",
       "tabbable": null,
       "tooltip": null,
       "value": "100%"
      }
     },
     "55f957a168e54678b5b9eed71ff1f7be": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "57269757e9624e81ba5f8fd710c4ebeb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "5831982aff9c4d72a65ba4457bc7489f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e58c344a59614ed4aa12061576e7b4b7",
        "IPY_MODEL_2c0b5b3792c245fa82a7f511abf83596",
        "IPY_MODEL_12f0e848946a4e9e918d9a73109ba1ff"
       ],
       "layout": "IPY_MODEL_b7930b686c724e84b91a12509a971a06",
       "tabbable": null,
       "tooltip": null
      }
     },
     "599117abf2e74604a65aa49d5a447921": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5be3d99c8b5242f7847ec23e7d2beb6c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5e2bbdf1b78549cc9eba6c6f02caa6b0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "663b954eab734befa647980952957b42": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9b0709d6a1614606b2d5070ad1f37be2",
       "max": 400.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_245e1508cc254f8da9767de701866640",
       "tabbable": null,
       "tooltip": null,
       "value": 400.0
      }
     },
     "6eacfe1436c34602bfbb1283681318bf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "7c4312cf75ee460fb871f90f90c60d3d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8bcce179b843456da9ca09239f3765f8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8c9bf512d4d143a4897187293356c5f6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8edce081cb684f049857bbd02a9465ae": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8f9f436599c641cda79b1888487b545e",
       "placeholder": "​",
       "style": "IPY_MODEL_d90669e5535444f8ac674eb7c16074b3",
       "tabbable": null,
       "tooltip": null,
       "value": "100%"
      }
     },
     "8f9f436599c641cda79b1888487b545e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "90c28abe04b9414e81b5649326c4729e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9a6e3f5b7b1943d8bce7a4d54c0b4394": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c455d6eaa8d54a66b131607c6840a2af",
       "placeholder": "​",
       "style": "IPY_MODEL_dcfa0fa21f1f43af8da3f3af246015c5",
       "tabbable": null,
       "tooltip": null,
       "value": " 400/400 [31:21&lt;00:00,  3.21s/it]"
      }
     },
     "9b0709d6a1614606b2d5070ad1f37be2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9ce0e70382124c329758e1e4528ababd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a62e102c61284624aa2cb801d1e076f0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a8e823ed6d1d4dba90a339ca01d33604": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_46d0c543f1db40a7a4bcd74910c006fb",
        "IPY_MODEL_15035cfb77c84f4f9659b23b42f5b7f5",
        "IPY_MODEL_dbf0f7c0eaa543ffbe55fc0ca599e6e9"
       ],
       "layout": "IPY_MODEL_ec613d2a252a44b3a8bcf6e16365d246",
       "tabbable": null,
       "tooltip": null
      }
     },
     "ab80dff8846848aa9dd0e1ffe03ca136": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "abf294afca664b5a99ccf93bcec95139": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": "#46327e",
       "description_width": ""
      }
     },
     "ac71c571299040d7b2a5eb3c1982104b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "ade8e1d7caf2491993dbd3ac28181793": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_51ffa0456a094d7ebc98b0bd1509ef2f",
        "IPY_MODEL_c5ed0ec1a5504b36ac3cca9b39d7ee0a",
        "IPY_MODEL_2418dfaf4f60455c8ac57ae55293eb1d"
       ],
       "layout": "IPY_MODEL_3cd1ba44dd4e4056ad8396e8134ed261",
       "tabbable": null,
       "tooltip": null
      }
     },
     "b4974d546760469ea552bcf5cd3632bf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": "#365c8d",
       "description_width": ""
      }
     },
     "b7930b686c724e84b91a12509a971a06": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "b8ed4ceedb7340f6bc2182d257038c68": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "bb91d63f9ff14398af8b12cec4896af0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "bc866404020442b09fa2930f78c46252": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_599117abf2e74604a65aa49d5a447921",
       "placeholder": "​",
       "style": "IPY_MODEL_cbe8b1f660f4402cae2804ce46579a27",
       "tabbable": null,
       "tooltip": null,
       "value": " 11.9M/11.9M [00:07&lt;00:00, 1.70MB/s]"
      }
     },
     "c455d6eaa8d54a66b131607c6840a2af": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c5ed0ec1a5504b36ac3cca9b39d7ee0a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2ccfba01f3084d5e9da23ae4df081d73",
       "max": 10.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_ac71c571299040d7b2a5eb3c1982104b",
       "tabbable": null,
       "tooltip": null,
       "value": 10.0
      }
     },
     "c9a402f68e1942b58cc08d9dce1aed1e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": "#440154",
       "description_width": ""
      }
     },
     "cba567007eab430ebf4ac83d61f3eab1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "cbe8b1f660f4402cae2804ce46579a27": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d0e7f3ab11d74ee3bb03214f8d01e974": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d2626a59a48a434788db027fe4205c59": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d63e54d629a048e1b39091a7a983acb2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8c9bf512d4d143a4897187293356c5f6",
       "placeholder": "​",
       "style": "IPY_MODEL_f664d2b143c74f25b3c74a32f39ebf76",
       "tabbable": null,
       "tooltip": null,
       "value": " 500/500 [02:25&lt;00:00,  3.73it/s]"
      }
     },
     "d90669e5535444f8ac674eb7c16074b3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "dbf0f7c0eaa543ffbe55fc0ca599e6e9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_11859b86dd8840e89d65803607983833",
       "placeholder": "​",
       "style": "IPY_MODEL_d2626a59a48a434788db027fe4205c59",
       "tabbable": null,
       "tooltip": null,
       "value": " 16.3M/16.3M [00:10&lt;00:00, 1.62MB/s]"
      }
     },
     "dcb98ae7b20d4370960f850ccc1f0db5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "dcfa0fa21f1f43af8da3f3af246015c5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "e58c344a59614ed4aa12061576e7b4b7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_dcb98ae7b20d4370960f850ccc1f0db5",
       "placeholder": "​",
       "style": "IPY_MODEL_d0e7f3ab11d74ee3bb03214f8d01e974",
       "tabbable": null,
       "tooltip": null,
       "value": "Profiling likelihood: 100%"
      }
     },
     "e7f932972ce443de8b1c4a5a4930394b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ec613d2a252a44b3a8bcf6e16365d246": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "f550c46837a244b5b1350153f3ab06e5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "f664d2b143c74f25b3c74a32f39ebf76": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "fd26042af0704edf92f9fde920960324": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
