{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "941b31a7",
   "metadata": {
    "deletable": true,
    "editable": true,
    "lines_to_next_cell": 2
   },
   "source": [
    "# Background Modeling\n",
    "\n",
    "When fitting a spectrum with a background, it is invalid to simply subtract off the background if the background is part of the data's generative model [van Dyk et al. (2001)](http://iopscience.iop.org/article/10.1086/318656/meta). Therefore, we are often left with the task of modeling the statistical process of the background along with our source.\n",
    "\n",
    "In typical spectral modeling, we find a few common cases when background is involved. If we have total counts ($S_i$) in $i^{\\rm th}$ on $N$ bins observed for an exposure of $t_{\\rm s}$ and also a measurement of $B_i$ background counts from looking off source for $t_{\\rm b}$ seconds, we can then suppose a model for the source rate ($m_i$) and background rate ($b_i$).\n",
    "\n",
    "**Poisson source with Poisson background**\n",
    "\n",
    "This is described by a likelihood of the following form:\n",
    "\n",
    "$$ L = \\prod^N_{i=1} \\frac{(t_{\\rm s}(m_i+b_i))^{S_i} e^{-t_{\\rm s}(m_i+b_i)}}{S_i!} \\times \\frac{(t_{\\rm b} b_i)^{B_i} e^{-t_{\\rm b}b_i}}{B_i!}  $$\n",
    "\n",
    "which is a Poisson likelihood for the total model ($m_i +b_i$) conditional on the Poisson distributed background observation. This is the typical case for e.g. aperture x-ray instruments that observe a source region and then a background region. Both observations are Poisson distributed.\n",
    "\n",
    "**Poisson source with Gaussian background**\n",
    "\n",
    "This likelihood is similar, but the conditonal background distribution is described by Gaussian:\n",
    "\n",
    "$$ L = \\prod^N_{i=1} \\frac{(t_{\\rm s}(m_i+b_i))^{S_i} e^{-t_{\\rm s}(m_i+b_i)}}{S_i!} \\times \\frac{1}{\\sigma_{b,i}\\sqrt{2 \\pi}} \\exp \\left[ \\frac{({B_i} - t_{\\rm b} b_i)^2} {2 \\sigma_{b,i}^2} \\right] $$\n",
    "\n",
    "where the $\\sigma_{b,i}$ are the measured errors on $B_i$. This situation occurs e.g. when the background counts are estimated from a fitted model such as time-domain instruments that estimate the background counts from temporal fits to the lightcurve.\n",
    "\n",
    "In 3ML, we can fit a background model along with the the source model which allows for arbitrarily low background counts (in fact zero) in channels. The alternative is to use profile likelihoods where we first differentiate the likelihood with respect to the background model\n",
    "\n",
    "$$ \\frac{ \\partial L}{{\\partial b_i}} = 0$$\n",
    "\n",
    "and solve for the $b_i$ that maximize the likelihood. Both the Poisson and Gaussian background profile likelihoods are described in the [XSPEC statistics guide](https://heasarc.gsfc.nasa.gov/xanadu/xspec/manual/XSappendixStatistics.html). This implicitly yields $N$ parameters to the model thus requiring at least one background count per channel. These profile likelihoods are the default Poisson likelihoods in 3ML when a background model is not used with a **SpectrumLike** (and its children, **DispersionSpectrumLike** and **OGIPLike**) plugin.\n",
    "\n",
    "Let's examine how to handle both cases.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5d169dca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:28.066725Z",
     "iopub.status.busy": "2022-09-28T06:43:28.066405Z",
     "iopub.status.idle": "2022-09-28T06:43:28.130933Z",
     "shell.execute_reply": "2022-09-28T06:43:28.130184Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'divide': 'warn', 'over': 'warn', 'under': 'ignore', 'invalid': 'warn'}"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a9080256",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:28.134924Z",
     "iopub.status.busy": "2022-09-28T06:43:28.134617Z",
     "iopub.status.idle": "2022-09-28T06:43:31.080018Z",
     "shell.execute_reply": "2022-09-28T06:43:31.079216Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "from threeML import *"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7a545034",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:31.084148Z",
     "iopub.status.busy": "2022-09-28T06:43:31.083429Z",
     "iopub.status.idle": "2022-09-28T06:43:31.113499Z",
     "shell.execute_reply": "2022-09-28T06:43:31.112794Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()\n",
    "import astropy.units as u"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a038848",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "First we will create an observation where we have a simulated broken power law source spectrum along with an observed background spectrum. The background is a powerl law continuum with a Gaussian line."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5030ce5b",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:31.117132Z",
     "iopub.status.busy": "2022-09-28T06:43:31.116892Z",
     "iopub.status.idle": "2022-09-28T06:43:35.032013Z",
     "shell.execute_reply": "2022-09-28T06:43:35.031286Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:43:31 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">469</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:43:31\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=348261;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=725319;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\u001b\\\u001b[2m469\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">470</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=624872;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=618345;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\u001b\\\u001b[2m470\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">471</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=318609;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=138084;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\u001b\\\u001b[2m471\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:43:32 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">469</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:43:32\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=178646;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=587684;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\u001b\\\u001b[2m469\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">470</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=458164;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=713283;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\u001b\\\u001b[2m470\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">471</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=714446;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=98042;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\u001b\\\u001b[2m471\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">469</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=859864;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=286266;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\u001b\\\u001b[2m469\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">470</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=196430;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=509314;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\u001b\\\u001b[2m470\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">471</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=539411;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=556490;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\u001b\\\u001b[2m471\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:43:33 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">469</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:43:33\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=168772;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=674777;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\u001b\\\u001b[2m469\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">470</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=224357;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=674474;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\u001b\\\u001b[2m470\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">471</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=706216;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=743570;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\u001b\\\u001b[2m471\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Font family ['sans-serif'] not found. Falling back to DejaVu Sans.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Font family ['sans-serif'] not found. Falling back to DejaVu Sans.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "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13Tbbbfpj3/8Y7fr33bbbfryl7+sj3/846mQ+Oyzz+r888/X1772Nf3whz/UjBkz9L//+796/PHH+133fffdpyeeeEIffPCBnE6nfve730mSnE6nfvSjH2nkyJEyTVPV1dX63e9+p2uvvVYbN27Uz372Mz388MM6+uijdeDAAUmJMC5J+/fv18KFCzVjxgx95StfkSTdfvvtmjJlir761a+qqalJ8+bN00knnZSq49VXX9WTTz6p0aNHa9u2bbrrrrv0+OOPq6ysTPfcc4++9a1v6de//vURv563335bP/jBD1RdXa2HHnpIP/3pT3Xfffdp27ZtWrZsmZ544gkdffTR+q//+q9+v0aZQhAFAAAAcozPVWTr9R0Oh5YtW6a33npLf/3rX7V27Vr94he/0GOPPaZIJKJwOJwKoZI0atQoSdKWLVv0i1/8Qs3NzXI6nXrnnXfU3t4ur9ebem5bW5s2bNig3bt3dzn2zjvv6O2335bT6dSMGTMkSZ/4xCdUXl7e76+r89Tcxx57TF/96lf1+OOPyzRNrVy5UmvWrFEsFlNLS0tqpHb16tW65JJLdPTRR0uShg0blrpeR0eH5s+fr8rKSs2bNy91/OWXX9att94qSRozZozOOeecLnWcffbZGj16tCRp48aNOuuss1RWViYpMXr8s5/9rF8jvccff7xOO+00SdLUqVN1//33p+4/a9asVM3z58/XL3/5y36/TplAEAUAAAByTF/TZjNp3LhxGjdunL7whS/o6quv1osvvqhPfOITPT43Eolo0aJF+s1vfqNTTz1Vra2tmjZtmiKRSJcgapqmJOnRRx+Vx+Ppco2tW7d2u+5g16VedNFFqqqq0gcffKCXXnpJGzdu1O9+9zsVFxfrt7/9rV5++eUjXsPlcmnatGl68cUXNWfOHBUV9RzgD68xOeX3SM91Op1dGkCFw+Euz+38+jgcjl7Dazau3S28VbEYkpqla+0uAQAAADZrbGzUpk2bUo/37dunnTt3qry8XCeeeKK8Xq/+8Ic/pM5/8MEHikQi6ujo0Ic+9CFJ0gMPPNDjtf1+v6ZPn6577723y/127dqlk046SbFYLBUS169fr3fffXdQX8OGDRs0cuRIlZSUaP/+/SopKVFxcbFaW1v1xBNPpJ533nnn6emnn06tdz1w4EBqeq5hGPre976nY489VjfccIPa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a/XMM8/oc5/7nBYuXGjV7QAAAI5o7o0EUQDIRpYE0WeffVa///3vVV5ergULFmjq1KkaNWqU9u7dq1dffVUrVqzQ73//e40fP14XXnihFbcEAADIWat+vi5j96pZupZADiDrWLJG9KmnntKYMWP0i1/8QoFAQKWlpTIMQ6NGjdL555+vX/ziFxo9erSefPJJK24HAACQ0569J4NBdNnajN0LAPrLkiD6zjvv6Oyzz1ZxcXGP54uLi3X22WfrnXfeseJ2AAAAAIAclrGuuVZtFg0AAJArfMO9dpcAAFnJkiB64oknas2aNWpra+vxfFtbm9asWaMTTzzRitsBAADkhGEjPHaXAABZyZIgevHFF6upqUnXXXedVq9erebmZklSc3OzVq9ereuuu05NTU265JJLrLgdAACwUFs0otaOiFZu26SV2zbpv996Tdv377G7LABAHrOka+5FF12kN998U48//riqq6slHdq+RZJM09RnP/tZzZ4924rbAQAACxQ5nVJUMiWZMg/t4RqVNjbVd9nnFQAAK1m2j+iNN96oc845R88++6y2b9+uUCgkv9+vD3/4w7rwwgt12mmnWXUrAABggeljyrWxqV4dsZgMGfK73GqLRmRK6ojF7C4PAJDHLAuiknTaaacROAEAyBHjR5SmRj2XbF6jBROmaeW2TYdGRjEovjNGaeS8cj347ma1dkT04LubVf7jqYq3x/V2aK8m+4+xu0QAsF3GuuYCAIDcs66xzu4Scs7IeeUqOtarUCySmPIci8g50q2iY73atLeh18+bu2hWBqsEAHtZEkRff/11LV++XHv29NzYYPfu3Vq+fLn+8Y9/WHE7AACQIesad9hdQs5xeBO/XhkH/+d3uhMLcSV1xOO9ft7cGwmiAAqHJUH0kUce0bp161Ra2nNTg9GjR2v9+vV69NFHrbhdRj355JO6+uqrde655+r++++3uxwAAJAjfM4iFRe5dcXxpyrWzHRnAOjMkiC6detWnXrqqX0+57TTTtOWLVusuF1GlZaW6sorr9TZZ59tdykAAAAAkBcsaVbU3Nys0aNH9/mcUaNGae/evVbcLqPOOussSdLLL79scyUAAAAAkB8sCaLFxcV6//33+3xOY2Ojhg0bNqjrt7W16eGHH9aWLVv0xhtvqKWlRd/85jd73Jc0Eonovvvu0/PPP6+WlhaNGzdO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arVq69atXozsv1JTUzVkyBD95z//8XYoAIBGohAFANy1fvzxR1mt1nr/xMfHeztMn1FaWqp169YpNjZWHTp08OhcmZmZslqteumllxrc9w9/+IOsVqt27NghSRo1apTCw8O1evVqj8YIAPAcf28HAACAp0VERGj48OFOt4WEhBgcje/asGGDSkpKNGnSJI/P9ctf/lLh4eE6ePCgzp8/r/DwcKf7lZWVad++fQoJCZHVapUk+fv7Kz4+XitWrNCRI0f00EMPeTxeAEDTohAFANz1IiIiNH36dG+H4dMqKyuVmpqqhx56SBERER6fz2w26/HHH1dKSorS09M1depUp/tlZGSovLxcsbGxCggIcLQPGzZMq1at0t/+9jcKUQBohrg0FwCAW1itVs2ZM0eXLl3S0qVLNXbsWMXExGjWrFn69ttvnfa5evWq1q5dqylTpigmJkaxsbF66aWXdPjw4Vr7zpkzR1arVeXl5VqzZo2efPJJRUdHa+3atY599u7dq4SEBMXExGjcuHFatmyZSktLFR8fX+NS4sWLF8tqterYsWNO40pOTpbValVGRkaDx52ZmamLFy9qyJAhDe5braCgQFOnTlVMTIz27NnjaL98+bJWrlypSZMmadiwYRo7dqwWLFigM2fO1OgfGxsrk8mkrVu3ym63O50jLS1NkjR69Oga7W3atFHv3r21Z88eXb161eWYAQC+gUIUAIDblJWV6dlnn9V3332nESNGyGq1Kjs7W/PmzatVTJWUlGj27NlKSUlRaGioxo0bJ6vVqpMnTyoxMVH79u1zOsfChQuVnp6u3r1764knnnDck7llyxYtXLhQubm5GjlypEaNGqWjR49q7ty5qqysrDFGXFyco8/tbDab0tLS1Lp1a8clrfU5ePCgJKlnz54NnyBJ3333nZ555hkVFBQoKSnJUcDm5eVpxowZ2rhxo+677z795je/0SOPPKLMzEzNnj27RtHcvn179e3bVz/88IPTIv/MmTM6ceKEunTpogcffLDW9p49e6qiokJZWVkuxQwA8B1cmgsAuOvl5eXVWHG8Vc+ePTVgwIAabadPn9b48eP1wgsvyGy++X+2ffr00bJly7R582bNmzfPse9bb72ls2fP6uWXX9aYMWMc7ZcvX1ZCQoKSkpLUv3//GpeVStLFixf1/vvvq1WrVo620tJSvf322woKCtJ7772njh07SpISEhI0b948ZWdnq3379o79e/XqpQceeEA7d+7Uc889p6CgIMe2zMxMFRYWauLEibJYLA2eoyNHjshsNisqKqrBfY8ePar58+fL399fK1eurNFn6dKlunTpkpYvX67+/fs72qdMmaKEhAQtW7ZMKSkpjvbRo0frm2++UVpamvr06VNjnrpWQ6t17dpVkpSVlVVjLgCA72NFFABw18vLy1NKSorTP19//XWt/YOCgjRr1ixHESrdfFKrn5+fTpw44WgrKirS7t271adPnxpFqCS1bdtWkyZNUlFRkWO18VZPP/10jSJUkr744gtdu3ZNsbGxjiJUuvlwnhkzZjg9tri4OF29elU7d+6s0Z6amipJGjt2bF2npYbCwkKFhIQ0WLQeOHBAL774okJDQ/Xuu+/WKEJPnjyprKwsjRw5slZh2LFjR40ZM0Znzpypsao8ePBgtW7dWnv37tWVK1cc7ZWVldq+fbssFkudD5pq166dpJuXCAMAmhdWRAEAd73+/ftr+fLlLu9///33q2XLljXa/P391a5dO5WVlTnaTpw4IZvNphs3bjhdcc3NzZUknTt3TgMHDqyxrXv37rX2r/5ezIcffrjWth49esjPz69W+8iRI/WXv/xFqampjmL40qVL+vLLL/Xzn/9cDzzwQANHe1NJSYnuvffeevfZvXu3/vnPf6pz585KSkpS27Zta2yvvuz28uXLTs/H999/7/i7U6dOkuQoNDdt2qSMjAyNGzdOkrR//34VFRUpJiZGoaGhTuOpbi8uLnbpGAEAvoNCFACA2wQHBztt9/PzU1VVlePfJSUlkm5e1nrkyJE6x7t+/XqtturVvFtVrwjeXuBJN58y27p161rtoaGhio6OVnp6us6cOaNOnTpp69atstlsLq+GSlJAQIAqKirq3efo0aOy2Wx6+OGHncZYfT4OHDigAwcO1DnOtWvXavx79OjR2rRpk9LS0hyFaEOX5UpyxBsYGFhv3AAA30MhCgBAI1UXrL/97W/17LPPutXXZDLVOd7ly5drbauqqlJxcbHTVctx48YpPT1dn3/+uRITE7VlyxYFBwcrOjra5Xhat26twsLCeveZOXOmvvjiC23atEl+fn61jrk6/sTERE2YMMHluTt37qxu3brp+PHjOnv2rEJDQ5WZmakOHTrUum/0VtWFb5s2bVyeCwDgG7hHFACARurWrZtMJpOOHj3aJON17txZkpyurh4/flw2m81pv549e6pz587asWOHMjMzlZubq+HDh7u1UtipUydVVFTo/Pnzde5jsVi0dOlS/epXv9L69eu1atWqGturLzduzPmoXvncsmWLtm3bJpvN5vh6l7pUX+pbfZkvAKD5oBAFAKCRwsLCFB0draysLH300UdOvwvz2LFjTi/NdWbQoEEKCgrSli1blJeX52ivrKxUcnJyvX3j4uJUUlKiN954Q5JqPTypIb/4xS8c8dbHYrFoyZIlGjhwoDZs2KCVK1c6tvXo0UM9evTQzp07az08Sbq5qnvo0CGn48bExCgwMFDbt29XWlqazGazRo0aVW8sx48frxE7AKD54NJcAMBdr76vb5GkyZMn1/p6FVfNnTtXOTk5Wr16tbZt26aePXsqJCREhYWFOnHihHJzc/Xpp5+6tDoZGhqq5557TklJSUpISNDQoUMVHBysr776ShaLRffcc0+dK4QjRozQn//8Z124cEFdu3Z1+r2b9Rk0aJDeeecdffPNNw1e0tuiRQstXrxYixYt0saNG2W32zVnzhxJ0qJFi/TCCy/otdde06ZNm9SlSxcFBASooKBAWVlZKi4uVkZGRq0xg4OD9dhjj2nbtm0qKirSgAEDFB4eXmcMdrtdBw8eVGRkZI0nDAMAmgcKUQDAXa/661vqMnHixEYXoq1atdK7776rzZs3a9euXcrIyFBVVZXatWunqKgoTZ061elDhuoyduxYhYaG6oMPPlB6erqCg4P16KOPatasWZo4caIiIiKc9gsODtbgwYO1fft2t1dDJalDhw7q16+f9uzZo8TExAa/xqW6GP3973+vTZs2yW63KzExUffdd5+Sk5O1fv167du3T1u3bpXZbFZYWJh69eqlIUOG1Dnm6NGjtW3bNklSbGxsvfP/+9//1vnz5/X888+7fawAAO8z2Z1dRwQAAHxKbm6unnrqKUVHR+u1115zus/UqVOVn5+vzZs31/nk3/ocPHhQL774ohYsWKARI0bcacgetXjxYn399df66KOP6vx6FwCA7+IeUQAAfEhpaWmtr1EpLy93PBho8ODBTvt99dVXOnv2rGJiYhpVhEpS3759NWDAAK1bt67G19T4mpycHO3atUtTpkyhCAWAZopLcwEA8CGHDh3SH//4R/Xr108/+9nPVFxcrH/961/Kz89Xnz59NHTo0Br7f/bZZyooKFBqaqosFosmT558R/PPmTNHO3bsUGFhYb33aHpTQUGBpk2bpl//+tfeDgUA0EhcmgsAgA/JyclRcnKysrKyVFRUJEmKiIjQ0KFD9eSTT9a6lzU+Pl6FhYXq2LGjZs2apYEDB3ohagAA3EMhCgAAAAAwFPeIAgAAAAAMRSEKAAAAADAUhSgAAAAAwFAUogAAAAAAQ1GIAgAAAAAMRSEKAAAAADAUhSgAAAAAwFAUogAAAAAAQ1GIAgAAAAAM9f8Blq4yfVwrRQ0AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# create the simulated observation\n",
    "\n",
    "energies = np.logspace(1, 4, 151)\n",
    "\n",
    "low_edge = energies[:-1]\n",
    "high_edge = energies[1:]\n",
    "\n",
    "# get a BPL source function\n",
    "source_function = Broken_powerlaw(K=2, xb=300, piv=300, alpha=0.0, beta=-3.0)\n",
    "\n",
    "# power law background function\n",
    "background_function = Powerlaw(K=0.5, index=-1.5, piv=100.0) + Gaussian(\n",
    "    F=50, mu=511, sigma=20\n",
    ")\n",
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca284b8b",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "## Using a profile likelihood\n",
    "\n",
    "We have very few counts counts in some channels (in fact sometimes zero), but let's assume we do not know the model for the background. In this case, we will use the profile Poisson likelihood."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "539a2c52",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:35.035359Z",
     "iopub.status.busy": "2022-09-28T06:43:35.035007Z",
     "iopub.status.idle": "2022-09-28T06:43:39.752442Z",
     "shell.execute_reply": "2022-09-28T06:43:39.751672Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:43:35 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1042\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1042</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:43:35\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=537560;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=121347;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1042\u001b\\\u001b[2m1042\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.K</th>\n",
       "      <td>2.19 -0.15 +0.16</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.xb</th>\n",
       "      <td>(2.99 +/- 0.11) x 10^2</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.alpha</th>\n",
       "      <td>(8 +/- 8) x 10^-2</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.beta</th>\n",
       "      <td>-3.19 +/- 0.16</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                            result  \\\n",
       "parameter                                                            \n",
       "source.spectrum.main.Broken_powerlaw.K            2.19 -0.15 +0.16   \n",
       "source.spectrum.main.Broken_powerlaw.xb     (2.99 +/- 0.11) x 10^2   \n",
       "source.spectrum.main.Broken_powerlaw.alpha       (8 +/- 8) x 10^-2   \n",
       "source.spectrum.main.Broken_powerlaw.beta           -3.19 +/- 0.16   \n",
       "\n",
       "                                                       unit  \n",
       "parameter                                                    \n",
       "source.spectrum.main.Broken_powerlaw.K      1 / (cm2 keV s)  \n",
       "source.spectrum.main.Broken_powerlaw.xb                 keV  \n",
       "source.spectrum.main.Broken_powerlaw.alpha                   \n",
       "source.spectrum.main.Broken_powerlaw.beta                    "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140286943953824\">\n",
       "<tr><td>1.00</td><td>-0.63</td><td>0.77</td><td>0.02</td></tr>\n",
       "<tr><td>-0.63</td><td>1.00</td><td>-0.48</td><td>-0.55</td></tr>\n",
       "<tr><td>0.77</td><td>-0.48</td><td>1.00</td><td>0.01</td></tr>\n",
       "<tr><td>0.02</td><td>-0.55</td><td>0.01</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.63  0.77  0.02\n",
       "-0.63  1.00 -0.48 -0.55\n",
       " 0.77 -0.48  1.00  0.01\n",
       " 0.02 -0.55  0.01  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake</th>\n",
       "      <td>418.390317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>418.390317</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "fake         418.390317\n",
       "total        418.390317"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>845.056497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>856.823176</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC            845.056497\n",
       "BIC            856.823176"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# instance our source spectrum\n",
    "bpl = Broken_powerlaw(piv=300, xb=500)\n",
    "\n",
    "# instance a point source\n",
    "ra, dec = 0, 0\n",
    "ps_src = PointSource(\"source\", ra, dec, spectral_shape=bpl)\n",
    "\n",
    "# instance the likelihood model\n",
    "src_model = Model(ps_src)\n",
    "\n",
    "# pass everything to a joint likelihood object\n",
    "jl_profile = JointLikelihood(src_model, DataList(spectrum_generator))\n",
    "\n",
    "\n",
    "# fit the model\n",
    "_ = jl_profile.fit()\n",
    "\n",
    "# plot the fit in count space\n",
    "_ = spectrum_generator.display_model(step=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28a1781e",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "Our fit recovers the simulated parameters. However, we should have binned the spectrum up such that there is at least one background count per spectral bin for the profile to be valid."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "6ed93188",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:39.755812Z",
     "iopub.status.busy": "2022-09-28T06:43:39.755442Z",
     "iopub.status.idle": "2022-09-28T06:43:42.065098Z",
     "shell.execute_reply": "2022-09-28T06:43:42.064280Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:43:39 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Now using </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">86</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> bins                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#1673\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1673</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:43:39\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Now using \u001b[0m\u001b[1;37m86\u001b[0m\u001b[1;38;5;251m bins                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=837761;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=558355;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#1673\u001b\\\u001b[2m1673\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.K</th>\n",
       "      <td>2.18 -0.17 +0.18</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.xb</th>\n",
       "      <td>(2.98 -0.13 +0.14) x 10^2</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.alpha</th>\n",
       "      <td>(7 +/- 9) x 10^-2</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.beta</th>\n",
       "      <td>-3.04 +/- 0.16</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                               result  \\\n",
       "parameter                                                               \n",
       "source.spectrum.main.Broken_powerlaw.K               2.18 -0.17 +0.18   \n",
       "source.spectrum.main.Broken_powerlaw.xb     (2.98 -0.13 +0.14) x 10^2   \n",
       "source.spectrum.main.Broken_powerlaw.alpha          (7 +/- 9) x 10^-2   \n",
       "source.spectrum.main.Broken_powerlaw.beta              -3.04 +/- 0.16   \n",
       "\n",
       "                                                       unit  \n",
       "parameter                                                    \n",
       "source.spectrum.main.Broken_powerlaw.K      1 / (cm2 keV s)  \n",
       "source.spectrum.main.Broken_powerlaw.xb                 keV  \n",
       "source.spectrum.main.Broken_powerlaw.alpha                   \n",
       "source.spectrum.main.Broken_powerlaw.beta                    "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140286940096064\">\n",
       "<tr><td>1.00</td><td>-0.71</td><td>0.80</td><td>0.14</td></tr>\n",
       "<tr><td>-0.71</td><td>1.00</td><td>-0.56</td><td>-0.62</td></tr>\n",
       "<tr><td>0.80</td><td>-0.56</td><td>1.00</td><td>0.11</td></tr>\n",
       "<tr><td>0.14</td><td>-0.62</td><td>0.11</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.71  0.80  0.14\n",
       "-0.71  1.00 -0.56 -0.62\n",
       " 0.80 -0.56  1.00  0.11\n",
       " 0.14 -0.62  0.11  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake</th>\n",
       "      <td>316.09433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>316.09433</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "fake          316.09433\n",
       "total         316.09433"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>640.464522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>652.231201</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC            640.464522\n",
       "BIC            652.231201"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator.rebin_on_background(1)\n",
    "\n",
    "spectrum_generator.view_count_spectrum()\n",
    "\n",
    "_ = jl_profile.fit()\n",
    "\n",
    "_ = spectrum_generator.display_model(step=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37e4abf0",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "## Modeling the background\n",
    "\n",
    "Now let's try to model the background assuming we know that the background is a power law with a Gaussian line. We can extract a background plugin from the data by passing the original plugin to a classmethod of spectrum like."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "74c13db7",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:42.069025Z",
     "iopub.status.busy": "2022-09-28T06:43:42.068419Z",
     "iopub.status.idle": "2022-09-28T06:43:42.084932Z",
     "shell.execute_reply": "2022-09-28T06:43:42.084294Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:43:42 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">469</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:43:42\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=621554;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=636535;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\u001b\\\u001b[2m469\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">470</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=103785;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=902176;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\u001b\\\u001b[2m470\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">471</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=75340;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=924976;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\u001b\\\u001b[2m471\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# extract the background from the spectrum plugin.\n",
    "# This works for OGIPLike plugins as well, though we could easily also just read\n",
    "# in a bakcground PHA\n",
    "background_plugin = SpectrumLike.from_background(\"bkg\", spectrum_generator)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b69a4a67",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "This constructs a new plugin with only the observed background so that we can first model it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b1e1305b",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:42.088034Z",
     "iopub.status.busy": "2022-09-28T06:43:42.087675Z",
     "iopub.status.idle": "2022-09-28T06:43:43.112953Z",
     "shell.execute_reply": "2022-09-28T06:43:43.112168Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "background_plugin.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a1d789b",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "We now construct our background model and fit it to the data. Let's assume we know that the line occurs at 511 keV, but we are unsure of its strength an width. We do not need to bin the data up because we are using a simple Poisson likelihood which is valid even when we have zero counts [Cash (1979)](http://adsabs.harvard.edu/abs/1979ApJ...228..939C)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2f3613b0",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:43.116483Z",
     "iopub.status.busy": "2022-09-28T06:43:43.115968Z",
     "iopub.status.idle": "2022-09-28T06:43:44.996834Z",
     "shell.execute_reply": "2022-09-28T06:43:44.996074Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:43:43 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1042\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1042</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:43:43\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=424036;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=947554;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1042\u001b\\\u001b[2m1042\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>bkg.spectrum.main.composite.K_1</th>\n",
       "      <td>(3.29 -0.23 +0.25) x 10^-1</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bkg.spectrum.main.composite.index_1</th>\n",
       "      <td>-1.40 +/- 0.04</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bkg.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.4 +/- 0.6) x 10</td>\n",
       "      <td>1 / (cm2 s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bkg.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(1.82 +/- 0.27) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                         result  \\\n",
       "parameter                                                         \n",
       "bkg.spectrum.main.composite.K_1      (3.29 -0.23 +0.25) x 10^-1   \n",
       "bkg.spectrum.main.composite.index_1              -1.40 +/- 0.04   \n",
       "bkg.spectrum.main.composite.F_2              (3.4 +/- 0.6) x 10   \n",
       "bkg.spectrum.main.composite.sigma_2        (1.82 +/- 0.27) x 10   \n",
       "\n",
       "                                                unit  \n",
       "parameter                                             \n",
       "bkg.spectrum.main.composite.K_1      1 / (cm2 keV s)  \n",
       "bkg.spectrum.main.composite.index_1                   \n",
       "bkg.spectrum.main.composite.F_2          1 / (cm2 s)  \n",
       "bkg.spectrum.main.composite.sigma_2              keV  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140286938804176\">\n",
       "<tr><td>1.00</td><td>0.17</td><td>-0.04</td><td>-0.02</td></tr>\n",
       "<tr><td>0.17</td><td>1.00</td><td>-0.04</td><td>-0.02</td></tr>\n",
       "<tr><td>-0.04</td><td>-0.04</td><td>1.00</td><td>0.04</td></tr>\n",
       "<tr><td>-0.02</td><td>-0.02</td><td>0.04</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00  0.17 -0.04 -0.02\n",
       " 0.17  1.00 -0.04 -0.02\n",
       "-0.04 -0.04  1.00  0.04\n",
       "-0.02 -0.02  0.04  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>bkg</th>\n",
       "      <td>219.549999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>219.549999</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "bkg          219.549999\n",
       "total        219.549999"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>447.375860</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>459.142539</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC            447.375860\n",
       "BIC            459.142539"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# instance the spectrum setting the line's location to 511\n",
    "bkg_spectrum = Powerlaw(piv=100) + Gaussian(F=50, mu=511)\n",
    "\n",
    "# setup model parameters\n",
    "# fix the line's location\n",
    "bkg_spectrum.mu_2.fix = True\n",
    "\n",
    "# nice parameter bounds\n",
    "bkg_spectrum.K_1.bounds = (1e-4, 10)\n",
    "bkg_spectrum.F_2.bounds = (0.0, 1000)\n",
    "bkg_spectrum.sigma_2.bounds = (2, 30)\n",
    "\n",
    "ps_bkg = PointSource(\"bkg\", 0, 0, spectral_shape=bkg_spectrum)\n",
    "\n",
    "bkg_model = Model(ps_bkg)\n",
    "\n",
    "\n",
    "jl_bkg = JointLikelihood(bkg_model, DataList(background_plugin))\n",
    "\n",
    "\n",
    "_ = jl_bkg.fit()\n",
    "\n",
    "_ = background_plugin.display_model(\n",
    "    step=False, data_color=\"#1A68F0\", model_color=\"#FF9700\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1cb9b668",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "We now have a model and estimate for the background which we can use when fitting with the source spectrum. We now create a new plugin with just the total observation and pass our background plugin as the background argument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ebcb98ad",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:45.000297Z",
     "iopub.status.busy": "2022-09-28T06:43:44.999743Z",
     "iopub.status.idle": "2022-09-28T06:43:45.015382Z",
     "shell.execute_reply": "2022-09-28T06:43:45.014746Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:43:45 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Background modeled from plugin: bkg                                          </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#459\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">459</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:43:45\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Background modeled from plugin: bkg                                         \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=2126;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=364364;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#459\u001b\\\u001b[2m459\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">469</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=928474;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=782275;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\u001b\\\u001b[2m469\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">470</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=915244;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=778212;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\u001b\\\u001b[2m470\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">471</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=737061;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=704276;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\u001b\\\u001b[2m471\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "modeled_background_plugin = SpectrumLike(\n",
    "    \"full\",\n",
    "    # here we use the original observation\n",
    "    observation=spectrum_generator.observed_spectrum,\n",
    "    # we pass the background plugin as the background!\n",
    "    background=background_plugin,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91d9a504",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "When we look at out count spectrum now, we will see the *predicted* background, rather than the measured one:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "d8bf6f65",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:45.018342Z",
     "iopub.status.busy": "2022-09-28T06:43:45.018119Z",
     "iopub.status.idle": "2022-09-28T06:43:46.313293Z",
     "shell.execute_reply": "2022-09-28T06:43:46.312566Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "modeled_background_plugin.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be60bd7a",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "Now we simply fit the spectrum as we did in the profiled case. The background plugin's parameters are stored in our new plugin as nuissance parameters:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "860b6693",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:46.316671Z",
     "iopub.status.busy": "2022-09-28T06:43:46.316328Z",
     "iopub.status.idle": "2022-09-28T06:43:46.323590Z",
     "shell.execute_reply": "2022-09-28T06:43:46.322994Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "OrderedDict([('cons_full',\n",
       "              Parameter cons_full = 1.0 []\n",
       "              (min_value = 0.8, max_value = 1.2, delta = 0.05, free = False)),\n",
       "             ('bkg_bkg_position_ra_full',\n",
       "              Parameter ra = 0.0 [deg]\n",
       "              (min_value = 0.0, max_value = 360.0, delta = 0.1, free = False)),\n",
       "             ('bkg_bkg_position_dec_full',\n",
       "              Parameter dec = 0.0 [deg]\n",
       "              (min_value = -90.0, max_value = 90.0, delta = 0.1, free = False)),\n",
       "             ('bkg_bkg_spectrum_main_composite_K_1_full',\n",
       "              Parameter K_1 = 0.3285435588200485 [1 / (cm2 keV s)]\n",
       "              (min_value = 0.0001, max_value = 10.0, delta = 0.1, free = True)),\n",
       "             ('bkg_bkg_spectrum_main_composite_piv_1_full',\n",
       "              Parameter piv_1 = 100.0 [keV]\n",
       "              (min_value = None, max_value = None, delta = 0.1, free = False)),\n",
       "             ('bkg_bkg_spectrum_main_composite_index_1_full',\n",
       "              Parameter index_1 = -1.396195468405873 []\n",
       "              (min_value = -10.0, max_value = 10.0, delta = 0.20099999999999998, free = True)),\n",
       "             ('bkg_bkg_spectrum_main_composite_F_2_full',\n",
       "              Parameter F_2 = 33.8924677000011 [1 / (cm2 s)]\n",
       "              (min_value = 0.0, max_value = 1000.0, delta = 0.1, free = True)),\n",
       "             ('bkg_bkg_spectrum_main_composite_mu_2_full',\n",
       "              Parameter mu_2 = 511.0 [keV]\n",
       "              (min_value = None, max_value = None, delta = 0.1, free = False)),\n",
       "             ('bkg_bkg_spectrum_main_composite_sigma_2_full',\n",
       "              Parameter sigma_2 = 18.19514389703478 [keV]\n",
       "              (min_value = 2.0, max_value = 30.0, delta = 0.1, free = True)),\n",
       "             ('bkg_cons_bkg_full',\n",
       "              Parameter cons_bkg = 1.0 []\n",
       "              (min_value = 0.8, max_value = 1.2, delta = 0.05, free = False))])"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "modeled_background_plugin.nuisance_parameters"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "741bd9f5",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "and the fitting engine will use them in the fit. The parameters will still be connected to the background plugin and its model and thus we can free/fix them there as well as set priors on them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "4beae4dc",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:46.326407Z",
     "iopub.status.busy": "2022-09-28T06:43:46.326184Z",
     "iopub.status.idle": "2022-09-28T06:43:46.696007Z",
     "shell.execute_reply": "2022-09-28T06:43:46.695308Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">06:43:46 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1042\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1042</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m06:43:46\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=290263;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=60788;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1042\u001b\\\u001b[2m1042\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.K</th>\n",
       "      <td>2.19 -0.15 +0.16</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.xb</th>\n",
       "      <td>(2.95 +/- 0.10) x 10^2</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.alpha</th>\n",
       "      <td>(1.1 +/- 0.9) x 10^-1</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.beta</th>\n",
       "      <td>-3.07 +/- 0.16</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>K_1</th>\n",
       "      <td>(3.50 +/- 0.30) x 10^-1</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>index_1</th>\n",
       "      <td>-1.41 +/- 0.04</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F_2</th>\n",
       "      <td>(2.8 +/- 0.5) x 10</td>\n",
       "      <td>1 / (cm2 s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sigma_2</th>\n",
       "      <td>(1.89 +/- 0.28) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                             result  \\\n",
       "parameter                                                             \n",
       "source.spectrum.main.Broken_powerlaw.K             2.19 -0.15 +0.16   \n",
       "source.spectrum.main.Broken_powerlaw.xb      (2.95 +/- 0.10) x 10^2   \n",
       "source.spectrum.main.Broken_powerlaw.alpha    (1.1 +/- 0.9) x 10^-1   \n",
       "source.spectrum.main.Broken_powerlaw.beta            -3.07 +/- 0.16   \n",
       "K_1                                         (3.50 +/- 0.30) x 10^-1   \n",
       "index_1                                              -1.41 +/- 0.04   \n",
       "F_2                                              (2.8 +/- 0.5) x 10   \n",
       "sigma_2                                        (1.89 +/- 0.28) x 10   \n",
       "\n",
       "                                                       unit  \n",
       "parameter                                                    \n",
       "source.spectrum.main.Broken_powerlaw.K      1 / (cm2 keV s)  \n",
       "source.spectrum.main.Broken_powerlaw.xb                 keV  \n",
       "source.spectrum.main.Broken_powerlaw.alpha                   \n",
       "source.spectrum.main.Broken_powerlaw.beta                    \n",
       "K_1                                         1 / (cm2 keV s)  \n",
       "index_1                                                      \n",
       "F_2                                             1 / (cm2 s)  \n",
       "sigma_2                                                 keV  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140286988421248\">\n",
       "<tr><td>1.00</td><td>-0.59</td><td>0.76</td><td>-0.04</td><td>0.13</td><td>-0.16</td><td>-0.01</td><td>-0.00</td></tr>\n",
       "<tr><td>-0.59</td><td>1.00</td><td>-0.45</td><td>-0.54</td><td>-0.02</td><td>0.19</td><td>-0.05</td><td>-0.03</td></tr>\n",
       "<tr><td>0.76</td><td>-0.45</td><td>1.00</td><td>-0.04</td><td>0.34</td><td>-0.22</td><td>-0.01</td><td>-0.01</td></tr>\n",
       "<tr><td>-0.04</td><td>-0.54</td><td>-0.04</td><td>1.00</td><td>-0.22</td><td>-0.29</td><td>-0.02</td><td>-0.01</td></tr>\n",
       "<tr><td>0.13</td><td>-0.02</td><td>0.34</td><td>-0.22</td><td>1.00</td><td>0.22</td><td>-0.03</td><td>-0.02</td></tr>\n",
       "<tr><td>-0.16</td><td>0.19</td><td>-0.22</td><td>-0.29</td><td>0.22</td><td>1.00</td><td>-0.02</td><td>-0.01</td></tr>\n",
       "<tr><td>-0.01</td><td>-0.05</td><td>-0.01</td><td>-0.02</td><td>-0.03</td><td>-0.02</td><td>1.00</td><td>0.17</td></tr>\n",
       "<tr><td>-0.00</td><td>-0.03</td><td>-0.01</td><td>-0.01</td><td>-0.02</td><td>-0.01</td><td>0.17</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.59  0.76 -0.04  0.13 -0.16 -0.01 -0.00\n",
       "-0.59  1.00 -0.45 -0.54 -0.02  0.19 -0.05 -0.03\n",
       " 0.76 -0.45  1.00 -0.04  0.34 -0.22 -0.01 -0.01\n",
       "-0.04 -0.54 -0.04  1.00 -0.22 -0.29 -0.02 -0.01\n",
       " 0.13 -0.02  0.34 -0.22  1.00  0.22 -0.03 -0.02\n",
       "-0.16  0.19 -0.22 -0.29  0.22  1.00 -0.02 -0.01\n",
       "-0.01 -0.05 -0.01 -0.02 -0.03 -0.02  1.00  0.17\n",
       "-0.00 -0.03 -0.01 -0.01 -0.02 -0.01  0.17  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>full</th>\n",
       "      <td>539.608432</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>539.608432</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "full         539.608432\n",
       "total        539.608432"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>1096.238141</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>1119.301947</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC           1096.238141\n",
       "BIC           1119.301947"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# instance the source model... the background plugin has it's model already specified\n",
    "bpl = Broken_powerlaw(piv=300, xb=500)\n",
    "\n",
    "bpl.K.bounds = (1e-5, 1e1)\n",
    "bpl.xb.bounds = (1e1, 1e4)\n",
    "\n",
    "ps_src = PointSource(\"source\", 0, 0, bpl)\n",
    "\n",
    "src_model = Model(ps_src)\n",
    "\n",
    "\n",
    "jl_src = JointLikelihood(src_model, DataList(modeled_background_plugin))\n",
    "\n",
    "_ = jl_src.fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3ccb8a33",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-28T06:43:46.699795Z",
     "iopub.status.busy": "2022-09-28T06:43:46.699155Z",
     "iopub.status.idle": "2022-09-28T06:43:48.413287Z",
     "shell.execute_reply": "2022-09-28T06:43:48.412588Z"
    },
    "tags": [
     "nbsphinx-thumbbail"
    ]
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# over plot the joint background and source fits\n",
    "fig = modeled_background_plugin.display_model(step=False)\n",
    "\n",
    "_ = background_plugin.display_model(\n",
    "    data_color=\"#1A68F0\", model_color=\"#FF9700\", model_subplot=fig.axes, step=False\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ee097212",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
