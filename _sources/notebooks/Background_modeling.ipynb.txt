{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "cdcfde2d",
   "metadata": {
    "deletable": true,
    "editable": true,
    "lines_to_next_cell": 2
   },
   "source": [
    "# Background Modeling\n",
    "\n",
    "When fitting a spectrum with a background, it is invalid to simply subtract off the background if the background is part of the data's generative model [van Dyk et al. (2001)](http://iopscience.iop.org/article/10.1086/318656/meta). Therefore, we are often left with the task of modeling the statistical process of the background along with our source.\n",
    "\n",
    "In typical spectral modeling, we find a few common cases when background is involved. If we have total counts ($S_i$) in $i^{\\rm th}$ on $N$ bins observed for an exposure of $t_{\\rm s}$ and also a measurement of $B_i$ background counts from looking off source for $t_{\\rm b}$ seconds, we can then suppose a model for the source rate ($m_i$) and background rate ($b_i$).\n",
    "\n",
    "**Poisson source with Poisson background**\n",
    "\n",
    "This is described by a likelihood of the following form:\n",
    "\n",
    "$$ L = \\prod^N_{i=1} \\frac{(t_{\\rm s}(m_i+b_i))^{S_i} e^{-t_{\\rm s}(m_i+b_i)}}{S_i!} \\times \\frac{(t_{\\rm b} b_i)^{B_i} e^{-t_{\\rm b}b_i}}{B_i!}  $$\n",
    "\n",
    "which is a Poisson likelihood for the total model ($m_i +b_i$) conditional on the Poisson distributed background observation. This is the typical case for e.g. aperture x-ray instruments that observe a source region and then a background region. Both observations are Poisson distributed.\n",
    "\n",
    "**Poisson source with Gaussian background**\n",
    "\n",
    "This likelihood is similar, but the conditonal background distribution is described by Gaussian:\n",
    "\n",
    "$$ L = \\prod^N_{i=1} \\frac{(t_{\\rm s}(m_i+b_i))^{S_i} e^{-t_{\\rm s}(m_i+b_i)}}{S_i!} \\times \\frac{1}{\\sigma_{b,i}\\sqrt{2 \\pi}} \\exp \\left[ \\frac{({B_i} - t_{\\rm b} b_i)^2} {2 \\sigma_{b,i}^2} \\right] $$\n",
    "\n",
    "where the $\\sigma_{b,i}$ are the measured errors on $B_i$. This situation occurs e.g. when the background counts are estimated from a fitted model such as time-domain instruments that estimate the background counts from temporal fits to the lightcurve.\n",
    "\n",
    "In 3ML, we can fit a background model along with the the source model which allows for arbitrarily low background counts (in fact zero) in channels. The alternative is to use profile likelihoods where we first differentiate the likelihood with respect to the background model\n",
    "\n",
    "$$ \\frac{ \\partial L}{{\\partial b_i}} = 0$$\n",
    "\n",
    "and solve for the $b_i$ that maximize the likelihood. Both the Poisson and Gaussian background profile likelihoods are described in the [XSPEC statistics guide](https://heasarc.gsfc.nasa.gov/xanadu/xspec/manual/XSappendixStatistics.html). This implicitly yields $N$ parameters to the model thus requiring at least one background count per channel. These profile likelihoods are the default Poisson likelihoods in 3ML when a background model is not used with a **SpectrumLike** (and its children, **DispersionSpectrumLike** and **OGIPLike**) plugin.\n",
    "\n",
    "Let's examine how to handle both cases.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "24a1be67",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:23.181376Z",
     "iopub.status.busy": "2022-09-27T11:14:23.180896Z",
     "iopub.status.idle": "2022-09-27T11:14:23.246988Z",
     "shell.execute_reply": "2022-09-27T11:14:23.246202Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'divide': 'warn', 'over': 'warn', 'under': 'ignore', 'invalid': 'warn'}"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "51beb10d",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:23.251071Z",
     "iopub.status.busy": "2022-09-27T11:14:23.250753Z",
     "iopub.status.idle": "2022-09-27T11:14:26.300378Z",
     "shell.execute_reply": "2022-09-27T11:14:26.299544Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "from threeML import *"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ec86c5e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:26.304155Z",
     "iopub.status.busy": "2022-09-27T11:14:26.303909Z",
     "iopub.status.idle": "2022-09-27T11:14:26.333949Z",
     "shell.execute_reply": "2022-09-27T11:14:26.333253Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()\n",
    "import astropy.units as u"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84fe003d",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "First we will create an observation where we have a simulated broken power law source spectrum along with an observed background spectrum. The background is a powerl law continuum with a Gaussian line."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ebffc2e4",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:26.338130Z",
     "iopub.status.busy": "2022-09-27T11:14:26.337666Z",
     "iopub.status.idle": "2022-09-27T11:14:30.270225Z",
     "shell.execute_reply": "2022-09-27T11:14:30.269505Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">11:14:26 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">469</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m11:14:26\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=379681;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=494370;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\u001b\\\u001b[2m469\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">470</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=188012;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=595155;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\u001b\\\u001b[2m470\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">471</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=42837;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=726828;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\u001b\\\u001b[2m471\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">11:14:28 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">469</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m11:14:28\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=308056;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=688109;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\u001b\\\u001b[2m469\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">470</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=428712;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=957068;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\u001b\\\u001b[2m470\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">471</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=148874;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=98537;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\u001b\\\u001b[2m471\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">469</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=170849;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=115286;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\u001b\\\u001b[2m469\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">470</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=103995;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=471257;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\u001b\\\u001b[2m470\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">471</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=792417;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=60448;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\u001b\\\u001b[2m471\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">469</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=760708;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=77653;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\u001b\\\u001b[2m469\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">470</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=607092;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=591003;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\u001b\\\u001b[2m470\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">471</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=675484;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=751148;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\u001b\\\u001b[2m471\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Font family ['sans-serif'] not found. Falling back to DejaVu Sans.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Font family ['sans-serif'] not found. Falling back to DejaVu Sans.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# create the simulated observation\n",
    "\n",
    "energies = np.logspace(1, 4, 151)\n",
    "\n",
    "low_edge = energies[:-1]\n",
    "high_edge = energies[1:]\n",
    "\n",
    "# get a BPL source function\n",
    "source_function = Broken_powerlaw(K=2, xb=300, piv=300, alpha=0.0, beta=-3.0)\n",
    "\n",
    "# power law background function\n",
    "background_function = Powerlaw(K=0.5, index=-1.5, piv=100.0) + Gaussian(\n",
    "    F=50, mu=511, sigma=20\n",
    ")\n",
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cfe4c543",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "## Using a profile likelihood\n",
    "\n",
    "We have very few counts counts in some channels (in fact sometimes zero), but let's assume we do not know the model for the background. In this case, we will use the profile Poisson likelihood."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0f8b93d1",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:30.274827Z",
     "iopub.status.busy": "2022-09-27T11:14:30.273426Z",
     "iopub.status.idle": "2022-09-27T11:14:35.025444Z",
     "shell.execute_reply": "2022-09-27T11:14:35.024581Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">11:14:30 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1042\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1042</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m11:14:30\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=347778;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=864074;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1042\u001b\\\u001b[2m1042\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.K</th>\n",
       "      <td>1.70 -0.09 +0.10</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.xb</th>\n",
       "      <td>(3.236 -0.026 +0.027) x 10^2</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.alpha</th>\n",
       "      <td>(-2.0 +/- 0.6) x 10^-1</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.beta</th>\n",
       "      <td>-3.14 +/- 0.14</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                  result  \\\n",
       "parameter                                                                  \n",
       "source.spectrum.main.Broken_powerlaw.K                  1.70 -0.09 +0.10   \n",
       "source.spectrum.main.Broken_powerlaw.xb     (3.236 -0.026 +0.027) x 10^2   \n",
       "source.spectrum.main.Broken_powerlaw.alpha        (-2.0 +/- 0.6) x 10^-1   \n",
       "source.spectrum.main.Broken_powerlaw.beta                 -3.14 +/- 0.14   \n",
       "\n",
       "                                                       unit  \n",
       "parameter                                                    \n",
       "source.spectrum.main.Broken_powerlaw.K      1 / (cm2 keV s)  \n",
       "source.spectrum.main.Broken_powerlaw.xb                 keV  \n",
       "source.spectrum.main.Broken_powerlaw.alpha                   \n",
       "source.spectrum.main.Broken_powerlaw.beta                    "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table139620197598592\">\n",
       "<tr><td>1.00</td><td>-0.14</td><td>0.67</td><td>-0.45</td></tr>\n",
       "<tr><td>-0.14</td><td>1.00</td><td>-0.10</td><td>-0.13</td></tr>\n",
       "<tr><td>0.67</td><td>-0.10</td><td>1.00</td><td>-0.32</td></tr>\n",
       "<tr><td>-0.45</td><td>-0.13</td><td>-0.32</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.14  0.67 -0.45\n",
       "-0.14  1.00 -0.10 -0.13\n",
       " 0.67 -0.10  1.00 -0.32\n",
       "-0.45 -0.13 -0.32  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake</th>\n",
       "      <td>411.628748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>411.628748</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "fake         411.628748\n",
       "total        411.628748"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>831.533358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>843.300037</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC            831.533358\n",
       "BIC            843.300037"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# instance our source spectrum\n",
    "bpl = Broken_powerlaw(piv=300, xb=500)\n",
    "\n",
    "# instance a point source\n",
    "ra, dec = 0, 0\n",
    "ps_src = PointSource(\"source\", ra, dec, spectral_shape=bpl)\n",
    "\n",
    "# instance the likelihood model\n",
    "src_model = Model(ps_src)\n",
    "\n",
    "# pass everything to a joint likelihood object\n",
    "jl_profile = JointLikelihood(src_model, DataList(spectrum_generator))\n",
    "\n",
    "\n",
    "# fit the model\n",
    "_ = jl_profile.fit()\n",
    "\n",
    "# plot the fit in count space\n",
    "_ = spectrum_generator.display_model(step=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c96d20d",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "Our fit recovers the simulated parameters. However, we should have binned the spectrum up such that there is at least one background count per spectral bin for the profile to be valid."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d18bf3d2",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:35.028478Z",
     "iopub.status.busy": "2022-09-27T11:14:35.028237Z",
     "iopub.status.idle": "2022-09-27T11:14:37.347845Z",
     "shell.execute_reply": "2022-09-27T11:14:37.347026Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">11:14:35 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Now using </span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">80</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> bins                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#1673\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1673</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m11:14:35\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Now using \u001b[0m\u001b[1;37m80\u001b[0m\u001b[1;38;5;251m bins                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=817449;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=164624;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#1673\u001b\\\u001b[2m1673\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.K</th>\n",
       "      <td>1.71 -0.11 +0.12</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.xb</th>\n",
       "      <td>(3.23 -0.13 +0.14) x 10^2</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.alpha</th>\n",
       "      <td>(-1.9 +/- 0.7) x 10^-1</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.beta</th>\n",
       "      <td>-3.12 +/- 0.16</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                               result  \\\n",
       "parameter                                                               \n",
       "source.spectrum.main.Broken_powerlaw.K               1.71 -0.11 +0.12   \n",
       "source.spectrum.main.Broken_powerlaw.xb     (3.23 -0.13 +0.14) x 10^2   \n",
       "source.spectrum.main.Broken_powerlaw.alpha     (-1.9 +/- 0.7) x 10^-1   \n",
       "source.spectrum.main.Broken_powerlaw.beta              -3.12 +/- 0.16   \n",
       "\n",
       "                                                       unit  \n",
       "parameter                                                    \n",
       "source.spectrum.main.Broken_powerlaw.K      1 / (cm2 keV s)  \n",
       "source.spectrum.main.Broken_powerlaw.xb                 keV  \n",
       "source.spectrum.main.Broken_powerlaw.alpha                   \n",
       "source.spectrum.main.Broken_powerlaw.beta                    "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table139620237151488\">\n",
       "<tr><td>1.00</td><td>-0.60</td><td>0.75</td><td>0.02</td></tr>\n",
       "<tr><td>-0.60</td><td>1.00</td><td>-0.47</td><td>-0.58</td></tr>\n",
       "<tr><td>0.75</td><td>-0.47</td><td>1.00</td><td>0.01</td></tr>\n",
       "<tr><td>0.02</td><td>-0.58</td><td>0.01</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.60  0.75  0.02\n",
       "-0.60  1.00 -0.47 -0.58\n",
       " 0.75 -0.47  1.00  0.01\n",
       " 0.02 -0.58  0.01  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake</th>\n",
       "      <td>285.891287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>285.891287</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "fake         285.891287\n",
       "total        285.891287"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>580.058436</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>591.825115</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC            580.058436\n",
       "BIC            591.825115"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator.rebin_on_background(1)\n",
    "\n",
    "spectrum_generator.view_count_spectrum()\n",
    "\n",
    "_ = jl_profile.fit()\n",
    "\n",
    "_ = spectrum_generator.display_model(step=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2f81c2c",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "## Modeling the background\n",
    "\n",
    "Now let's try to model the background assuming we know that the background is a power law with a Gaussian line. We can extract a background plugin from the data by passing the original plugin to a classmethod of spectrum like."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fd7339e1",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:37.351168Z",
     "iopub.status.busy": "2022-09-27T11:14:37.350909Z",
     "iopub.status.idle": "2022-09-27T11:14:37.367976Z",
     "shell.execute_reply": "2022-09-27T11:14:37.367370Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">11:14:37 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">469</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m11:14:37\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=206860;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=230633;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\u001b\\\u001b[2m469\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">470</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=786126;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=906579;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\u001b\\\u001b[2m470\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">471</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=406519;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=392218;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\u001b\\\u001b[2m471\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# extract the background from the spectrum plugin.\n",
    "# This works for OGIPLike plugins as well, though we could easily also just read\n",
    "# in a bakcground PHA\n",
    "background_plugin = SpectrumLike.from_background(\"bkg\", spectrum_generator)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17a3aa9f",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "This constructs a new plugin with only the observed background so that we can first model it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "552e644f",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:37.371205Z",
     "iopub.status.busy": "2022-09-27T11:14:37.370785Z",
     "iopub.status.idle": "2022-09-27T11:14:38.391800Z",
     "shell.execute_reply": "2022-09-27T11:14:38.391029Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "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rKws/fznPz/itffcc4+ysrL06quvSpLGjBmjjIwMLV68OKw1AgDCJ9HpAgAACLe+ffvq0ksvbfNcSkqKzdVErmeeeUb79+/X5MmTwz7Wd7/7XWVkZOi9995TVVWVMjIy2rzO7/frjTfeUEpKirKysiRJiYmJuvrqq7Vw4UJt2rRJQ4cODXu9AABrEUQBADGvb9++uuGGG5wuI6IdPHhQL730koYOHaq+ffuGfbyEhASNHTtWS5cu1erVq3X99de3eZ3P51MgENAVV1wht9sdOn7JJZdo0aJFWr58OUEUAKIQrbkAABwiKytLt956q/7zn//o3nvvVXZ2trxer26++Wa9//77bb6nrq5Ojz/+uH7605/K6/Xqiiuu0M9//nN98MEHra699dZblZWVpUAgoMcee0w/+tGPNHr0aD3++OOha9atW6ecnBx5vV5NmDBB8+fPV01Nja6++uoWrcS///3vlZWVpc2bN7dZ15IlS5SVlSWfz3fE7/vtt9/W3r17NWrUqCNe22zXrl26/vrr5fV6VVJSEjr+5ZdfqrCwUJMnT9Yll1yi7Oxs/frXv9ann37a4v1XXHGFDMPQqlWrZJpmm2OsXLlSkjRu3LgWx1NTU3XmmWeqpKREdXV1Ha4ZABAZCKIAAHyD3+/XLbfcooqKCl122WXKyspSeXm5br/99lZhav/+/Zo+fbqWLl2qXr16acKECcrKytLHH3+sWbNm6Y033mhzjN/85jdavXq1zjzzTP3whz8MPZP58ssv6ze/+Y127Nihyy+/XGPGjNFHH32kOXPm6ODBgy3uMX78+NB7vqmhoUErV65U7969Qy2th/Pee+9Jkk4//fQj/4AkVVRUaMaMGdq1a5cWLFgQCrCVlZWaNm2a/va3v+mEE07QD37wA33ve9/T22+/renTp7cIzccdd5zOPvtsffHFF22G/E8//VRlZWU65ZRTdOqpp7Y6f/rppysYDOrDDz/sUM0AgMhBay4AIOZVVla2mHE81Omnn67zzjuvxbFPPvlEEydO1OzZs5WQ0PQ727POOkvz58/X888/r9tvvz107R/+8Ad99tlnuuOOO3TllVeGjn/55ZfKycnRggULdO6557ZoK5WkvXv3qqioSEcffXToWE1NjR566CH17NlTjz76qPr16ydJysnJ0e23367y8nIdd9xxoeuHDRumzMxMrV27Vrm5uerZs2fo3Ntvv63du3frqquuksvlOuLPaNOmTUpISNDAgQOPeO1HH32kO++8U4mJiSosLGzxnnvvvVf/+c9/9MADD+jcc88NHf/pT3+qnJwczZ8/X0uXLg0dHzdunN59912tXLlSZ511Votx2psNbXbaaadJkj788MMWYwEAIh8zogCAmFdZWamlS5e2+ecf//hHq+t79uypm2++ORRCpaaVWnv06KGysrLQserqar3++us666yzWoRQSTrmmGM0efJkVVdXh2YbDzV16tQWIVSS/v73v+urr77SFVdcEQqhUtPiPNOmTWvzexs/frzq6uq0du3aFsdfeuklSVJ2dnZ7P5YWdu/erZSUlCOG1g0bNui2225Tr1699Mgjj7QIoR9//LE+/PBDXX755a2CYb9+/XTllVfq008/bTGrfNFFF6l3795at26damtrQ8cPHjyoNWvWyOVytbvQVJ8+fSQ1tQgDAKILM6IAgJh37rnn6oEHHujw9SeeeKKSk5NbHEtMTFSfPn3k9/tDx8rKytTQ0KADBw60OeO6Y8cOSdK2bds0YsSIFucGDx7c6vrmfTG/853vtDo3ZMgQ9ejRo9Xxyy+/XH/605/00ksvhcLwf/7zH61fv15nnHGGMjMzj/DdNtm/f7+OPfbYw17z+uuv65133tGAAQO0YMECHXPMMS3ON7fdfvnll23+PD7//PPQ//bv31+SQkHz2Weflc/n04QJEyRJb775pqqrq+X1etWrV68262k+vm/fvg59jwCAyEEQBQDgGzweT5vHe/ToocbGxtDr/fv3S2pqa920aVO796uvr291rHk271DNM4LfDHhS0yqzvXv3bnW8V69eGj16tFavXq1PP/1U/fv316pVq9TQ0NDh2VBJcrvdCgaDh73mo48+UkNDg77zne+0WWPzz2PDhg3asGFDu/f56quvWrweN26cnn32Wa1cuTIURI/UlispVG9SUtJh6wYARB6CKAAAXdQcWK+55hrdcsstnXqvYRjt3u/LL79sda6xsVH79u1rc9ZywoQJWr16tYqLizVr1iy9/PLL8ng8Gj16dIfr6d27t3bv3n3Ya2666Sb9/e9/17PPPqsePXq0+p6b6581a5YmTZrU4bEHDBigQYMGacuWLfrss8/Uq1cvvf322zr++ONbPTd6qObgm5qa2uGxAACRgWdEAQDookGDBskwDH300UeW3G/AgAGS1Obs6pYtW9TQ0NDm+04//XQNGDBAr776qt5++23t2LFDl156aadmCvv3769gMKiqqqp2r3G5XLr33nt1/vnna9myZVq0aFGL883txl35eTTPfL788st65ZVX1NDQENrepT3Nrb7Nbb4AgOhBEAUAoIvS0tI0evRoffjhh3rqqafa3Atz8+bNbbbmtuXCCy9Uz5499fLLL6uysjJ0/ODBg1qyZMlh3zt+/Hjt379f8+bNk6RWiycdyfDhw0P1Ho7L5dLcuXM1YsQIPfPMMyosLAydGzJkiIYMGaK1a9e2WjxJaprV3bhxY5v39Xq9SkpK0po1a7Ry5UolJCRozJgxh61ly5YtLWoHAEQPWnMBADHvcNu3SNJ1113XanuVjpozZ462b9+uxYsX65VXXtHpp5+ulJQU7d69W2VlZdqxY4deeOGFDs1O9urVS7m5uVqwYIFycnJ08cUXy+Px6K233pLL5VJ6enq7M4SXXXaZ/vjHP2rPnj067bTT2tx383AuvPBCPfzww3r33XeP2NJ71FFH6fe//71++9vf6m9/+5tM09Stt94qSfrtb3+r2bNn6+6779azzz6rU045RW63W7t27dKHH36offv2yefztbqnx+PRyJEj9corr6i6ulrnnXeeMjIy2q3BNE299957Oumkk1qsMAwAiA4EUQBAzGvevqU9V111VZeD6NFHH61HHnlEzz//vF577TX5fD41NjaqT58+GjhwoK6//vo2FxlqT3Z2tnr16qUnn3xSq1evlsfj0QUXXKCbb75ZV111lfr27dvm+zwejy666CKtWbOm07OhknT88cfrnHPOUUlJiWbNmnXEbVyaw+jvfvc7PfvsszJNU7NmzdIJJ5ygJUuWaNmyZXrjjTe0atUqJSQkKC0tTcOGDdOoUaPavee4ceP0yiuvSJKuuOKKw47/f//3f6qqqtLMmTM7/b0CAJxnmG31EQEAgIiyY8cOXXvttRo9erTuvvvuNq+5/vrrtXPnTj3//PPtrvx7OO+9955uu+02/frXv9Zll13W3ZLD6ve//73+8Y9/6Kmnnmp3excAQOTiGVEAACJITU1Nq21UAoFAaGGgiy66qM33vfXWW/rss8/k9Xq7FEIl6eyzz9Z5552nJ554osU2NZFm+/bteu211/TTn/6UEAoAUYrWXAAAIsjGjRt1//3365xzztG3vvUt7du3T//85z+1c+dOnXXWWbr44otbXP/iiy9q165deumll+RyuXTdddd1a/xbb71Vr776qnbv3n3YZzSdtGvXLk2ZMkXf//73nS4FANBFtOYCABBBtm/friVLlujDDz9UdXW1JKlv3766+OKL9aMf/ajVs6xXX321du/erX79+unmm2/WiBEjHKgaAIDOIYgCAAAAAGzFM6IAAAAAAFsRRAEAAAAAtiKIAgAAAABsRRAFAAAAANiKIAoAAAAAsBVBFAAAAABgK4IoAAAAAMBWBFEAAAAAgK0IogAAAAAAW/1/M3YwjU0xm9wAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "background_plugin.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6fb5e280",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "We now construct our background model and fit it to the data. Let's assume we know that the line occurs at 511 keV, but we are unsure of its strength an width. We do not need to bin the data up because we are using a simple Poisson likelihood which is valid even when we have zero counts [Cash (1979)](http://adsabs.harvard.edu/abs/1979ApJ...228..939C)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "31298234",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:38.395260Z",
     "iopub.status.busy": "2022-09-27T11:14:38.394983Z",
     "iopub.status.idle": "2022-09-27T11:14:40.274901Z",
     "shell.execute_reply": "2022-09-27T11:14:40.274133Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">11:14:38 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1042\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1042</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m11:14:38\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=74389;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=77150;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1042\u001b\\\u001b[2m1042\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>bkg.spectrum.main.composite.K_1</th>\n",
       "      <td>(2.75 -0.21 +0.23) x 10^-1</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bkg.spectrum.main.composite.index_1</th>\n",
       "      <td>-1.40 +/- 0.05</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bkg.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.0 +/- 0.6) x 10</td>\n",
       "      <td>1 / (cm2 s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bkg.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(2.7 +/- 0.4) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                         result  \\\n",
       "parameter                                                         \n",
       "bkg.spectrum.main.composite.K_1      (2.75 -0.21 +0.23) x 10^-1   \n",
       "bkg.spectrum.main.composite.index_1              -1.40 +/- 0.05   \n",
       "bkg.spectrum.main.composite.F_2              (3.0 +/- 0.6) x 10   \n",
       "bkg.spectrum.main.composite.sigma_2          (2.7 +/- 0.4) x 10   \n",
       "\n",
       "                                                unit  \n",
       "parameter                                             \n",
       "bkg.spectrum.main.composite.K_1      1 / (cm2 keV s)  \n",
       "bkg.spectrum.main.composite.index_1                   \n",
       "bkg.spectrum.main.composite.F_2          1 / (cm2 s)  \n",
       "bkg.spectrum.main.composite.sigma_2              keV  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table139620143102224\">\n",
       "<tr><td>1.00</td><td>0.18</td><td>-0.07</td><td>-0.06</td></tr>\n",
       "<tr><td>0.18</td><td>1.00</td><td>-0.07</td><td>-0.05</td></tr>\n",
       "<tr><td>-0.07</td><td>-0.07</td><td>1.00</td><td>0.11</td></tr>\n",
       "<tr><td>-0.06</td><td>-0.05</td><td>0.11</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00  0.18 -0.07 -0.06\n",
       " 0.18  1.00 -0.07 -0.05\n",
       "-0.07 -0.07  1.00  0.11\n",
       "-0.06 -0.05  0.11  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>bkg</th>\n",
       "      <td>202.342781</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>202.342781</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "bkg          202.342781\n",
       "total        202.342781"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>412.961425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>424.728104</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC            412.961425\n",
       "BIC            424.728104"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# instance the spectrum setting the line's location to 511\n",
    "bkg_spectrum = Powerlaw(piv=100) + Gaussian(F=50, mu=511)\n",
    "\n",
    "# setup model parameters\n",
    "# fix the line's location\n",
    "bkg_spectrum.mu_2.fix = True\n",
    "\n",
    "# nice parameter bounds\n",
    "bkg_spectrum.K_1.bounds = (1e-4, 10)\n",
    "bkg_spectrum.F_2.bounds = (0.0, 1000)\n",
    "bkg_spectrum.sigma_2.bounds = (2, 30)\n",
    "\n",
    "ps_bkg = PointSource(\"bkg\", 0, 0, spectral_shape=bkg_spectrum)\n",
    "\n",
    "bkg_model = Model(ps_bkg)\n",
    "\n",
    "\n",
    "jl_bkg = JointLikelihood(bkg_model, DataList(background_plugin))\n",
    "\n",
    "\n",
    "_ = jl_bkg.fit()\n",
    "\n",
    "_ = background_plugin.display_model(\n",
    "    step=False, data_color=\"#1A68F0\", model_color=\"#FF9700\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c6c9233f",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "We now have a model and estimate for the background which we can use when fitting with the source spectrum. We now create a new plugin with just the total observation and pass our background plugin as the background argument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6a724509",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:40.278082Z",
     "iopub.status.busy": "2022-09-27T11:14:40.277763Z",
     "iopub.status.idle": "2022-09-27T11:14:40.294491Z",
     "shell.execute_reply": "2022-09-27T11:14:40.293831Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">11:14:40 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Background modeled from plugin: bkg                                          </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#459\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">459</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m11:14:40\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Background modeled from plugin: bkg                                         \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=789560;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=113589;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#459\u001b\\\u001b[2m459\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">469</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=128985;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=586081;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#469\u001b\\\u001b[2m469\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">470</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=144162;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=736735;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#470\u001b\\\u001b[2m470\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">471</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=12982;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=174884;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#471\u001b\\\u001b[2m471\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "modeled_background_plugin = SpectrumLike(\n",
    "    \"full\",\n",
    "    # here we use the original observation\n",
    "    observation=spectrum_generator.observed_spectrum,\n",
    "    # we pass the background plugin as the background!\n",
    "    background=background_plugin,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0dfa06b",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "When we look at out count spectrum now, we will see the *predicted* background, rather than the measured one:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f13841fb",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:40.297643Z",
     "iopub.status.busy": "2022-09-27T11:14:40.297044Z",
     "iopub.status.idle": "2022-09-27T11:14:41.611773Z",
     "shell.execute_reply": "2022-09-27T11:14:41.611003Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "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adIkfe1rX9NnPvMZ/e1vf9POnTs1efJk/fCHP5QUeLPjrrvu0r///W8de+yxOvroo3XyySf363sTTySjAAAASDsef7vcfp9t1z/llFNUWlqqCy64QGeeeabOOOMMzZo1S4WFhfL7/Zo3b54WLFigL33pS5KkvXv3SpIuvfRSXXfddZKkdevW6c4779Qrr7zS7fXvvPNO3XDDDfr85z8vv9+vG264QS+//LIuvPBCfetb39K9996ryZMn669//aueffbZXmO9/PLLNWfOHM2ZM0fPPPOMrrjiCj366KOhx//7v/9bJ510kpYuXao9e/boy1/+ssaPH68JEyb0eq2eYpw+fXpMvha3261LL71UnZ2d+uijjzRnzhwdf/zxkqSzzz5bX/rSl2QYhrZv366rrrpKZ599tpxOp2677TadffbZeuihhyJ+FkHLly/XL37xC/3iF79QUVGRNm/erKVLl+q5557TqFGjQp8XLiMjQ88884wk6ZZbbon6/SspKen15yJJH3/8sX7729/K7/drxowZev/993XGGWfonnvu0cSJE/XYY4+publZl156KckoAAAAkAhyM7NsvUZGRoaWLFmirVu36p133tGqVav085//XM8884x8Pp+8Xm8oEZWkY445RpK0ceNG/fznP1dLS4scDoc++ugjtbW1KScnJ/Rcj8ejt956S7t3746476OPPtI///lPORwOTZ48WVIgCSsqKur16zjuuONUWFiov/zlL/rHP/6hn/zkJxHJ6FtvvaXbbrtNklRQUKCLLrpIq1evVk5OTo/X6i3GcFZ+LeFlui0tLSovL9fEiRN14YUXavv27brtttvU3Nwsh8Oh/fv3a9u2bTruuOP03nvv6bHHHuv2s5CkF198URkZGfrtb38bOuV+++23dc4552jUqFGSpCuvvFIPP/xwRCz/8R//0ef3rz/J6IwZM5SZmanMzEydeuqp+vjjj3XGGWfo7bff1h133CFJKiwsDJ3yJhqSUQAAAKSdnspn423s2LEaO3asrr76an3jG9/Qn//8Z5199tlRn+vz+bRgwQL95je/0WmnnabW1laVlpbK5/NFJKOmaUqSnn76aWVnZ0e8xqZNm7q9bn/6VK+44grddddduvrqq5WR0fsM1N5eL/hYbzGGi8XXIkn5+fmh09QLL7xQt956q7797W9r2rRpkqTPf/7z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KyvTDTfcoHfeeSfOEQMAEk3XNTC/27pOWw7ssTusmOIUMn3ULF5ldwgAMCBJk4zu379f1dXVamxs7HMq77333qunn35aF110kW666SZlZGTo9ttv1/r16+MULQAgkfS0BoYVMEglNUtIRgEkF8sGGMVaQUGBnnvuORUUFGjTpk26/vrroz5v48aNeuONNzR37lzNnj1bkvTFL35R5eXleuSRR/TII4+EnnvjjTdqw4YNUV/na1/7mioqKqz/QgAAcTdpVJHW7NoW6hk1ZMhQIDlNxz5SBggBABJB0iSjTqdTBQV9T0BcuXKlHA6HLrnkktB92dnZmjlzph599FE1NzersLBQkvTwww/HLF4AQOKItgYmN9N5ZNJummENDAAgESRNMtpfH374oU444QS5XK6I+0899VRJ0pYtW0LJaH/5/X51dHSos7NTHR0d8nq9yszMlONw2ReAxMSEXfRH1z5S6chOUiSv3n6urPcBgMQQ02TUNE1t375dTqdzwAngYO3ZsyfqCWrwvt27dw/4NX/729+quro6dPvxxx/XXXfdpenTpw/4tXbv3q09e6IPy2hsZMgEYCVOftCb8H2k4X2kkkI7SZF8+vNzHTeiQLMWnGtrnAAAi5LRlStX6q9//atuuukmDR8+XJL073//W3feeWcowZo6daq+973vxfw00ev1Kisrq9v9Tqcz9PhAff3rX9fXv/71IccmSS+++GJEYgsAsEe0PlJXplMevy8te0lTpY+0vz/XWTeTjAKA3SxJRl944QXt3bs3lIhK0tKlS9XQ0KDPfvazOnDggFasWKHS0lLNmjXLikv2KDs7W+3t7d3u9/l8ocftdMkll2jKlClRH2tsbNQ999wT54gAID1F6yMtLy5V9ea1adlLmip9pMnyc50+d4oer3zJ7jAAwFaWJKMNDQ2aNGlS6LbH49Fbb72lCy64QHfffbf8fr++8Y1vaPny5TFPRgsKCrRr165u9wdLY0eOHBnT6/dl5MiRtscAAOibx++j3xAxM2MeySgAWLJn9MCBAzrmmGNCt9evX6+Ojg5deOGFkqTMzEx97nOfU1NTkxWX69W4ceO0fft2ud3uiPs3btwYehwAgJ6E7yQN9hum807SuuYGu0NAnNQsZk8pgPiyJBl1uVw6cOBA6Pb777+vjIwMnX766aH7MjMz1dbWZsXlejV16lR1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Xm10zAAA86AYBQDgBqWlpXr66af1zTffaPTo0YqOjlZOTo4WLFhQp6C6fPmy5s6dq9TUVIWEhGjixImKjo7WqVOnlJSUpAMHDri8x+LFi5WRkaEHH3xQjz32mHON5rZt27R48WLl5eVpzJgxGjt2rI4dO6b58+eroqKi1jXi4uKcfW7kcDiUnp6u9u3bO6e3NiQrK0uS1KdPn5s/IEnffPONnnrqKRUUFCg5OdlZxObn52vWrFnavHmz7r77bv3yl7/UQw89pMzMTM2dO7dW4dy5c2cNGDBA3377rctC//Tp0zp58qR69Oih++67r87xPn36qLy8XNnZ2Y2KGQBgLkzTBQC0evn5+bVGHq/Xp08fDR48uFbb119/rUmTJum5556Tr2/1v9v2799fK1as0NatW7VgwQLnuW+88YbOnDmjF198UePHj3e2X7p0SYmJiUpOTtagQYNqTTGVpAsXLuhPf/qT2rVr52wrKSnRm2++qcDAQL3zzjvq2rWrJCkxMVELFixQTk6OOnfu7Dy/X79+uvfee7V7924988wzCgwMdB7LzMxUYWGhpkyZIqvVetNndPToUfn6+ioyMvKm5x47dkwLFy6Un5+fVq9eXavP8uXLdfHiRa1cuVKDBg1ytk+fPl2JiYlasWKFUlNTne3jxo3T559/rvT0dPXv37/WfeobFa3Rs2dPSVJ2dnatewEAWgZGRgEArV5+fr5SU1Nd/vnss8/qnB8YGKg5c+Y4C1Gp+g2uFotFJ0+edLYVFRVp79696t+/f61CVJI6dOigqVOnqqioyDnqeL0nn3yyViEqSZ988ol++OEHxcbGOgtRqfqFPbNmzXL52eLi4nT16lXt3r27VntaWpokacKECfU9lloKCwsVHBx808L10KFDev755xUSEqK33367ViF66tQpZWdna8yYMXWKw65du2r8+PE6ffp0rdHlYcOGqX379tq/f7+uXLnibK+oqNDOnTtltVrrfflUx44dJVVPFwYAtDyMjAIAWr1BgwZp5cqVjT7/nnvuUdu2bWu1+fn5qWPHjiotLXW2nTx5Ug6HQ9euXXM58pqXlydJOnv2rIYMGVLrWO/eveucX7NvZt++fesci4qKksViqdM+ZswY/fGPf1RaWpqzIL548aL+8Y9/6Kc//anuvffem3zaapcvX1anTp0aPGfv3r365z//qe7d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\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "modeled_background_plugin.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3edc8fc",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "Now we simply fit the spectrum as we did in the profiled case. The background plugin's parameters are stored in our new plugin as nuissance parameters:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4e4f4051",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:41.615269Z",
     "iopub.status.busy": "2022-09-27T11:14:41.614790Z",
     "iopub.status.idle": "2022-09-27T11:14:41.622874Z",
     "shell.execute_reply": "2022-09-27T11:14:41.622250Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "OrderedDict([('cons_full',\n",
       "              Parameter cons_full = 1.0 []\n",
       "              (min_value = 0.8, max_value = 1.2, delta = 0.05, free = False)),\n",
       "             ('bkg_bkg_position_ra_full',\n",
       "              Parameter ra = 0.0 [deg]\n",
       "              (min_value = 0.0, max_value = 360.0, delta = 0.1, free = False)),\n",
       "             ('bkg_bkg_position_dec_full',\n",
       "              Parameter dec = 0.0 [deg]\n",
       "              (min_value = -90.0, max_value = 90.0, delta = 0.1, free = False)),\n",
       "             ('bkg_bkg_spectrum_main_composite_K_1_full',\n",
       "              Parameter K_1 = 0.27498928236506615 [1 / (cm2 keV s)]\n",
       "              (min_value = 0.0001, max_value = 10.0, delta = 0.1, free = True)),\n",
       "             ('bkg_bkg_spectrum_main_composite_piv_1_full',\n",
       "              Parameter piv_1 = 100.0 [keV]\n",
       "              (min_value = None, max_value = None, delta = 0.1, free = False)),\n",
       "             ('bkg_bkg_spectrum_main_composite_index_1_full',\n",
       "              Parameter index_1 = -1.3951095106851756 []\n",
       "              (min_value = -10.0, max_value = 10.0, delta = 0.20099999999999998, free = True)),\n",
       "             ('bkg_bkg_spectrum_main_composite_F_2_full',\n",
       "              Parameter F_2 = 30.409800680506947 [1 / (cm2 s)]\n",
       "              (min_value = 0.0, max_value = 1000.0, delta = 0.1, free = True)),\n",
       "             ('bkg_bkg_spectrum_main_composite_mu_2_full',\n",
       "              Parameter mu_2 = 511.0 [keV]\n",
       "              (min_value = None, max_value = None, delta = 0.1, free = False)),\n",
       "             ('bkg_bkg_spectrum_main_composite_sigma_2_full',\n",
       "              Parameter sigma_2 = 26.69233808298834 [keV]\n",
       "              (min_value = 2.0, max_value = 30.0, delta = 0.1, free = True)),\n",
       "             ('bkg_cons_bkg_full',\n",
       "              Parameter cons_bkg = 1.0 []\n",
       "              (min_value = 0.8, max_value = 1.2, delta = 0.05, free = False))])"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "modeled_background_plugin.nuisance_parameters"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae59d4f5",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "source": [
    "and the fitting engine will use them in the fit. The parameters will still be connected to the background plugin and its model and thus we can free/fix them there as well as set priors on them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d06eaa57",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:41.626357Z",
     "iopub.status.busy": "2022-09-27T11:14:41.625785Z",
     "iopub.status.idle": "2022-09-27T11:14:41.954187Z",
     "shell.execute_reply": "2022-09-27T11:14:41.953486Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">11:14:41 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1042\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1042</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m11:14:41\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=941519;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=839232;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1042\u001b\\\u001b[2m1042\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.K</th>\n",
       "      <td>1.66 -0.11 +0.12</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.xb</th>\n",
       "      <td>(3.23 +/- 0.14) x 10^2</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.alpha</th>\n",
       "      <td>(-2.1 +/- 0.7) x 10^-1</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Broken_powerlaw.beta</th>\n",
       "      <td>-3.11 +/- 0.19</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>K_1</th>\n",
       "      <td>(2.89 +/- 0.34) x 10^-1</td>\n",
       "      <td>1 / (cm2 keV s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>index_1</th>\n",
       "      <td>-1.38 +/- 0.04</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>F_2</th>\n",
       "      <td>(3.2 +/- 0.5) x 10</td>\n",
       "      <td>1 / (cm2 s)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sigma_2</th>\n",
       "      <td>(2.48 +/- 0.35) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                             result  \\\n",
       "parameter                                                             \n",
       "source.spectrum.main.Broken_powerlaw.K             1.66 -0.11 +0.12   \n",
       "source.spectrum.main.Broken_powerlaw.xb      (3.23 +/- 0.14) x 10^2   \n",
       "source.spectrum.main.Broken_powerlaw.alpha   (-2.1 +/- 0.7) x 10^-1   \n",
       "source.spectrum.main.Broken_powerlaw.beta            -3.11 +/- 0.19   \n",
       "K_1                                         (2.89 +/- 0.34) x 10^-1   \n",
       "index_1                                              -1.38 +/- 0.04   \n",
       "F_2                                              (3.2 +/- 0.5) x 10   \n",
       "sigma_2                                        (2.48 +/- 0.35) x 10   \n",
       "\n",
       "                                                       unit  \n",
       "parameter                                                    \n",
       "source.spectrum.main.Broken_powerlaw.K      1 / (cm2 keV s)  \n",
       "source.spectrum.main.Broken_powerlaw.xb                 keV  \n",
       "source.spectrum.main.Broken_powerlaw.alpha                   \n",
       "source.spectrum.main.Broken_powerlaw.beta                    \n",
       "K_1                                         1 / (cm2 keV s)  \n",
       "index_1                                                      \n",
       "F_2                                             1 / (cm2 s)  \n",
       "sigma_2                                                 keV  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table139620239422128\">\n",
       "<tr><td>1.00</td><td>-0.60</td><td>0.74</td><td>0.06</td><td>0.07</td><td>-0.18</td><td>0.01</td><td>0.01</td></tr>\n",
       "<tr><td>-0.60</td><td>1.00</td><td>-0.47</td><td>-0.61</td><td>0.01</td><td>0.23</td><td>-0.11</td><td>-0.05</td></tr>\n",
       "<tr><td>0.74</td><td>-0.47</td><td>1.00</td><td>0.05</td><td>0.32</td><td>-0.28</td><td>-0.00</td><td>-0.00</td></tr>\n",
       "<tr><td>0.06</td><td>-0.61</td><td>0.05</td><td>1.00</td><td>-0.21</td><td>-0.33</td><td>-0.00</td><td>0.02</td></tr>\n",
       "<tr><td>0.07</td><td>0.01</td><td>0.32</td><td>-0.21</td><td>1.00</td><td>0.12</td><td>-0.04</td><td>-0.06</td></tr>\n",
       "<tr><td>-0.18</td><td>0.23</td><td>-0.28</td><td>-0.33</td><td>0.12</td><td>1.00</td><td>-0.03</td><td>-0.05</td></tr>\n",
       "<tr><td>0.01</td><td>-0.11</td><td>-0.00</td><td>-0.00</td><td>-0.04</td><td>-0.03</td><td>1.00</td><td>0.18</td></tr>\n",
       "<tr><td>0.01</td><td>-0.05</td><td>-0.00</td><td>0.02</td><td>-0.06</td><td>-0.05</td><td>0.18</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.60  0.74  0.06  0.07 -0.18  0.01  0.01\n",
       "-0.60  1.00 -0.47 -0.61  0.01  0.23 -0.11 -0.05\n",
       " 0.74 -0.47  1.00  0.05  0.32 -0.28 -0.00 -0.00\n",
       " 0.06 -0.61  0.05  1.00 -0.21 -0.33 -0.00  0.02\n",
       " 0.07  0.01  0.32 -0.21  1.00  0.12 -0.04 -0.06\n",
       "-0.18  0.23 -0.28 -0.33  0.12  1.00 -0.03 -0.05\n",
       " 0.01 -0.11 -0.00 -0.00 -0.04 -0.03  1.00  0.18\n",
       " 0.01 -0.05 -0.00  0.02 -0.06 -0.05  0.18  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>full</th>\n",
       "      <td>527.692537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>527.692537</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "full         527.692537\n",
       "total        527.692537"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>1072.406352</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>1095.470157</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC           1072.406352\n",
       "BIC           1095.470157"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# instance the source model... the background plugin has it's model already specified\n",
    "bpl = Broken_powerlaw(piv=300, xb=500)\n",
    "\n",
    "bpl.K.bounds = (1e-5, 1e1)\n",
    "bpl.xb.bounds = (1e1, 1e4)\n",
    "\n",
    "ps_src = PointSource(\"source\", 0, 0, bpl)\n",
    "\n",
    "src_model = Model(ps_src)\n",
    "\n",
    "\n",
    "jl_src = JointLikelihood(src_model, DataList(modeled_background_plugin))\n",
    "\n",
    "_ = jl_src.fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9e477a2b",
   "metadata": {
    "deletable": true,
    "editable": true,
    "execution": {
     "iopub.execute_input": "2022-09-27T11:14:41.957567Z",
     "iopub.status.busy": "2022-09-27T11:14:41.957069Z",
     "iopub.status.idle": "2022-09-27T11:14:43.651824Z",
     "shell.execute_reply": "2022-09-27T11:14:43.651030Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "findfont: Generic family 'sans-serif' not found because none of the following families were found: Helvetica\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1040x910 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# over plot the joint background and source fits\n",
    "fig = modeled_background_plugin.display_model(step=False)\n",
    "\n",
    "_ = background_plugin.display_model(\n",
    "    data_color=\"#1A68F0\", model_color=\"#FF9700\", model_subplot=fig.axes, step=False\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "459bc1f5",
   "metadata": {
    "deletable": true,
    "editable": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
